

Welcome to HW project.

The file path is: /home/csg/Huawei-Storage-Competition/test/dataset/case_78.txt
head info : [262,377626,1]

io count = 2000


base_totaltime = 19996869.000142
base_tapeBeltWear = 12904017.000000
base_tapeMotorWear = 4498.000000
maxbase = 199968690.001421
new base_totaltime = 0.100000
new base_tapeBeltWear = 0.064530
new base_tapeMotorWear = 0.000022
backup
Reading TOUR...done
done
ASCENT_CANDIDATES = 50
BACKBONE_TRIALS = 0
BACKTRACKING = NO
# CANDIDATE_FILE =
CANDIDATE_SET_TYPE = POPMUSIC
# EDGE_FILE =
EXCESS = 0.00024975
EXTRA_CANDIDATES = 0 
EXTRA_CANDIDATE_SET_TYPE = QUADRANT
GAIN23 = YES
GAIN_CRITERION = YES
INITIAL_PERIOD = 2002
INITIAL_STEP_SIZE = 1
INITIAL_TOUR_ALGORITHM = WALK
# INITIAL_TOUR_FILE = 
INITIAL_TOUR_FRACTION = 1.000
# INPUT_TOUR_FILE = 
KICK_TYPE = 0
KICKS = 1
# MAX_BREADTH =
MAX_CANDIDATES = 5 
MAX_SWAPS = 4004
MAX_TRIALS = 4004
# MERGE_TOUR_FILE =
MOVE_TYPE = 3
# NONSEQUENTIAL_MOVE_TYPE = 3
# OPTIMUM =
# OUTPUT_TOUR_FILE = 
PATCHING_A = 1 
PATCHING_C = 0 
# PI_FILE = 
POPMUSIC_INITIAL_TOUR = YES
POPMUSIC_MAX_NEIGHBORS = 5
POPMUSIC_SAMPLE_SIZE = 25
POPMUSIC_SOLUTIONS = 5
POPMUSIC_TRIALS = 1
# POPULATION_SIZE = 0
PRECISION = 100
# PROBLEM_FILE = 
RECOMBINATION = IPT
RESTRICTED_SEARCH = YES
RUNS = 1
SEED = 1
STOP_AT_OPTIMUM = YES
SUBGRADIENT = NO
# SUBPROBLEM_SIZE =
# SUBPROBLEM_TOUR_FILE = 
SUBSEQUENT_MOVE_TYPE = 3
SUBSEQUENT_PATCHING = YES
# TIME_LIMIT =
TOTAL_TIME_LIMIT = 40.0
# TOUR_FILE = 
TRACE_LEVEL = 1

Lower bound = 8323197.0, Ascent time = 0.75 sec.
Cand.min = 2, Cand.avg = 5.1, Cand.max = 7
Edges.fixed = 2003 [Cost = 0]
Preprocessing time = 0.75 sec.
* 1: Cost = 36191507, Time = 0.03 sec. 
* 2: Cost = 36036835, Time = 0.05 sec. 
* 3: Cost = 35772902, Time = 0.06 sec. 
* 4: Cost = 35574311, Time = 0.08 sec. 
* 5: Cost = 35413462, Time = 0.09 sec. 
* 6: Cost = 35377862, Time = 0.11 sec. 
* 7: Cost = 35376830, Time = 0.12 sec. 
* 8: Cost = 35366673, Time = 0.14 sec. 
* 9: Cost = 35212806, Time = 0.16 sec. 
* 10: Cost = 35176857, Time = 0.17 sec. 
* 11: Cost = 35172381, Time = 0.19 sec. 
* 12: Cost = 35167865, Time = 0.21 sec. 
* 13: Cost = 35167454, Time = 0.22 sec. 
* 14: Cost = 34976669, Time = 0.23 sec. 
* 15: Cost = 34976435, Time = 0.25 sec. 
* 16: Cost = 34973685, Time = 0.26 sec. 
* 17: Cost = 34969217, Time = 0.28 sec. 
* 18: Cost = 34968248, Time = 0.29 sec. 
* 19: Cost = 34962931, Time = 0.30 sec. 
* 20: Cost = 34951766, Time = 0.32 sec. 
* 21: Cost = 34950095, Time = 0.33 sec. 
* 22: Cost = 34947068, Time = 0.34 sec. 
* 23: Cost = 34946742, Time = 0.36 sec. 
* 24: Cost = 34946191, Time = 0.37 sec. 
* 25: Cost = 34935634, Time = 0.38 sec. 
* 26: Cost = 34935633, Time = 0.39 sec. 
* 27: Cost = 34935330, Time = 0.41 sec. 
* 28: Cost = 34933069, Time = 0.43 sec. 
* 30: Cost = 34931546, Time = 0.45 sec. 
* 34: Cost = 34931346, Time = 0.50 sec. 
* 37: Cost = 34931250, Time = 0.55 sec. 
* 40: Cost = 34931101, Time = 0.59 sec. 
* 41: Cost = 34930314, Time = 0.60 sec. 
* 47: Cost = 34930257, Time = 0.68 sec. 
* 48: Cost = 34929090, Time = 0.70 sec. 
* 50: Cost = 34929036, Time = 0.72 sec. 
* 53: Cost = 34928998, Time = 0.76 sec. 
* 55: Cost = 34925306, Time = 0.78 sec. 
* 57: Cost = 34924213, Time = 0.81 sec. 
* 58: Cost = 34923865, Time = 0.82 sec. 
* 59: Cost = 34923598, Time = 0.84 sec. 
* 62: Cost = 34859735, Time = 0.88 sec. 
* 64: Cost = 34846980, Time = 0.90 sec. 
* 66: Cost = 34846842, Time = 0.93 sec. 
* 73: Cost = 34846383, Time = 1.02 sec. 
* 74: Cost = 34694357, Time = 1.04 sec. 
* 75: Cost = 34693709, Time = 1.05 sec. 
* 80: Cost = 34687851, Time = 1.12 sec. 
* 81: Cost = 34687730, Time = 1.13 sec. 
* 89: Cost = 34685852, Time = 1.23 sec. 
* 90: Cost = 34685789, Time = 1.25 sec. 
* 94: Cost = 34685114, Time = 1.31 sec. 
* 108: Cost = 34685067, Time = 1.50 sec. 
* 109: Cost = 34684860, Time = 1.52 sec. 
* 110: Cost = 34684228, Time = 1.53 sec. 
* 111: Cost = 34677877, Time = 1.54 sec. 
* 112: Cost = 34677752, Time = 1.56 sec. 
* 113: Cost = 34677751, Time = 1.58 sec. 
* 117: Cost = 34677736, Time = 1.63 sec. 
* 123: Cost = 34677546, Time = 1.71 sec. 
* 129: Cost = 34668927, Time = 1.79 sec. 
* 130: Cost = 34627337, Time = 1.81 sec. 
* 135: Cost = 34627251, Time = 1.88 sec. 
* 136: Cost = 34626536, Time = 1.89 sec. 
* 156: Cost = 34605937, Time = 2.17 sec. 
* 163: Cost = 34605428, Time = 2.28 sec. 
* 166: Cost = 34605323, Time = 2.31 sec. 
* 180: Cost = 34595305, Time = 2.51 sec. 
* 206: Cost = 34593709, Time = 2.88 sec. 
* 207: Cost = 34593589, Time = 2.90 sec. 
* 208: Cost = 34593470, Time = 2.91 sec. 
* 210: Cost = 34593272, Time = 2.95 sec. 
* 211: Cost = 34593271, Time = 2.96 sec. 
* 212: Cost = 34563867, Time = 2.98 sec. 
* 215: Cost = 34563747, Time = 3.02 sec. 
*** Within 20s the extent of improvement(62789(<202968.7)) is too small in 1.0s ***
Run 1: Cost = 34563747, Time = 3.02 sec. 

Successes/Runs = 0/1
Cost.min = 34563747, Cost.avg = 34563747.00, Cost.max = 34563747
Gap.min = 0.0000%, Gap.avg = 0.0000%, Gap.max = 0.0000%
Trials.min = 215, Trials.avg = 215.0, Trials.max = 215
Time.min = 3.02 sec., Time.avg = 3.02 sec., Time.max = 3.02 sec.
Time.total = 3.90 sec.

Key Metrics:
	ioCount:			 2000
	algorithmRunningDuration:	 3936.497 (ms)
	memoryUse:			 7664.70 (KB)
	addressingDuration:		 3118604 (ms)
	readDuration:			 2051476 (ms)
	tapeBeltWear:			 4800357
	tapeMotorWear:			 288
	errorIOCount:			 0

指标写入文件 ./metrics.txt
