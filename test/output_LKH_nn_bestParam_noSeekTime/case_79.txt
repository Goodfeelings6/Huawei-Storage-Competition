

Welcome to HW project.

The file path is: /home/csg/Huawei-Storage-Competition/test/dataset/case_79.txt
head info : [58,184092,0]

io count = 2000


base_totaltime = 20096221.000146
base_tapeBeltWear = 12924337.000000
base_tapeMotorWear = 4445.000000
maxbase = 200962210.001459
new base_totaltime = 0.100000
new base_tapeBeltWear = 0.064312
new base_tapeMotorWear = 0.000022
backup
Reading TOUR...done
done
ASCENT_CANDIDATES = 50
BACKBONE_TRIALS = 0
BACKTRACKING = NO
# CANDIDATE_FILE =
CANDIDATE_SET_TYPE = POPMUSIC
# EDGE_FILE =
EXCESS = 0.00024975
EXTRA_CANDIDATES = 0 
EXTRA_CANDIDATE_SET_TYPE = QUADRANT
GAIN23 = YES
GAIN_CRITERION = YES
INITIAL_PERIOD = 2002
INITIAL_STEP_SIZE = 1
INITIAL_TOUR_ALGORITHM = WALK
# INITIAL_TOUR_FILE = 
INITIAL_TOUR_FRACTION = 1.000
# INPUT_TOUR_FILE = 
KICK_TYPE = 0
KICKS = 1
# MAX_BREADTH =
MAX_CANDIDATES = 5 
MAX_SWAPS = 4004
MAX_TRIALS = 4004
# MERGE_TOUR_FILE =
MOVE_TYPE = 3
# NONSEQUENTIAL_MOVE_TYPE = 3
# OPTIMUM =
# OUTPUT_TOUR_FILE = 
PATCHING_A = 1 
PATCHING_C = 0 
# PI_FILE = 
POPMUSIC_INITIAL_TOUR = YES
POPMUSIC_MAX_NEIGHBORS = 5
POPMUSIC_SAMPLE_SIZE = 25
POPMUSIC_SOLUTIONS = 5
POPMUSIC_TRIALS = 1
# POPULATION_SIZE = 0
PRECISION = 100
# PROBLEM_FILE = 
RECOMBINATION = IPT
RESTRICTED_SEARCH = YES
RUNS = 1
SEED = 1
STOP_AT_OPTIMUM = YES
SUBGRADIENT = NO
# SUBPROBLEM_SIZE =
# SUBPROBLEM_TOUR_FILE = 
SUBSEQUENT_MOVE_TYPE = 3
SUBSEQUENT_PATCHING = YES
# TIME_LIMIT =
TOTAL_TIME_LIMIT = 40.0
# TOUR_FILE = 
TRACE_LEVEL = 1

Lower bound = 7599013.0, Ascent time = 0.75 sec.
Cand.min = 2, Cand.avg = 5.1, Cand.max = 7
Edges.fixed = 2003 [Cost = 0]
Preprocessing time = 0.75 sec.
* 1: Cost = 39342299, Time = 0.04 sec. 
* 2: Cost = 39008614, Time = 0.06 sec. 
* 3: Cost = 39005961, Time = 0.07 sec. 
* 4: Cost = 38708736, Time = 0.08 sec. 
* 5: Cost = 38699747, Time = 0.09 sec. 
* 6: Cost = 38699387, Time = 0.11 sec. 
* 7: Cost = 38699128, Time = 0.12 sec. 
* 8: Cost = 38335714, Time = 0.13 sec. 
* 9: Cost = 38150684, Time = 0.15 sec. 
* 10: Cost = 38144493, Time = 0.16 sec. 
* 12: Cost = 38130574, Time = 0.19 sec. 
* 13: Cost = 38121315, Time = 0.21 sec. 
* 14: Cost = 38118942, Time = 0.23 sec. 
* 15: Cost = 38032160, Time = 0.24 sec. 
* 16: Cost = 38032049, Time = 0.26 sec. 
* 17: Cost = 38007046, Time = 0.27 sec. 
* 18: Cost = 38006335, Time = 0.29 sec. 
* 19: Cost = 37959288, Time = 0.30 sec. 
* 20: Cost = 37958670, Time = 0.32 sec. 
* 21: Cost = 37953901, Time = 0.33 sec. 
* 22: Cost = 37953900, Time = 0.34 sec. 
* 24: Cost = 37947174, Time = 0.37 sec. 
* 25: Cost = 37946344, Time = 0.38 sec. 
* 26: Cost = 37944992, Time = 0.39 sec. 
* 28: Cost = 37941895, Time = 0.43 sec. 
* 29: Cost = 37941847, Time = 0.44 sec. 
* 30: Cost = 37941721, Time = 0.46 sec. 
* 32: Cost = 37939593, Time = 0.48 sec. 
* 33: Cost = 37938264, Time = 0.50 sec. 
* 34: Cost = 37922892, Time = 0.51 sec. 
* 36: Cost = 37735853, Time = 0.54 sec. 
* 39: Cost = 37735846, Time = 0.59 sec. 
* 40: Cost = 37726665, Time = 0.61 sec. 
* 41: Cost = 37726470, Time = 0.62 sec. 
* 44: Cost = 37726050, Time = 0.66 sec. 
* 45: Cost = 37725592, Time = 0.68 sec. 
* 46: Cost = 37571543, Time = 0.69 sec. 
* 47: Cost = 37571399, Time = 0.70 sec. 
* 48: Cost = 37571380, Time = 0.72 sec. 
* 52: Cost = 37547695, Time = 0.78 sec. 
* 53: Cost = 37507855, Time = 0.80 sec. 
* 54: Cost = 37507686, Time = 0.81 sec. 
* 56: Cost = 37481933, Time = 0.83 sec. 
* 57: Cost = 37481851, Time = 0.85 sec. 
* 59: Cost = 37481845, Time = 0.88 sec. 
* 63: Cost = 37481599, Time = 0.93 sec. 
* 66: Cost = 37479683, Time = 0.98 sec. 
* 68: Cost = 37479045, Time = 1.00 sec. 
* 70: Cost = 37478834, Time = 1.04 sec. 
* 71: Cost = 37478829, Time = 1.05 sec. 
* 76: Cost = 37478306, Time = 1.13 sec. 
* 78: Cost = 37474302, Time = 1.16 sec. 
* 79: Cost = 37474271, Time = 1.17 sec. 
* 80: Cost = 37474112, Time = 1.19 sec. 
* 81: Cost = 37474109, Time = 1.21 sec. 
* 84: Cost = 37473736, Time = 1.25 sec. 
* 88: Cost = 37473701, Time = 1.32 sec. 
* 95: Cost = 37473609, Time = 1.42 sec. 
* 98: Cost = 37473605, Time = 1.47 sec. 
* 99: Cost = 37468931, Time = 1.49 sec. 
* 100: Cost = 37439679, Time = 1.50 sec. 
* 103: Cost = 37438771, Time = 1.55 sec. 
* 105: Cost = 37438755, Time = 1.59 sec. 
* 112: Cost = 37438750, Time = 1.69 sec. 
* 117: Cost = 37438227, Time = 1.76 sec. 
* 121: Cost = 37438224, Time = 1.82 sec. 
* 128: Cost = 37438102, Time = 1.92 sec. 
* 129: Cost = 37437460, Time = 1.93 sec. 
* 130: Cost = 37437425, Time = 1.95 sec. 
* 132: Cost = 37437422, Time = 1.97 sec. 
*** Within 20s the extent of improvement(41623(<203962.2)) is too small in 1.0s ***
Run 1: Cost = 37437422, Time = 2.01 sec. 

Successes/Runs = 0/1
Cost.min = 37437422, Cost.avg = 37437422.00, Cost.max = 37437422
Gap.min = 0.0000%, Gap.avg = 0.0000%, Gap.max = 0.0000%
Trials.min = 134, Trials.avg = 134.0, Trials.max = 134
Time.min = 2.01 sec., Time.avg = 2.01 sec., Time.max = 2.01 sec.
Time.total = 2.89 sec.

Key Metrics:
	ioCount:			 2000
	algorithmRunningDuration:	 2925.974 (ms)
	memoryUse:			 7582.13 (KB)
	addressingDuration:		 3391627 (ms)
	readDuration:			 2256302 (ms)
	tapeBeltWear:			 5176996
	tapeMotorWear:			 339
	errorIOCount:			 0

指标写入文件 ./metrics.txt
