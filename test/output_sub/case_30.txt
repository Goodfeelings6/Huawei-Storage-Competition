

Welcome to HW project.

The file path is: ./dataset_sub/case_30.txt
head info : [77,273568,0]

io count = 1000


base_totaltime = 10277790.000093
base_tapeBeltWear = 6949318.000000
base_tapeMotorWear = 2189.000000
maxbase = 102777900.000930
new base_totaltime = 0.100000
new base_tapeBeltWear = 0.067615
new base_tapeMotorWear = 0.000021
hdd
p->ScheduleScoreInSecond = 56388.950000
p->PenaltyScoreInSecond = 981390.050009
Reading TOUR...done
done
ASCENT_CANDIDATES = 50
BACKBONE_TRIALS = 0
BACKTRACKING = NO
# CANDIDATE_FILE =
CANDIDATE_SET_TYPE = POPMUSIC
# EDGE_FILE =
EXCESS = 0.000499002
EXTRA_CANDIDATES = 0 
EXTRA_CANDIDATE_SET_TYPE = QUADRANT
GAIN23 = YES
GAIN_CRITERION = YES
INITIAL_PERIOD = 1002
INITIAL_STEP_SIZE = 1
INITIAL_TOUR_ALGORITHM = WALK
# INITIAL_TOUR_FILE = 
INITIAL_TOUR_FRACTION = 1.000
# INPUT_TOUR_FILE = 
KICK_TYPE = 0
KICKS = 1
# MAX_BREADTH =
MAX_CANDIDATES = 5 
MAX_SWAPS = 2004
MAX_TRIALS = 2004
# MERGE_TOUR_FILE =
MOVE_TYPE = 3
# NONSEQUENTIAL_MOVE_TYPE = 3
# OPTIMUM =
# OUTPUT_TOUR_FILE = 
PATCHING_A = 1 
PATCHING_C = 0 
# PI_FILE = 
POPMUSIC_INITIAL_TOUR = YES
POPMUSIC_MAX_NEIGHBORS = 5
POPMUSIC_SAMPLE_SIZE = 10
POPMUSIC_SOLUTIONS = 30
POPMUSIC_TRIALS = 1
# POPULATION_SIZE = 0
PRECISION = 100
# PROBLEM_FILE = 
RECOMBINATION = IPT
RESTRICTED_SEARCH = YES
RUNS = 1
SEED = 1
STOP_AT_OPTIMUM = YES
SUBGRADIENT = NO
# SUBPROBLEM_SIZE =
# SUBPROBLEM_TOUR_FILE = 
SUBSEQUENT_MOVE_TYPE = 3
SUBSEQUENT_PATCHING = YES
# TIME_LIMIT =
TOTAL_TIME_LIMIT = 40.0
# TOUR_FILE = 
TRACE_LEVEL = 1

Lower bound = 8843858.0, Ascent time = 0.57 sec.
Cand.min = 2, Cand.avg = 5.9, Cand.max = 7
Edges.fixed = 1003 [Cost = 0]
Preprocessing time = 0.57 sec.
* 1: Cost = 27980247, Time = 0.02 sec. 
* 2: Cost = 27962249, Time = 0.03 sec. 
* 4: Cost = 27543283, Time = 0.05 sec. 
* 5: Cost = 27542678, Time = 0.05 sec. 
* 6: Cost = 27534179, Time = 0.06 sec. 
* 7: Cost = 27531561, Time = 0.07 sec. 
* 8: Cost = 27527252, Time = 0.07 sec. 
* 9: Cost = 27468170, Time = 0.08 sec. 
* 10: Cost = 27468133, Time = 0.09 sec. 
* 11: Cost = 27467322, Time = 0.09 sec. 
* 12: Cost = 27435128, Time = 0.10 sec. 
* 13: Cost = 27434323, Time = 0.11 sec. 
* 15: Cost = 27351549, Time = 0.12 sec. 
* 17: Cost = 27351450, Time = 0.14 sec. 
* 18: Cost = 27351379, Time = 0.15 sec. 
* 21: Cost = 27347744, Time = 0.17 sec. 
* 23: Cost = 27342879, Time = 0.19 sec. 
* 24: Cost = 27324790, Time = 0.19 sec. 
* 30: Cost = 27299477, Time = 0.24 sec. 
* 31: Cost = 27299237, Time = 0.25 sec. 
* 32: Cost = 27299167, Time = 0.26 sec. 
* 36: Cost = 27299113, Time = 0.29 sec. 
* 38: Cost = 27299068, Time = 0.30 sec. 
* 43: Cost = 27298928, Time = 0.34 sec. 
* 45: Cost = 27298753, Time = 0.35 sec. 
* 59: Cost = 27289833, Time = 0.46 sec. 
* 61: Cost = 27285113, Time = 0.47 sec. 
* 74: Cost = 27285103, Time = 0.56 sec. 
* 76: Cost = 27284717, Time = 0.58 sec. 
* 82: Cost = 27284613, Time = 0.62 sec. 
* 84: Cost = 27284473, Time = 0.64 sec. 
* 85: Cost = 27283798, Time = 0.64 sec. 
* 86: Cost = 27281940, Time = 0.65 sec. 
* 88: Cost = 27281905, Time = 0.67 sec. 
* 90: Cost = 27281525, Time = 0.69 sec. 
* 93: Cost = 27281480, Time = 0.71 sec. 
* 95: Cost = 27281305, Time = 0.73 sec. 
* 100: Cost = 27279950, Time = 0.77 sec. 
* 101: Cost = 27279755, Time = 0.78 sec. 
* 105: Cost = 27274910, Time = 0.81 sec. 
* 108: Cost = 27268517, Time = 0.83 sec. 
* 117: Cost = 27264563, Time = 0.90 sec. 
* 123: Cost = 27264093, Time = 0.94 sec. 
* 159: Cost = 27263833, Time = 1.21 sec. 
* 171: Cost = 27262425, Time = 1.32 sec. 
* 174: Cost = 27255582, Time = 1.34 sec. 
* 181: Cost = 27254961, Time = 1.40 sec. 
* 182: Cost = 27254897, Time = 1.40 sec. 
* 189: Cost = 27254401, Time = 1.46 sec. 
* 210: Cost = 27254389, Time = 1.62 sec. 
* 211: Cost = 27252531, Time = 1.63 sec. 
* 216: Cost = 27252008, Time = 1.67 sec. 
* 240: Cost = 27197375, Time = 1.87 sec. 
* 243: Cost = 27195265, Time = 1.90 sec. 
* 250: Cost = 27194955, Time = 1.95 sec. 
* 299: Cost = 27194835, Time = 2.34 sec. 
* 389: Cost = 27192091, Time = 3.06 sec. 
* 390: Cost = 27191457, Time = 3.07 sec. 
* 391: Cost = 27191019, Time = 3.07 sec. 
* 405: Cost = 27190648, Time = 3.18 sec. 
* 431: Cost = 27190593, Time = 3.39 sec. 
* 449: Cost = 27190434, Time = 3.53 sec. 
* 450: Cost = 27190149, Time = 3.53 sec. 
* 484: Cost = 27188788, Time = 3.82 sec. 
* 493: Cost = 27187558, Time = 3.89 sec. 
* 498: Cost = 27187461, Time = 3.93 sec. 
*** Within 20s the extent of improvement(7494(<112777.9)) is too small in 2.0s ***
Run 1: Cost = 27187461, Time = 4.01 sec. 

Successes/Runs = 0/1
Cost.min = 27187461, Cost.avg = 27187461.00, Cost.max = 27187461
Gap.min = 0.0000%, Gap.avg = 0.0000%, Gap.max = 0.0000%
Trials.min = 508, Trials.avg = 508.0, Trials.max = 508
Time.min = 4.01 sec., Time.avg = 4.01 sec., Time.max = 4.01 sec.
Time.total = 4.64 sec.

Key Metrics:
	ioCount:			 1000
	algorithmRunningDuration:	 4665.411 (ms)
	memoryUse:			 5867.06 (KB)
	addressingDuration:		 2674382 (ms)
	readDuration:			 1033047 (ms)
	tapeBeltWear:			 3684660
	tapeMotorWear:			 177
	errorIOCount:			 0

指标写入文件 ./metrics.txt
