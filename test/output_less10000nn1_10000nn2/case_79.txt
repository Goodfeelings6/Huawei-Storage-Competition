

Welcome to HW project.

The file path is: ./dataset/case_79.txt
head info : [58,184092,0]

io count = 2000


base_totaltime = 20096221.000148
base_tapeBeltWear = 12924337.000000
base_tapeMotorWear = 4445.000000
maxbase = 20096221.000148
new base_totaltime = 1.000000
new base_tapeBeltWear = 0.643123
new base_tapeMotorWear = 0.000221
backup
Reading TOUR...done
done
ASCENT_CANDIDATES = 50
BACKBONE_TRIALS = 0
BACKTRACKING = NO
# CANDIDATE_FILE =
CANDIDATE_SET_TYPE = POPMUSIC
# EDGE_FILE =
EXCESS = 0.00024975
EXTRA_CANDIDATES = 0 
EXTRA_CANDIDATE_SET_TYPE = QUADRANT
GAIN23 = YES
GAIN_CRITERION = YES
INITIAL_PERIOD = 2002
INITIAL_STEP_SIZE = 1
INITIAL_TOUR_ALGORITHM = WALK
# INITIAL_TOUR_FILE = 
INITIAL_TOUR_FRACTION = 1.000
# INPUT_TOUR_FILE = 
KICK_TYPE = 0
KICKS = 1
# MAX_BREADTH =
MAX_CANDIDATES = 5 
MAX_SWAPS = 4004
MAX_TRIALS = 4004
# MERGE_TOUR_FILE =
MOVE_TYPE = 3
# NONSEQUENTIAL_MOVE_TYPE = 3
# OPTIMUM =
# OUTPUT_TOUR_FILE = 
PATCHING_A = 1 
PATCHING_C = 0 
# PI_FILE = 
POPMUSIC_INITIAL_TOUR = YES
POPMUSIC_MAX_NEIGHBORS = 5
POPMUSIC_SAMPLE_SIZE = 20
POPMUSIC_SOLUTIONS = 5
POPMUSIC_TRIALS = 1
# POPULATION_SIZE = 0
PRECISION = 100
# PROBLEM_FILE = 
RECOMBINATION = IPT
RESTRICTED_SEARCH = YES
RUNS = 1
SEED = 1
STOP_AT_OPTIMUM = YES
SUBGRADIENT = NO
# SUBPROBLEM_SIZE =
# SUBPROBLEM_TOUR_FILE = 
SUBSEQUENT_MOVE_TYPE = 3
SUBSEQUENT_PATCHING = YES
# TIME_LIMIT =
TOTAL_TIME_LIMIT = 40.0
# TOUR_FILE = 
TRACE_LEVEL = 1

Lower bound = 828656.0, Ascent time = 0.53 sec.
Cand.min = 2, Cand.avg = 5.2, Cand.max = 7
Edges.fixed = 2003 [Cost = 0]
Preprocessing time = 0.53 sec.
* 1: Cost = 3869920, Time = 0.03 sec. 
* 2: Cost = 3852156, Time = 0.05 sec. 
* 3: Cost = 3806208, Time = 0.06 sec. 
* 4: Cost = 3806061, Time = 0.07 sec. 
* 5: Cost = 3794557, Time = 0.08 sec. 
* 6: Cost = 3794511, Time = 0.10 sec. 
* 7: Cost = 3793993, Time = 0.11 sec. 
* 8: Cost = 3792697, Time = 0.12 sec. 
* 9: Cost = 3774444, Time = 0.13 sec. 
* 10: Cost = 3774419, Time = 0.14 sec. 
* 11: Cost = 3773925, Time = 0.16 sec. 
* 12: Cost = 3773253, Time = 0.17 sec. 
* 13: Cost = 3772933, Time = 0.19 sec. 
* 14: Cost = 3772636, Time = 0.20 sec. 
* 16: Cost = 3769379, Time = 0.23 sec. 
* 17: Cost = 3769217, Time = 0.24 sec. 
* 18: Cost = 3769151, Time = 0.26 sec. 
* 19: Cost = 3768502, Time = 0.27 sec. 
* 20: Cost = 3763751, Time = 0.28 sec. 
* 21: Cost = 3760666, Time = 0.30 sec. 
* 22: Cost = 3757188, Time = 0.31 sec. 
* 23: Cost = 3757186, Time = 0.32 sec. 
* 24: Cost = 3757112, Time = 0.34 sec. 
* 26: Cost = 3757078, Time = 0.37 sec. 
* 27: Cost = 3754793, Time = 0.38 sec. 
* 28: Cost = 3754645, Time = 0.39 sec. 
* 29: Cost = 3753455, Time = 0.40 sec. 
* 30: Cost = 3748116, Time = 0.42 sec. 
* 31: Cost = 3748050, Time = 0.43 sec. 
* 32: Cost = 3747833, Time = 0.45 sec. 
* 33: Cost = 3747780, Time = 0.47 sec. 
* 34: Cost = 3747756, Time = 0.48 sec. 
* 35: Cost = 3747670, Time = 0.49 sec. 
* 36: Cost = 3747096, Time = 0.51 sec. 
* 37: Cost = 3746943, Time = 0.52 sec. 
* 40: Cost = 3746914, Time = 0.56 sec. 
* 41: Cost = 3746908, Time = 0.58 sec. 
* 43: Cost = 3746814, Time = 0.61 sec. 
* 44: Cost = 3746809, Time = 0.62 sec. 
* 45: Cost = 3746704, Time = 0.63 sec. 
* 46: Cost = 3746684, Time = 0.65 sec. 
* 47: Cost = 3746676, Time = 0.66 sec. 
* 48: Cost = 3746632, Time = 0.68 sec. 
* 50: Cost = 3746492, Time = 0.71 sec. 
* 52: Cost = 3746259, Time = 0.74 sec. 
* 53: Cost = 3746174, Time = 0.75 sec. 
* 54: Cost = 3746173, Time = 0.76 sec. 
* 55: Cost = 3746171, Time = 0.78 sec. 
* 58: Cost = 3746065, Time = 0.82 sec. 
* 62: Cost = 3746052, Time = 0.88 sec. 
* 64: Cost = 3746039, Time = 0.91 sec. 
* 66: Cost = 3745989, Time = 0.94 sec. 
* 69: Cost = 3745923, Time = 0.98 sec. 
* 70: Cost = 3745862, Time = 0.99 sec. 
* 78: Cost = 3745766, Time = 1.12 sec. 
* 79: Cost = 3745763, Time = 1.14 sec. 
* 84: Cost = 3745663, Time = 1.21 sec. 
* 85: Cost = 3745649, Time = 1.23 sec. 
* 86: Cost = 3745597, Time = 1.24 sec. 
* 87: Cost = 3744303, Time = 1.26 sec. 
* 90: Cost = 3744185, Time = 1.30 sec. 
* 93: Cost = 3744145, Time = 1.34 sec. 
* 100: Cost = 3743598, Time = 1.44 sec. 
* 104: Cost = 3743500, Time = 1.51 sec. 
* 105: Cost = 3743463, Time = 1.52 sec. 
* 106: Cost = 3743460, Time = 1.53 sec. 
* 107: Cost = 3743244, Time = 1.55 sec. 
* 108: Cost = 3743214, Time = 1.56 sec. 
* 110: Cost = 3742453, Time = 1.59 sec. 
* 111: Cost = 3742420, Time = 1.61 sec. 
* 112: Cost = 3742415, Time = 1.63 sec. 
* 118: Cost = 3742401, Time = 1.71 sec. 
* 119: Cost = 3742383, Time = 1.73 sec. 
* 122: Cost = 3742306, Time = 1.77 sec. 
* 125: Cost = 3742226, Time = 1.82 sec. 
* 131: Cost = 3742224, Time = 1.91 sec. 
* 134: Cost = 3742206, Time = 1.96 sec. 
* 138: Cost = 3742169, Time = 2.01 sec. 
*** Within 20s the extent of improvement(3693(<20396.2)) is too small in 1.0s ***
Run 1: Cost = 3742169, Time = 2.01 sec. 

Successes/Runs = 0/1
Cost.min = 3742169, Cost.avg = 3742169.00, Cost.max = 3742169
Gap.min = 0.0000%, Gap.avg = 0.0000%, Gap.max = 0.0000%
Trials.min = 138, Trials.avg = 138.0, Trials.max = 138
Time.min = 2.01 sec., Time.avg = 2.01 sec., Time.max = 2.01 sec.
Time.total = 2.55 sec.

Key Metrics:
	ioCount:			 2000
	algorithmRunningDuration:	 2582.695 (ms)
	memoryUse:			 6809.23 (KB)
	addressingDuration:		 3382019 (ms)
	readDuration:			 2256302 (ms)
	tapeBeltWear:			 5194260
	tapeMotorWear:			 327
	errorIOCount:			 0

指标写入文件 ./metrics.txt
