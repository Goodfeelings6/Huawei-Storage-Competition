

Welcome to HW project.

The file path is: /home/csg/Huawei-Storage-Competition/test/dataset/case_431.txt
head info : [19,279443,1]

io count = 3000


Reading TOUR...done
done
ASCENT_CANDIDATES = 25
BACKBONE_TRIALS = 0
BACKTRACKING = NO
# CANDIDATE_FILE =
CANDIDATE_SET_TYPE = POPMUSIC
# EDGE_FILE =
EXCESS = 0.000166556
EXTRA_CANDIDATES = 0 
EXTRA_CANDIDATE_SET_TYPE = QUADRANT
GAIN23 = YES
GAIN_CRITERION = YES
INITIAL_PERIOD = 3002
INITIAL_STEP_SIZE = 1
INITIAL_TOUR_ALGORITHM = WALK
# INITIAL_TOUR_FILE = 
INITIAL_TOUR_FRACTION = 1.000
# INPUT_TOUR_FILE = 
KICK_TYPE = 0
KICKS = 1
# MAX_BREADTH =
MAX_CANDIDATES = 5 
MAX_SWAPS = 6004
MAX_TRIALS = 6004
# MERGE_TOUR_FILE =
MOVE_TYPE = 3
# NONSEQUENTIAL_MOVE_TYPE = 3
# OPTIMUM =
# OUTPUT_TOUR_FILE = 
PATCHING_A = 1 
PATCHING_C = 0 
# PI_FILE = 
POPMUSIC_INITIAL_TOUR = YES
POPMUSIC_MAX_NEIGHBORS = 5
POPMUSIC_SAMPLE_SIZE = 10
POPMUSIC_SOLUTIONS = 50
POPMUSIC_TRIALS = 1
# POPULATION_SIZE = 0
PRECISION = 100
# PROBLEM_FILE = 
RECOMBINATION = IPT
RESTRICTED_SEARCH = YES
RUNS = 1
SEED = 1
STOP_AT_OPTIMUM = YES
SUBGRADIENT = NO
# SUBPROBLEM_SIZE =
# SUBPROBLEM_TOUR_FILE = 
SUBSEQUENT_MOVE_TYPE = 3
SUBSEQUENT_PATCHING = YES
# TIME_LIMIT =
TOTAL_TIME_LIMIT = 20.0
# TOUR_FILE = 
TRACE_LEVEL = 1

Lower bound = 1177076.0, Ascent time = 4.23 sec.
Cand.min = 2, Cand.avg = 6.0, Cand.max = 7
Edges.fixed = 3003 [Cost = 0]
Preprocessing time = 4.25 sec.
* 1: Cost = 4524322, Time = 0.10 sec. 
* 2: Cost = 4506353, Time = 0.15 sec. 
* 3: Cost = 4482809, Time = 0.19 sec. 
* 4: Cost = 4479004, Time = 0.23 sec. 
* 5: Cost = 4477922, Time = 0.27 sec. 
* 6: Cost = 4471971, Time = 0.31 sec. 
* 7: Cost = 4469445, Time = 0.35 sec. 
* 8: Cost = 4467192, Time = 0.39 sec. 
* 9: Cost = 4466850, Time = 0.42 sec. 
* 10: Cost = 4461451, Time = 0.46 sec. 
* 11: Cost = 4459569, Time = 0.50 sec. 
* 12: Cost = 4459468, Time = 0.54 sec. 
* 13: Cost = 4458910, Time = 0.58 sec. 
* 14: Cost = 4458861, Time = 0.61 sec. 
* 15: Cost = 4456450, Time = 0.66 sec. 
* 19: Cost = 4456159, Time = 0.82 sec. 
* 26: Cost = 4446501, Time = 1.08 sec. 
* 27: Cost = 4445925, Time = 1.11 sec. 
* 28: Cost = 4443800, Time = 1.15 sec. 
* 29: Cost = 4443122, Time = 1.19 sec. 
* 30: Cost = 4442785, Time = 1.22 sec. 
* 31: Cost = 4442701, Time = 1.27 sec. 
* 34: Cost = 4442453, Time = 1.37 sec. 
* 35: Cost = 4442219, Time = 1.41 sec. 
* 36: Cost = 4441843, Time = 1.45 sec. 
* 37: Cost = 4441673, Time = 1.48 sec. 
* 38: Cost = 4441650, Time = 1.52 sec. 
* 39: Cost = 4440948, Time = 1.56 sec. 
* 40: Cost = 4440837, Time = 1.60 sec. 
* 42: Cost = 4440654, Time = 1.69 sec. 
* 45: Cost = 4437412, Time = 1.80 sec. 
* 47: Cost = 4437271, Time = 1.88 sec. 
* 48: Cost = 4437253, Time = 1.91 sec. 
* 52: Cost = 4437238, Time = 2.06 sec. 
* 57: Cost = 4437216, Time = 2.27 sec. 
* 59: Cost = 4437196, Time = 2.34 sec. 
* 60: Cost = 4437099, Time = 2.39 sec. 
* 63: Cost = 4437055, Time = 2.50 sec. 
* 66: Cost = 4436956, Time = 2.62 sec. 
* 67: Cost = 4436918, Time = 2.66 sec. 
* 71: Cost = 4436702, Time = 2.81 sec. 
* 74: Cost = 4433916, Time = 2.93 sec. 
* 76: Cost = 4433866, Time = 3.00 sec. 
* 77: Cost = 4433780, Time = 3.04 sec. 
* 78: Cost = 4433669, Time = 3.08 sec. 
* 80: Cost = 4433592, Time = 3.16 sec. 
* 81: Cost = 4433461, Time = 3.20 sec. 
* 82: Cost = 4433385, Time = 3.23 sec. 
* 89: Cost = 4433291, Time = 3.52 sec. 
* 90: Cost = 4432750, Time = 3.56 sec. 
* 91: Cost = 4432396, Time = 3.60 sec. 
* 92: Cost = 4422642, Time = 3.64 sec. 
* 94: Cost = 4419095, Time = 3.72 sec. 
* 95: Cost = 4418772, Time = 3.76 sec. 
* 97: Cost = 4418707, Time = 3.83 sec. 
* 99: Cost = 4418315, Time = 3.92 sec. 
* 100: Cost = 4418180, Time = 3.95 sec. 
* 101: Cost = 4417632, Time = 4.00 sec. 
* 103: Cost = 4417212, Time = 4.10 sec. 
* 105: Cost = 4416992, Time = 4.17 sec. 
* 106: Cost = 4416568, Time = 4.21 sec. 
* 107: Cost = 4415975, Time = 4.25 sec. 
* 108: Cost = 4415955, Time = 4.29 sec. 
* 110: Cost = 4415902, Time = 4.36 sec. 
* 112: Cost = 4415863, Time = 4.44 sec. 
* 116: Cost = 4415772, Time = 4.59 sec. 
* 118: Cost = 4415577, Time = 4.67 sec. 
* 121: Cost = 4415532, Time = 4.80 sec. 
* 127: Cost = 4415470, Time = 5.03 sec. 
* 128: Cost = 4415410, Time = 5.08 sec. 
* 134: Cost = 4415121, Time = 5.33 sec. 
* 141: Cost = 4415107, Time = 5.61 sec. 
* 143: Cost = 4415086, Time = 5.68 sec. 
* 144: Cost = 4413616, Time = 5.72 sec. 
* 145: Cost = 4413222, Time = 5.77 sec. 
* 146: Cost = 4413060, Time = 5.80 sec. 
* 149: Cost = 4413050, Time = 5.93 sec. 
* 150: Cost = 4412644, Time = 5.97 sec. 
* 151: Cost = 4412579, Time = 6.01 sec. 
* 164: Cost = 4412555, Time = 6.54 sec. 
* 177: Cost = 4412421, Time = 7.04 sec. 
* 182: Cost = 4412150, Time = 7.23 sec. 
* 188: Cost = 4412106, Time = 7.47 sec. 
* 192: Cost = 4412068, Time = 7.63 sec. 
*** The extent of improvement(511) is too small in 2.0s ***
Run 1: Cost = 4412068, Time = 8.11 sec. 

Successes/Runs = 0/1
Cost.min = 4412068, Cost.avg = 4412068.00, Cost.max = 4412068
Gap.min = 0.0000%, Gap.avg = 0.0000%, Gap.max = 0.0000%
Trials.min = 204, Trials.avg = 204.0, Trials.max = 204
Time.min = 8.11 sec., Time.avg = 8.11 sec., Time.max = 8.11 sec.
Time.total = 12.65 sec.

Key Metrics:
	ioCount:			 3000
	algorithmRunningDuration:	 12645.535 (ms)
	memoryUse:			 0 (KB)
	addressingDuration:		 4412068 (ms)
	readDuration:			 3077623 (ms)
	tapeBeltWear:			 7465255
	tapeMotorWear:			 168
	errorIOCount:			 0

指标写入文件 ./metrics.txt
