

Welcome to HW project.

The file path is: /home/csg/Huawei-Storage-Competition/test/dataset/case_369.txt
head info : [155,703964,1]

io count = 1750


Reading TOUR...done
done
ASCENT_CANDIDATES = 25
BACKBONE_TRIALS = 0
BACKTRACKING = NO
# CANDIDATE_FILE =
CANDIDATE_SET_TYPE = ALPHA
# EDGE_FILE =
EXCESS = 0.000285388
EXTRA_CANDIDATES = 0 
EXTRA_CANDIDATE_SET_TYPE = QUADRANT
GAIN23 = YES
GAIN_CRITERION = YES
INITIAL_PERIOD = 1752
INITIAL_STEP_SIZE = 1
INITIAL_TOUR_ALGORITHM = WALK
# INITIAL_TOUR_FILE = 
INITIAL_TOUR_FRACTION = 1.000
# INPUT_TOUR_FILE = 
KICK_TYPE = 0
KICKS = 1
# MAX_BREADTH =
MAX_CANDIDATES = 5 
MAX_SWAPS = 3504
MAX_TRIALS = 3504
# MERGE_TOUR_FILE =
MOVE_TYPE = 3
# NONSEQUENTIAL_MOVE_TYPE = 3
# OPTIMUM =
# OUTPUT_TOUR_FILE = 
PATCHING_A = 1 
PATCHING_C = 0 
# PI_FILE = 
POPMUSIC_INITIAL_TOUR = NO
POPMUSIC_MAX_NEIGHBORS = 5
POPMUSIC_SAMPLE_SIZE = 10
POPMUSIC_SOLUTIONS = 50
POPMUSIC_TRIALS = 1
# POPULATION_SIZE = 0
PRECISION = 100
# PROBLEM_FILE = 
RECOMBINATION = IPT
RESTRICTED_SEARCH = YES
RUNS = 1
SEED = 1
STOP_AT_OPTIMUM = YES
SUBGRADIENT = YES
# SUBPROBLEM_SIZE =
# SUBPROBLEM_TOUR_FILE = 
SUBSEQUENT_MOVE_TYPE = 3
SUBSEQUENT_PATCHING = YES
# TIME_LIMIT =
TOTAL_TIME_LIMIT = 20.0
# TOUR_FILE = 
TRACE_LEVEL = 1

Lower bound = 2255601.7, Ascent time = 7.57 sec.
Cand.min = 2, Cand.avg = 4.7, Cand.max = 6
Edges.fixed = 1753 [Cost = 0]
Preprocessing time = 7.82 sec.
* 1: Cost = 3819346, Time = 0.01 sec. 
* 2: Cost = 3817730, Time = 0.02 sec. 
* 7: Cost = 3812505, Time = 0.06 sec. 
* 9: Cost = 3807978, Time = 0.07 sec. 
* 10: Cost = 3807700, Time = 0.07 sec. 
* 12: Cost = 3807057, Time = 0.08 sec. 
* 13: Cost = 3807037, Time = 0.09 sec. 
* 14: Cost = 3807033, Time = 0.09 sec. 
* 17: Cost = 3807029, Time = 0.11 sec. 
* 20: Cost = 3806934, Time = 0.13 sec. 
* 23: Cost = 3806706, Time = 0.16 sec. 
* 27: Cost = 3806699, Time = 0.18 sec. 
* 29: Cost = 3805689, Time = 0.19 sec. 
* 38: Cost = 3805590, Time = 0.24 sec. 
* 39: Cost = 3803900, Time = 0.25 sec. 
* 48: Cost = 3789790, Time = 0.30 sec. 
* 64: Cost = 3789553, Time = 0.40 sec. 
* 66: Cost = 3789546, Time = 0.42 sec. 
* 76: Cost = 3789541, Time = 0.48 sec. 
* 77: Cost = 3788743, Time = 0.49 sec. 
* 85: Cost = 3788679, Time = 0.53 sec. 
* 105: Cost = 3785376, Time = 0.65 sec. 
* 109: Cost = 3785306, Time = 0.68 sec. 
* 118: Cost = 3785215, Time = 0.73 sec. 
* 120: Cost = 3785199, Time = 0.74 sec. 
* 121: Cost = 3784859, Time = 0.75 sec. 
* 122: Cost = 3784798, Time = 0.75 sec. 
* 147: Cost = 3784237, Time = 0.90 sec. 
* 148: Cost = 3784188, Time = 0.91 sec. 
* 149: Cost = 3784187, Time = 0.92 sec. 
* 164: Cost = 3784170, Time = 1.01 sec. 
* 168: Cost = 3784152, Time = 1.03 sec. 
* 171: Cost = 3784085, Time = 1.05 sec. 
* 172: Cost = 3784075, Time = 1.06 sec. 
* 173: Cost = 3783964, Time = 1.06 sec. 
* 189: Cost = 3783961, Time = 1.17 sec. 
* 200: Cost = 3783898, Time = 1.23 sec. 
* 203: Cost = 3783747, Time = 1.25 sec. 
* 217: Cost = 3783647, Time = 1.34 sec. 
* 218: Cost = 3783646, Time = 1.34 sec. 
* 245: Cost = 3783245, Time = 1.51 sec. 
* 271: Cost = 3783158, Time = 1.68 sec. 
* 311: Cost = 3782175, Time = 1.92 sec. 
* 312: Cost = 3782172, Time = 1.93 sec. 
* 315: Cost = 3782084, Time = 1.95 sec. 
* 318: Cost = 3782082, Time = 1.96 sec. 
* 319: Cost = 3782071, Time = 1.97 sec. 
* 339: Cost = 3782040, Time = 2.10 sec. 
* 340: Cost = 3782021, Time = 2.10 sec. 
* 347: Cost = 3781761, Time = 2.14 sec. 
* 392: Cost = 3781749, Time = 2.42 sec. 
* 394: Cost = 3781728, Time = 2.43 sec. 
* 430: Cost = 3781626, Time = 2.66 sec. 
* 431: Cost = 3781625, Time = 2.66 sec. 
* 471: Cost = 3781607, Time = 2.91 sec. 
* 482: Cost = 3780961, Time = 2.98 sec. 
* 600: Cost = 3780911, Time = 3.69 sec. 
* 601: Cost = 3780801, Time = 3.70 sec. 
* 602: Cost = 3780798, Time = 3.70 sec. 
* 616: Cost = 3780797, Time = 3.79 sec. 
* 640: Cost = 3775782, Time = 3.94 sec. 
* 641: Cost = 3775710, Time = 3.95 sec. 
* 644: Cost = 3775666, Time = 3.97 sec. 
* 670: Cost = 3774287, Time = 4.12 sec. 
* 730: Cost = 3773732, Time = 4.50 sec. 
* 731: Cost = 3773693, Time = 4.50 sec. 
* 732: Cost = 3773687, Time = 4.51 sec. 
* 750: Cost = 3773655, Time = 4.62 sec. 
* 751: Cost = 3773590, Time = 4.62 sec. 
* 824: Cost = 3772782, Time = 5.09 sec. 
* 898: Cost = 3772691, Time = 5.54 sec. 
* 923: Cost = 3772557, Time = 5.71 sec. 
* 943: Cost = 3772262, Time = 5.83 sec. 
* 984: Cost = 3772261, Time = 6.08 sec. 
* 989: Cost = 3772066, Time = 6.12 sec. 
* 991: Cost = 3772053, Time = 6.13 sec. 
* 1059: Cost = 3772050, Time = 6.56 sec. 
* 1105: Cost = 3771994, Time = 6.85 sec. 
* 1117: Cost = 3771989, Time = 6.93 sec. 
*** The extent of improvement(273) is too small in 2.0s ***
Run 1: Cost = 3771989, Time = 8.02 sec. 

Successes/Runs = 0/1
Cost.min = 3771989, Cost.avg = 3771989.00, Cost.max = 3771989
Gap.min = 0.0000%, Gap.avg = 0.0000%, Gap.max = 0.0000%
Trials.min = 1292, Trials.avg = 1292.0, Trials.max = 1292
Time.min = 8.02 sec., Time.avg = 8.02 sec., Time.max = 8.02 sec.
Time.total = 15.94 sec.

Key Metrics:
	ioCount:			 1750
	algorithmRunningDuration:	 15935.522 (ms)
	memoryUse:			 0 (KB)
	addressingDuration:		 3771989 (ms)
	readDuration:			 1865249 (ms)
	tapeBeltWear:			 5666466
	tapeMotorWear:			 158
	errorIOCount:			 0

指标写入文件 ./metrics.txt
