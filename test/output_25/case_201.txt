

Welcome to HW project.

The file path is: /home/csg/Huawei-Storage-Competition/test/dataset/case_201.txt
head info : [223,314083,1]

io count = 2000


Reading TOUR...done
done
ASCENT_CANDIDATES = 25
BACKBONE_TRIALS = 0
BACKTRACKING = NO
# CANDIDATE_FILE =
CANDIDATE_SET_TYPE = POPMUSIC
# EDGE_FILE =
EXCESS = 0.00024975
EXTRA_CANDIDATES = 0 
EXTRA_CANDIDATE_SET_TYPE = QUADRANT
GAIN23 = YES
GAIN_CRITERION = YES
INITIAL_PERIOD = 2002
INITIAL_STEP_SIZE = 1
INITIAL_TOUR_ALGORITHM = WALK
# INITIAL_TOUR_FILE = 
INITIAL_TOUR_FRACTION = 1.000
# INPUT_TOUR_FILE = 
KICK_TYPE = 0
KICKS = 1
# MAX_BREADTH =
MAX_CANDIDATES = 5 
MAX_SWAPS = 4004
MAX_TRIALS = 4004
# MERGE_TOUR_FILE =
MOVE_TYPE = 5
# NONSEQUENTIAL_MOVE_TYPE = 5
# OPTIMUM =
# OUTPUT_TOUR_FILE = 
PATCHING_A = 1 
PATCHING_C = 0 
# PI_FILE = 
POPMUSIC_INITIAL_TOUR = YES
POPMUSIC_MAX_NEIGHBORS = 5
POPMUSIC_SAMPLE_SIZE = 10
POPMUSIC_SOLUTIONS = 50
POPMUSIC_TRIALS = 1
# POPULATION_SIZE = 0
PRECISION = 100
# PROBLEM_FILE = 
RECOMBINATION = IPT
RESTRICTED_SEARCH = YES
RUNS = 1
SEED = 1
STOP_AT_OPTIMUM = YES
SUBGRADIENT = NO
# SUBPROBLEM_SIZE =
# SUBPROBLEM_TOUR_FILE = 
SUBSEQUENT_MOVE_TYPE = 5
SUBSEQUENT_PATCHING = YES
# TIME_LIMIT =
TOTAL_TIME_LIMIT = 20.0
# TOUR_FILE = 
TRACE_LEVEL = 1

Lower bound = 1080361.0, Ascent time = 2.08 sec.
Cand.min = 2, Cand.avg = 6.0, Cand.max = 7
Edges.fixed = 2003 [Cost = 0]
Preprocessing time = 2.09 sec.
* 1: Cost = 3842816, Time = 0.12 sec. 
* 2: Cost = 3830942, Time = 0.16 sec. 
* 3: Cost = 3830612, Time = 0.18 sec. 
* 5: Cost = 3830444, Time = 0.22 sec. 
* 6: Cost = 3830032, Time = 0.24 sec. 
* 7: Cost = 3829902, Time = 0.26 sec. 
* 9: Cost = 3829359, Time = 0.29 sec. 
* 11: Cost = 3829177, Time = 0.32 sec. 
* 16: Cost = 3829064, Time = 0.41 sec. 
* 17: Cost = 3829014, Time = 0.42 sec. 
* 18: Cost = 3826477, Time = 0.44 sec. 
* 20: Cost = 3826180, Time = 0.48 sec. 
* 22: Cost = 3826147, Time = 0.52 sec. 
* 24: Cost = 3826006, Time = 0.55 sec. 
* 26: Cost = 3825584, Time = 0.59 sec. 
* 27: Cost = 3825133, Time = 0.61 sec. 
* 29: Cost = 3825119, Time = 0.65 sec. 
* 32: Cost = 3825099, Time = 0.70 sec. 
* 35: Cost = 3825098, Time = 0.75 sec. 
* 38: Cost = 3825086, Time = 0.80 sec. 
* 46: Cost = 3824990, Time = 0.93 sec. 
* 53: Cost = 3824689, Time = 1.05 sec. 
* 64: Cost = 3810210, Time = 1.23 sec. 
* 67: Cost = 3810175, Time = 1.29 sec. 
* 68: Cost = 3810172, Time = 1.30 sec. 
* 70: Cost = 3810160, Time = 1.33 sec. 
* 71: Cost = 3810145, Time = 1.36 sec. 
* 74: Cost = 3809800, Time = 1.41 sec. 
* 76: Cost = 3809771, Time = 1.45 sec. 
* 78: Cost = 3807285, Time = 1.49 sec. 
* 80: Cost = 3806402, Time = 1.53 sec. 
* 81: Cost = 3806397, Time = 1.55 sec. 
* 83: Cost = 3806348, Time = 1.58 sec. 
* 90: Cost = 3806251, Time = 1.71 sec. 
* 93: Cost = 3806247, Time = 1.77 sec. 
* 96: Cost = 3806000, Time = 1.83 sec. 
* 98: Cost = 3805932, Time = 1.86 sec. 
* 108: Cost = 3805917, Time = 2.03 sec. 
* 110: Cost = 3805894, Time = 2.07 sec. 
* 111: Cost = 3805893, Time = 2.09 sec. 
* 112: Cost = 3805892, Time = 2.11 sec. 
* 113: Cost = 3805862, Time = 2.12 sec. 
* 120: Cost = 3805286, Time = 2.26 sec. 
* 121: Cost = 3805041, Time = 2.28 sec. 
* 126: Cost = 3804998, Time = 2.37 sec. 
* 128: Cost = 3804442, Time = 2.41 sec. 
* 129: Cost = 3804441, Time = 2.43 sec. 
* 134: Cost = 3804333, Time = 2.52 sec. 
* 135: Cost = 3804310, Time = 2.55 sec. 
* 137: Cost = 3804290, Time = 2.58 sec. 
* 141: Cost = 3804269, Time = 2.67 sec. 
* 142: Cost = 3803710, Time = 2.70 sec. 
* 144: Cost = 3803673, Time = 2.75 sec. 
* 145: Cost = 3803579, Time = 2.76 sec. 
* 172: Cost = 3802956, Time = 3.28 sec. 
* 187: Cost = 3802704, Time = 3.55 sec. 
* 197: Cost = 3802664, Time = 3.74 sec. 
* 216: Cost = 3802518, Time = 4.11 sec. 
* 220: Cost = 3802517, Time = 4.19 sec. 
* 222: Cost = 3802397, Time = 4.23 sec. 
* 224: Cost = 3802335, Time = 4.27 sec. 
* 225: Cost = 3801975, Time = 4.29 sec. 
* 226: Cost = 3801963, Time = 4.31 sec. 
* 227: Cost = 3801962, Time = 4.33 sec. 
* 253: Cost = 3801504, Time = 4.82 sec. 
* 255: Cost = 3801418, Time = 4.87 sec. 
* 258: Cost = 3801245, Time = 4.93 sec. 
* 261: Cost = 3801234, Time = 4.98 sec. 
* 262: Cost = 3801160, Time = 5.00 sec. 
* 263: Cost = 3800919, Time = 5.02 sec. 
* 264: Cost = 3800893, Time = 5.04 sec. 
* 266: Cost = 3800805, Time = 5.08 sec. 
* 278: Cost = 3800804, Time = 5.30 sec. 
*** The extent of improvement(1860) is too small in 2.0s ***
Run 1: Cost = 3800804, Time = 6.04 sec. 

Successes/Runs = 0/1
Cost.min = 3800804, Cost.avg = 3800804.00, Cost.max = 3800804
Gap.min = 0.0000%, Gap.avg = 0.0000%, Gap.max = 0.0000%
Trials.min = 318, Trials.avg = 318.0, Trials.max = 318
Time.min = 6.04 sec., Time.avg = 6.04 sec., Time.max = 6.04 sec.
Time.total = 8.26 sec.

Key Metrics:
	ioCount:			 2000
	algorithmRunningDuration:	 8257.823 (ms)
	memoryUse:			 0 (KB)
	addressingDuration:		 3800804 (ms)
	readDuration:			 2189771 (ms)
	tapeBeltWear:			 6090175
	tapeMotorWear:			 160
	errorIOCount:			 0

指标写入文件 ./metrics.txt
