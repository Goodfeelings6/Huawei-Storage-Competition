

Welcome to HW project.

The file path is: /home/csg/Huawei-Storage-Competition/test/dataset/case_433.txt
head info : [112,141383,0]

io count = 3000


Reading TOUR...done
done
ASCENT_CANDIDATES = 25
BACKBONE_TRIALS = 0
BACKTRACKING = NO
# CANDIDATE_FILE =
CANDIDATE_SET_TYPE = POPMUSIC
# EDGE_FILE =
EXCESS = 0.000166556
EXTRA_CANDIDATES = 0 
EXTRA_CANDIDATE_SET_TYPE = QUADRANT
GAIN23 = YES
GAIN_CRITERION = YES
INITIAL_PERIOD = 3002
INITIAL_STEP_SIZE = 1
INITIAL_TOUR_ALGORITHM = WALK
# INITIAL_TOUR_FILE = 
INITIAL_TOUR_FRACTION = 1.000
# INPUT_TOUR_FILE = 
KICK_TYPE = 0
KICKS = 1
# MAX_BREADTH =
MAX_CANDIDATES = 5 
MAX_SWAPS = 6004
MAX_TRIALS = 6004
# MERGE_TOUR_FILE =
MOVE_TYPE = 5
# NONSEQUENTIAL_MOVE_TYPE = 5
# OPTIMUM =
# OUTPUT_TOUR_FILE = 
PATCHING_A = 1 
PATCHING_C = 0 
# PI_FILE = 
POPMUSIC_INITIAL_TOUR = YES
POPMUSIC_MAX_NEIGHBORS = 5
POPMUSIC_SAMPLE_SIZE = 10
POPMUSIC_SOLUTIONS = 50
POPMUSIC_TRIALS = 1
# POPULATION_SIZE = 0
PRECISION = 100
# PROBLEM_FILE = 
RECOMBINATION = IPT
RESTRICTED_SEARCH = YES
RUNS = 1
SEED = 1
STOP_AT_OPTIMUM = YES
SUBGRADIENT = NO
# SUBPROBLEM_SIZE =
# SUBPROBLEM_TOUR_FILE = 
SUBSEQUENT_MOVE_TYPE = 5
SUBSEQUENT_PATCHING = YES
# TIME_LIMIT =
TOTAL_TIME_LIMIT = 20.0
# TOUR_FILE = 
TRACE_LEVEL = 1

Lower bound = 1161960.0, Ascent time = 4.08 sec.
Cand.min = 2, Cand.avg = 6.0, Cand.max = 7
Edges.fixed = 3003 [Cost = 0]
Preprocessing time = 4.09 sec.
* 1: Cost = 4486733, Time = 0.21 sec. 
* 2: Cost = 4484222, Time = 0.27 sec. 
* 4: Cost = 4484184, Time = 0.33 sec. 
* 6: Cost = 4484119, Time = 0.39 sec. 
* 7: Cost = 4483314, Time = 0.42 sec. 
* 8: Cost = 4483278, Time = 0.45 sec. 
* 10: Cost = 4483241, Time = 0.51 sec. 
* 11: Cost = 4483200, Time = 0.54 sec. 
* 13: Cost = 4482907, Time = 0.59 sec. 
* 14: Cost = 4482869, Time = 0.63 sec. 
* 15: Cost = 4482480, Time = 0.66 sec. 
* 17: Cost = 4482475, Time = 0.71 sec. 
* 18: Cost = 4482474, Time = 0.74 sec. 
* 19: Cost = 4482456, Time = 0.77 sec. 
* 20: Cost = 4482323, Time = 0.80 sec. 
* 21: Cost = 4482264, Time = 0.83 sec. 
* 25: Cost = 4480123, Time = 0.94 sec. 
* 26: Cost = 4479175, Time = 0.97 sec. 
* 27: Cost = 4479124, Time = 1.00 sec. 
* 28: Cost = 4479114, Time = 1.03 sec. 
* 29: Cost = 4478995, Time = 1.06 sec. 
* 32: Cost = 4478994, Time = 1.15 sec. 
* 33: Cost = 4478979, Time = 1.18 sec. 
* 35: Cost = 4478977, Time = 1.23 sec. 
* 38: Cost = 4478973, Time = 1.31 sec. 
* 40: Cost = 4477151, Time = 1.37 sec. 
* 42: Cost = 4477131, Time = 1.43 sec. 
* 65: Cost = 4477117, Time = 2.09 sec. 
* 71: Cost = 4477089, Time = 2.26 sec. 
* 73: Cost = 4474573, Time = 2.31 sec. 
* 75: Cost = 4474506, Time = 2.37 sec. 
* 77: Cost = 4473951, Time = 2.43 sec. 
* 78: Cost = 4473933, Time = 2.46 sec. 
* 81: Cost = 4473652, Time = 2.55 sec. 
* 82: Cost = 4473599, Time = 2.59 sec. 
* 84: Cost = 4473585, Time = 2.65 sec. 
* 87: Cost = 4473249, Time = 2.75 sec. 
* 88: Cost = 4473142, Time = 2.77 sec. 
* 89: Cost = 4473141, Time = 2.81 sec. 
* 90: Cost = 4472111, Time = 2.84 sec. 
* 91: Cost = 4471937, Time = 2.87 sec. 
* 92: Cost = 4471879, Time = 2.90 sec. 
* 93: Cost = 4471874, Time = 2.93 sec. 
* 94: Cost = 4471809, Time = 2.97 sec. 
* 95: Cost = 4471761, Time = 2.99 sec. 
* 97: Cost = 4471674, Time = 3.05 sec. 
* 98: Cost = 4471671, Time = 3.08 sec. 
* 99: Cost = 4471577, Time = 3.12 sec. 
* 103: Cost = 4471347, Time = 3.24 sec. 
* 104: Cost = 4471238, Time = 3.27 sec. 
* 111: Cost = 4471224, Time = 3.48 sec. 
* 112: Cost = 4471194, Time = 3.51 sec. 
* 120: Cost = 4471188, Time = 3.74 sec. 
* 122: Cost = 4469455, Time = 3.80 sec. 
* 124: Cost = 4469433, Time = 3.86 sec. 
* 129: Cost = 4469432, Time = 4.00 sec. 
* 131: Cost = 4469392, Time = 4.06 sec. 
* 132: Cost = 4469364, Time = 4.09 sec. 
* 138: Cost = 4468928, Time = 4.27 sec. 
* 141: Cost = 4468913, Time = 4.37 sec. 
* 142: Cost = 4468857, Time = 4.40 sec. 
* 143: Cost = 4468804, Time = 4.43 sec. 
* 148: Cost = 4468786, Time = 4.58 sec. 
* 149: Cost = 4468519, Time = 4.61 sec. 
* 152: Cost = 4467445, Time = 4.71 sec. 
* 153: Cost = 4467427, Time = 4.74 sec. 
* 155: Cost = 4467426, Time = 4.80 sec. 
* 158: Cost = 4467414, Time = 4.89 sec. 
* 168: Cost = 4467356, Time = 5.20 sec. 
* 171: Cost = 4467317, Time = 5.29 sec. 
* 172: Cost = 4467249, Time = 5.32 sec. 
* 173: Cost = 4459264, Time = 5.36 sec. 
* 174: Cost = 4459257, Time = 5.39 sec. 
* 175: Cost = 4459128, Time = 5.42 sec. 
* 176: Cost = 4459057, Time = 5.45 sec. 
* 178: Cost = 4459017, Time = 5.51 sec. 
* 182: Cost = 4458942, Time = 5.64 sec. 
* 191: Cost = 4456730, Time = 5.93 sec. 
* 195: Cost = 4456717, Time = 6.05 sec. 
*** The extent of improvement(0) is too small in 2.0s ***
Run 1: Cost = 4456717, Time = 8.07 sec. 

Successes/Runs = 0/1
Cost.min = 4456717, Cost.avg = 4456717.00, Cost.max = 4456717
Gap.min = 0.0000%, Gap.avg = 0.0000%, Gap.max = 0.0000%
Trials.min = 259, Trials.avg = 259.0, Trials.max = 259
Time.min = 8.07 sec., Time.avg = 8.07 sec., Time.max = 8.07 sec.
Time.total = 12.45 sec.

Key Metrics:
	ioCount:			 3000
	algorithmRunningDuration:	 12452.845 (ms)
	memoryUse:			 0 (KB)
	addressingDuration:		 4456717 (ms)
	readDuration:			 3101836 (ms)
	tapeBeltWear:			 7517010
	tapeMotorWear:			 173
	errorIOCount:			 0

指标写入文件 ./metrics.txt
