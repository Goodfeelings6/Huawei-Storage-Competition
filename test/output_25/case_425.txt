

Welcome to HW project.

The file path is: /home/csg/Huawei-Storage-Competition/test/dataset/case_425.txt
head info : [225,90992,1]

io count = 3000


Reading TOUR...done
done
ASCENT_CANDIDATES = 25
BACKBONE_TRIALS = 0
BACKTRACKING = NO
# CANDIDATE_FILE =
CANDIDATE_SET_TYPE = POPMUSIC
# EDGE_FILE =
EXCESS = 0.000166556
EXTRA_CANDIDATES = 0 
EXTRA_CANDIDATE_SET_TYPE = QUADRANT
GAIN23 = YES
GAIN_CRITERION = YES
INITIAL_PERIOD = 3002
INITIAL_STEP_SIZE = 1
INITIAL_TOUR_ALGORITHM = WALK
# INITIAL_TOUR_FILE = 
INITIAL_TOUR_FRACTION = 1.000
# INPUT_TOUR_FILE = 
KICK_TYPE = 0
KICKS = 1
# MAX_BREADTH =
MAX_CANDIDATES = 5 
MAX_SWAPS = 6004
MAX_TRIALS = 6004
# MERGE_TOUR_FILE =
MOVE_TYPE = 5
# NONSEQUENTIAL_MOVE_TYPE = 5
# OPTIMUM =
# OUTPUT_TOUR_FILE = 
PATCHING_A = 1 
PATCHING_C = 0 
# PI_FILE = 
POPMUSIC_INITIAL_TOUR = YES
POPMUSIC_MAX_NEIGHBORS = 5
POPMUSIC_SAMPLE_SIZE = 10
POPMUSIC_SOLUTIONS = 50
POPMUSIC_TRIALS = 1
# POPULATION_SIZE = 0
PRECISION = 100
# PROBLEM_FILE = 
RECOMBINATION = IPT
RESTRICTED_SEARCH = YES
RUNS = 1
SEED = 1
STOP_AT_OPTIMUM = YES
SUBGRADIENT = NO
# SUBPROBLEM_SIZE =
# SUBPROBLEM_TOUR_FILE = 
SUBSEQUENT_MOVE_TYPE = 5
SUBSEQUENT_PATCHING = YES
# TIME_LIMIT =
TOTAL_TIME_LIMIT = 20.0
# TOUR_FILE = 
TRACE_LEVEL = 1

Lower bound = 1237334.0, Ascent time = 4.29 sec.
Cand.min = 2, Cand.avg = 6.0, Cand.max = 7
Edges.fixed = 3003 [Cost = 0]
Preprocessing time = 4.31 sec.
* 1: Cost = 4674891, Time = 0.22 sec. 
* 2: Cost = 4662258, Time = 0.30 sec. 
* 3: Cost = 4662163, Time = 0.34 sec. 
* 4: Cost = 4662033, Time = 0.37 sec. 
* 5: Cost = 4661975, Time = 0.40 sec. 
* 6: Cost = 4661928, Time = 0.43 sec. 
* 7: Cost = 4661866, Time = 0.46 sec. 
* 8: Cost = 4661832, Time = 0.50 sec. 
* 11: Cost = 4653169, Time = 0.61 sec. 
* 12: Cost = 4652854, Time = 0.64 sec. 
* 13: Cost = 4652344, Time = 0.68 sec. 
* 14: Cost = 4652270, Time = 0.71 sec. 
* 15: Cost = 4652251, Time = 0.74 sec. 
* 16: Cost = 4652216, Time = 0.78 sec. 
* 18: Cost = 4652176, Time = 0.84 sec. 
* 19: Cost = 4652162, Time = 0.87 sec. 
* 20: Cost = 4652161, Time = 0.90 sec. 
* 23: Cost = 4651984, Time = 1.00 sec. 
* 24: Cost = 4651831, Time = 1.04 sec. 
* 25: Cost = 4651760, Time = 1.06 sec. 
* 26: Cost = 4651744, Time = 1.10 sec. 
* 27: Cost = 4651477, Time = 1.14 sec. 
* 28: Cost = 4651446, Time = 1.17 sec. 
* 38: Cost = 4651371, Time = 1.49 sec. 
* 39: Cost = 4651025, Time = 1.52 sec. 
* 40: Cost = 4651023, Time = 1.55 sec. 
* 45: Cost = 4651022, Time = 1.70 sec. 
* 46: Cost = 4651021, Time = 1.74 sec. 
* 47: Cost = 4650893, Time = 1.77 sec. 
* 56: Cost = 4648606, Time = 2.06 sec. 
* 57: Cost = 4648537, Time = 2.11 sec. 
* 59: Cost = 4648492, Time = 2.17 sec. 
* 60: Cost = 4648449, Time = 2.20 sec. 
* 63: Cost = 4648448, Time = 2.29 sec. 
* 65: Cost = 4648440, Time = 2.35 sec. 
* 66: Cost = 4648439, Time = 2.39 sec. 
* 68: Cost = 4648391, Time = 2.47 sec. 
* 69: Cost = 4648233, Time = 2.50 sec. 
* 70: Cost = 4648222, Time = 2.53 sec. 
* 71: Cost = 4648115, Time = 2.56 sec. 
* 72: Cost = 4648114, Time = 2.61 sec. 
* 73: Cost = 4646943, Time = 2.64 sec. 
* 80: Cost = 4646406, Time = 2.86 sec. 
* 81: Cost = 4646356, Time = 2.90 sec. 
* 84: Cost = 4646347, Time = 2.99 sec. 
* 91: Cost = 4646336, Time = 3.23 sec. 
* 92: Cost = 4646275, Time = 3.27 sec. 
* 93: Cost = 4646266, Time = 3.30 sec. 
* 95: Cost = 4645531, Time = 3.38 sec. 
* 96: Cost = 4645530, Time = 3.40 sec. 
* 100: Cost = 4645518, Time = 3.53 sec. 
* 101: Cost = 4645517, Time = 3.56 sec. 
* 108: Cost = 4645161, Time = 3.81 sec. 
* 114: Cost = 4645039, Time = 4.00 sec. 
* 115: Cost = 4644866, Time = 4.04 sec. 
* 116: Cost = 4644799, Time = 4.08 sec. 
* 118: Cost = 4644797, Time = 4.15 sec. 
* 120: Cost = 4644435, Time = 4.21 sec. 
* 121: Cost = 4644423, Time = 4.24 sec. 
* 126: Cost = 4644422, Time = 4.42 sec. 
* 130: Cost = 4644409, Time = 4.55 sec. 
* 131: Cost = 4644403, Time = 4.59 sec. 
* 133: Cost = 4644339, Time = 4.65 sec. 
* 136: Cost = 4643303, Time = 4.76 sec. 
* 138: Cost = 4643273, Time = 4.84 sec. 
* 141: Cost = 4642664, Time = 4.93 sec. 
* 142: Cost = 4642662, Time = 4.96 sec. 
* 143: Cost = 4642546, Time = 5.00 sec. 
* 147: Cost = 4641853, Time = 5.14 sec. 
* 148: Cost = 4641641, Time = 5.17 sec. 
* 149: Cost = 4640830, Time = 5.20 sec. 
* 170: Cost = 4640614, Time = 5.90 sec. 
* 171: Cost = 4639990, Time = 5.94 sec. 
* 172: Cost = 4639988, Time = 5.97 sec. 
* 173: Cost = 4639970, Time = 6.01 sec. 
* 178: Cost = 4639953, Time = 6.17 sec. 
* 180: Cost = 4639952, Time = 6.23 sec. 
* 181: Cost = 4628102, Time = 6.27 sec. 
* 182: Cost = 4628101, Time = 6.31 sec. 
* 185: Cost = 4628099, Time = 6.41 sec. 
* 192: Cost = 4626980, Time = 6.64 sec. 
* 193: Cost = 4626776, Time = 6.68 sec. 
* 196: Cost = 4625980, Time = 6.79 sec. 
* 203: Cost = 4624483, Time = 7.02 sec. 
* 205: Cost = 4624482, Time = 7.09 sec. 
* 222: Cost = 4622778, Time = 7.68 sec. 
* 224: Cost = 4622634, Time = 7.77 sec. 
* 227: Cost = 4622633, Time = 7.88 sec. 
* 229: Cost = 4622628, Time = 7.94 sec. 
* 238: Cost = 4622328, Time = 8.27 sec. 
* 242: Cost = 4622319, Time = 8.39 sec. 
* 250: Cost = 4622283, Time = 8.66 sec. 
* 251: Cost = 4622281, Time = 8.70 sec. 
* 258: Cost = 4622280, Time = 8.97 sec. 
* 260: Cost = 4622271, Time = 9.04 sec. 
*** The extent of improvement(357) is too small in 2.0s ***
Run 1: Cost = 4622271, Time = 10.13 sec. 

Successes/Runs = 0/1
Cost.min = 4622271, Cost.avg = 4622271.00, Cost.max = 4622271
Gap.min = 0.0000%, Gap.avg = 0.0000%, Gap.max = 0.0000%
Trials.min = 291, Trials.avg = 291.0, Trials.max = 291
Time.min = 10.13 sec., Time.avg = 10.13 sec., Time.max = 10.13 sec.
Time.total = 14.72 sec.

Key Metrics:
	ioCount:			 3000
	algorithmRunningDuration:	 14723.419 (ms)
	memoryUse:			 0 (KB)
	addressingDuration:		 4622271 (ms)
	readDuration:			 3106286 (ms)
	tapeBeltWear:			 7756555
	tapeMotorWear:			 188
	errorIOCount:			 0

指标写入文件 ./metrics.txt
