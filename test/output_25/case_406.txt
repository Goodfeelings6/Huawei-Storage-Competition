

Welcome to HW project.

The file path is: /home/csg/Huawei-Storage-Competition/test/dataset/case_406.txt
head info : [265,66623,0]

io count = 3000


Reading TOUR...done
done
ASCENT_CANDIDATES = 25
BACKBONE_TRIALS = 0
BACKTRACKING = NO
# CANDIDATE_FILE =
CANDIDATE_SET_TYPE = POPMUSIC
# EDGE_FILE =
EXCESS = 0.000166556
EXTRA_CANDIDATES = 0 
EXTRA_CANDIDATE_SET_TYPE = QUADRANT
GAIN23 = YES
GAIN_CRITERION = YES
INITIAL_PERIOD = 3002
INITIAL_STEP_SIZE = 1
INITIAL_TOUR_ALGORITHM = WALK
# INITIAL_TOUR_FILE = 
INITIAL_TOUR_FRACTION = 1.000
# INPUT_TOUR_FILE = 
KICK_TYPE = 0
KICKS = 1
# MAX_BREADTH =
MAX_CANDIDATES = 5 
MAX_SWAPS = 6004
MAX_TRIALS = 6004
# MERGE_TOUR_FILE =
MOVE_TYPE = 5
# NONSEQUENTIAL_MOVE_TYPE = 5
# OPTIMUM =
# OUTPUT_TOUR_FILE = 
PATCHING_A = 1 
PATCHING_C = 0 
# PI_FILE = 
POPMUSIC_INITIAL_TOUR = YES
POPMUSIC_MAX_NEIGHBORS = 5
POPMUSIC_SAMPLE_SIZE = 10
POPMUSIC_SOLUTIONS = 50
POPMUSIC_TRIALS = 1
# POPULATION_SIZE = 0
PRECISION = 100
# PROBLEM_FILE = 
RECOMBINATION = IPT
RESTRICTED_SEARCH = YES
RUNS = 1
SEED = 1
STOP_AT_OPTIMUM = YES
SUBGRADIENT = NO
# SUBPROBLEM_SIZE =
# SUBPROBLEM_TOUR_FILE = 
SUBSEQUENT_MOVE_TYPE = 5
SUBSEQUENT_PATCHING = YES
# TIME_LIMIT =
TOTAL_TIME_LIMIT = 20.0
# TOUR_FILE = 
TRACE_LEVEL = 1

Lower bound = 1244388.0, Ascent time = 4.20 sec.
Cand.min = 2, Cand.avg = 6.0, Cand.max = 7
Edges.fixed = 3003 [Cost = 0]
Preprocessing time = 4.22 sec.
* 1: Cost = 4899826, Time = 0.16 sec. 
* 2: Cost = 4899139, Time = 0.21 sec. 
* 3: Cost = 4899076, Time = 0.24 sec. 
* 4: Cost = 4898775, Time = 0.27 sec. 
* 6: Cost = 4898689, Time = 0.33 sec. 
* 7: Cost = 4898590, Time = 0.36 sec. 
* 8: Cost = 4898413, Time = 0.39 sec. 
* 9: Cost = 4897724, Time = 0.43 sec. 
* 10: Cost = 4868694, Time = 0.47 sec. 
* 11: Cost = 4863156, Time = 0.50 sec. 
* 12: Cost = 4863117, Time = 0.53 sec. 
* 13: Cost = 4863000, Time = 0.55 sec. 
* 14: Cost = 4836270, Time = 0.59 sec. 
* 15: Cost = 4834048, Time = 0.62 sec. 
* 16: Cost = 4833994, Time = 0.65 sec. 
* 17: Cost = 4832373, Time = 0.68 sec. 
* 19: Cost = 4818450, Time = 0.75 sec. 
* 20: Cost = 4818280, Time = 0.78 sec. 
* 21: Cost = 4818269, Time = 0.81 sec. 
* 22: Cost = 4818185, Time = 0.83 sec. 
* 23: Cost = 4817586, Time = 0.86 sec. 
* 24: Cost = 4817230, Time = 0.89 sec. 
* 25: Cost = 4817163, Time = 0.91 sec. 
* 26: Cost = 4817061, Time = 0.94 sec. 
* 34: Cost = 4817022, Time = 1.16 sec. 
* 36: Cost = 4817003, Time = 1.21 sec. 
* 43: Cost = 4817002, Time = 1.37 sec. 
* 44: Cost = 4816992, Time = 1.40 sec. 
* 46: Cost = 4816980, Time = 1.45 sec. 
* 47: Cost = 4816979, Time = 1.48 sec. 
* 48: Cost = 4816940, Time = 1.51 sec. 
* 49: Cost = 4801302, Time = 1.56 sec. 
* 52: Cost = 4800305, Time = 1.64 sec. 
* 53: Cost = 4800304, Time = 1.67 sec. 
* 54: Cost = 4799881, Time = 1.70 sec. 
* 61: Cost = 4794386, Time = 1.88 sec. 
* 64: Cost = 4794339, Time = 1.95 sec. 
* 65: Cost = 4792324, Time = 1.98 sec. 
* 67: Cost = 4792316, Time = 2.03 sec. 
* 68: Cost = 4792315, Time = 2.05 sec. 
* 69: Cost = 4792064, Time = 2.08 sec. 
* 70: Cost = 4791926, Time = 2.11 sec. 
* 73: Cost = 4791900, Time = 2.19 sec. 
* 74: Cost = 4791823, Time = 2.22 sec. 
* 75: Cost = 4789990, Time = 2.25 sec. 
* 79: Cost = 4778837, Time = 2.38 sec. 
* 80: Cost = 4778526, Time = 2.41 sec. 
* 81: Cost = 4778515, Time = 2.44 sec. 
* 87: Cost = 4778465, Time = 2.59 sec. 
* 88: Cost = 4778269, Time = 2.61 sec. 
* 91: Cost = 4777469, Time = 2.69 sec. 
* 93: Cost = 4777430, Time = 2.75 sec. 
* 97: Cost = 4777291, Time = 2.85 sec. 
* 98: Cost = 4777284, Time = 2.87 sec. 
* 99: Cost = 4777282, Time = 2.90 sec. 
* 102: Cost = 4777276, Time = 2.99 sec. 
* 103: Cost = 4777223, Time = 3.02 sec. 
* 105: Cost = 4776569, Time = 3.08 sec. 
* 106: Cost = 4776418, Time = 3.11 sec. 
* 115: Cost = 4774652, Time = 3.35 sec. 
* 116: Cost = 4774285, Time = 3.38 sec. 
* 117: Cost = 4774201, Time = 3.42 sec. 
* 118: Cost = 4774195, Time = 3.44 sec. 
* 120: Cost = 4774004, Time = 3.49 sec. 
* 123: Cost = 4773998, Time = 3.58 sec. 
* 124: Cost = 4773989, Time = 3.61 sec. 
* 125: Cost = 4773970, Time = 3.65 sec. 
* 127: Cost = 4773967, Time = 3.70 sec. 
* 129: Cost = 4773961, Time = 3.76 sec. 
* 131: Cost = 4773904, Time = 3.81 sec. 
* 132: Cost = 4773892, Time = 3.84 sec. 
* 133: Cost = 4773860, Time = 3.87 sec. 
* 143: Cost = 4773826, Time = 4.14 sec. 
* 146: Cost = 4773825, Time = 4.22 sec. 
* 149: Cost = 4771537, Time = 4.30 sec. 
* 150: Cost = 4771536, Time = 4.32 sec. 
* 154: Cost = 4771535, Time = 4.42 sec. 
* 158: Cost = 4765682, Time = 4.53 sec. 
* 164: Cost = 4761545, Time = 4.70 sec. 
* 165: Cost = 4759845, Time = 4.74 sec. 
* 167: Cost = 4759839, Time = 4.79 sec. 
* 168: Cost = 4759830, Time = 4.82 sec. 
* 172: Cost = 4759825, Time = 4.92 sec. 
* 173: Cost = 4759764, Time = 4.95 sec. 
* 174: Cost = 4759755, Time = 4.97 sec. 
* 175: Cost = 4752001, Time = 5.00 sec. 
* 193: Cost = 4751940, Time = 5.52 sec. 
* 200: Cost = 4751939, Time = 5.71 sec. 
* 205: Cost = 4751932, Time = 5.85 sec. 
* 206: Cost = 4751930, Time = 5.88 sec. 
* 219: Cost = 4751524, Time = 6.23 sec. 
* 220: Cost = 4751485, Time = 6.26 sec. 
* 221: Cost = 4751483, Time = 6.29 sec. 
* 231: Cost = 4751194, Time = 6.56 sec. 
* 232: Cost = 4751183, Time = 6.60 sec. 
* 236: Cost = 4751085, Time = 6.71 sec. 
* 237: Cost = 4750763, Time = 6.74 sec. 
* 240: Cost = 4750756, Time = 6.83 sec. 
* 243: Cost = 4750592, Time = 6.91 sec. 
* 248: Cost = 4750584, Time = 7.06 sec. 
*** The extent of improvement(1346) is too small in 2.0s ***
Run 1: Cost = 4750584, Time = 8.04 sec. 

Successes/Runs = 0/1
Cost.min = 4750584, Cost.avg = 4750584.00, Cost.max = 4750584
Gap.min = 0.0000%, Gap.avg = 0.0000%, Gap.max = 0.0000%
Trials.min = 283, Trials.avg = 283.0, Trials.max = 283
Time.min = 8.04 sec., Time.avg = 8.04 sec., Time.max = 8.04 sec.
Time.total = 12.54 sec.

Key Metrics:
	ioCount:			 3000
	algorithmRunningDuration:	 12540.706 (ms)
	memoryUse:			 0 (KB)
	addressingDuration:		 4750584 (ms)
	readDuration:			 3144443 (ms)
	tapeBeltWear:			 7800865
	tapeMotorWear:			 177
	errorIOCount:			 0

指标写入文件 ./metrics.txt
