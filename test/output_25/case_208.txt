

Welcome to HW project.

The file path is: /home/csg/Huawei-Storage-Competition/test/dataset/case_208.txt
head info : [68,455946,1]

io count = 5000


Reading TOUR...done
done
ASCENT_CANDIDATES = 25
BACKBONE_TRIALS = 0
BACKTRACKING = NO
# CANDIDATE_FILE =
CANDIDATE_SET_TYPE = POPMUSIC
# EDGE_FILE =
EXCESS = 9.996e-05
EXTRA_CANDIDATES = 0 
EXTRA_CANDIDATE_SET_TYPE = QUADRANT
GAIN23 = YES
GAIN_CRITERION = YES
INITIAL_PERIOD = 5002
INITIAL_STEP_SIZE = 1
INITIAL_TOUR_ALGORITHM = WALK
# INITIAL_TOUR_FILE = 
INITIAL_TOUR_FRACTION = 1.000
# INPUT_TOUR_FILE = 
KICK_TYPE = 0
KICKS = 1
# MAX_BREADTH =
MAX_CANDIDATES = 5 
MAX_SWAPS = 10004
MAX_TRIALS = 10004
# MERGE_TOUR_FILE =
MOVE_TYPE = 5
# NONSEQUENTIAL_MOVE_TYPE = 5
# OPTIMUM =
# OUTPUT_TOUR_FILE = 
PATCHING_A = 1 
PATCHING_C = 0 
# PI_FILE = 
POPMUSIC_INITIAL_TOUR = YES
POPMUSIC_MAX_NEIGHBORS = 5
POPMUSIC_SAMPLE_SIZE = 10
POPMUSIC_SOLUTIONS = 50
POPMUSIC_TRIALS = 1
# POPULATION_SIZE = 0
PRECISION = 100
# PROBLEM_FILE = 
RECOMBINATION = IPT
RESTRICTED_SEARCH = YES
RUNS = 1
SEED = 1
STOP_AT_OPTIMUM = YES
SUBGRADIENT = NO
# SUBPROBLEM_SIZE =
# SUBPROBLEM_TOUR_FILE = 
SUBSEQUENT_MOVE_TYPE = 5
SUBSEQUENT_PATCHING = YES
# TIME_LIMIT =
TOTAL_TIME_LIMIT = 20.0
# TOUR_FILE = 
TRACE_LEVEL = 1

Lower bound = 1410614.0, Ascent time = 10.73 sec.
Cand.min = 2, Cand.avg = 6.0, Cand.max = 7
Edges.fixed = 5003 [Cost = 0]
Preprocessing time = 10.76 sec.
* 1: Cost = 6568650, Time = 0.34 sec. 
* 2: Cost = 6568105, Time = 0.47 sec. 
* 4: Cost = 6548230, Time = 0.61 sec. 
* 5: Cost = 6547909, Time = 0.68 sec. 
* 8: Cost = 6547734, Time = 0.86 sec. 
* 9: Cost = 6547238, Time = 0.91 sec. 
* 11: Cost = 6546586, Time = 1.02 sec. 
* 13: Cost = 6546083, Time = 1.14 sec. 
* 14: Cost = 6546081, Time = 1.19 sec. 
* 15: Cost = 6545790, Time = 1.25 sec. 
* 16: Cost = 6543243, Time = 1.31 sec. 
* 18: Cost = 6542947, Time = 1.41 sec. 
* 19: Cost = 6542799, Time = 1.46 sec. 
* 20: Cost = 6542767, Time = 1.51 sec. 
* 21: Cost = 6542730, Time = 1.56 sec. 
* 22: Cost = 6542709, Time = 1.62 sec. 
* 23: Cost = 6541912, Time = 1.68 sec. 
* 26: Cost = 6540299, Time = 1.84 sec. 
* 27: Cost = 6536118, Time = 1.90 sec. 
* 28: Cost = 6536047, Time = 1.96 sec. 
* 29: Cost = 6535977, Time = 2.01 sec. 
* 30: Cost = 6535869, Time = 2.06 sec. 
* 31: Cost = 6535799, Time = 2.11 sec. 
* 33: Cost = 6535767, Time = 2.24 sec. 
* 34: Cost = 6535730, Time = 2.29 sec. 
* 35: Cost = 6535359, Time = 2.34 sec. 
* 36: Cost = 6534995, Time = 2.40 sec. 
* 37: Cost = 6534961, Time = 2.45 sec. 
* 38: Cost = 6534942, Time = 2.50 sec. 
* 39: Cost = 6534785, Time = 2.56 sec. 
* 40: Cost = 6534743, Time = 2.62 sec. 
* 42: Cost = 6534651, Time = 2.72 sec. 
* 43: Cost = 6534645, Time = 2.77 sec. 
* 44: Cost = 6534292, Time = 2.83 sec. 
* 45: Cost = 6534250, Time = 2.88 sec. 
* 46: Cost = 6534082, Time = 2.93 sec. 
* 48: Cost = 6534081, Time = 3.04 sec. 
* 49: Cost = 6534069, Time = 3.09 sec. 
* 50: Cost = 6534028, Time = 3.14 sec. 
* 52: Cost = 6534015, Time = 3.25 sec. 
* 53: Cost = 6534006, Time = 3.32 sec. 
* 54: Cost = 6533974, Time = 3.38 sec. 
* 55: Cost = 6533894, Time = 3.43 sec. 
* 57: Cost = 6533881, Time = 3.53 sec. 
* 58: Cost = 6533875, Time = 3.59 sec. 
* 59: Cost = 6533847, Time = 3.64 sec. 
* 62: Cost = 6533826, Time = 3.79 sec. 
* 63: Cost = 6533820, Time = 3.85 sec. 
* 67: Cost = 6533816, Time = 4.06 sec. 
* 69: Cost = 6533807, Time = 4.18 sec. 
* 70: Cost = 6533738, Time = 4.23 sec. 
* 73: Cost = 6533734, Time = 4.39 sec. 
* 75: Cost = 6533733, Time = 4.50 sec. 
* 76: Cost = 6533686, Time = 4.56 sec. 
* 79: Cost = 6533659, Time = 4.73 sec. 
* 82: Cost = 6532303, Time = 4.89 sec. 
* 83: Cost = 6532302, Time = 4.94 sec. 
* 84: Cost = 6532279, Time = 5.00 sec. 
* 85: Cost = 6532265, Time = 5.05 sec. 
* 88: Cost = 6532264, Time = 5.22 sec. 
* 89: Cost = 6532000, Time = 5.27 sec. 
* 91: Cost = 6531966, Time = 5.39 sec. 
* 92: Cost = 6531898, Time = 5.44 sec. 
* 93: Cost = 6531864, Time = 5.51 sec. 
* 95: Cost = 6531863, Time = 5.63 sec. 
* 96: Cost = 6529728, Time = 5.69 sec. 
* 97: Cost = 6529648, Time = 5.74 sec. 
* 98: Cost = 6529635, Time = 5.80 sec. 
* 100: Cost = 6529617, Time = 5.91 sec. 
* 101: Cost = 6529462, Time = 5.97 sec. 
* 102: Cost = 6529437, Time = 6.03 sec. 
* 103: Cost = 6529409, Time = 6.09 sec. 
* 108: Cost = 6529329, Time = 6.36 sec. 
* 109: Cost = 6529284, Time = 6.41 sec. 
* 112: Cost = 6529270, Time = 6.57 sec. 
* 116: Cost = 6529255, Time = 6.81 sec. 
* 117: Cost = 6529209, Time = 6.87 sec. 
* 120: Cost = 6529148, Time = 7.02 sec. 
* 121: Cost = 6529117, Time = 7.08 sec. 
* 123: Cost = 6529091, Time = 7.22 sec. 
* 124: Cost = 6529086, Time = 7.28 sec. 
* 126: Cost = 6529056, Time = 7.39 sec. 
* 128: Cost = 6528945, Time = 7.50 sec. 
* 129: Cost = 6528938, Time = 7.55 sec. 
* 134: Cost = 6528937, Time = 7.84 sec. 
* 137: Cost = 6528807, Time = 8.01 sec. 
* 138: Cost = 6528806, Time = 8.06 sec. 
*** The extent of improvement(603) is too small in 2.0s ***
Run 1: Cost = 6528806, Time = 8.12 sec. 

Successes/Runs = 0/1
Cost.min = 6528806, Cost.avg = 6528806.00, Cost.max = 6528806
Gap.min = 0.0000%, Gap.avg = 0.0000%, Gap.max = 0.0000%
Trials.min = 139, Trials.avg = 139.0, Trials.max = 139
Time.min = 8.12 sec., Time.avg = 8.12 sec., Time.max = 8.12 sec.
Time.total = 19.65 sec.

Key Metrics:
	ioCount:			 5000
	algorithmRunningDuration:	 19649.047 (ms)
	memoryUse:			 0 (KB)
	addressingDuration:		 6528806 (ms)
	readDuration:			 5175122 (ms)
	tapeBeltWear:			 11728989
	tapeMotorWear:			 204
	errorIOCount:			 0

指标写入文件 ./metrics.txt
