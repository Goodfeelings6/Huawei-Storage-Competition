

Welcome to HW project.

The file path is: /home/csg/Huawei-Storage-Competition/test/dataset/case_434.txt
head info : [110,436980,1]

io count = 3000


Reading TOUR...done
done
ASCENT_CANDIDATES = 25
BACKBONE_TRIALS = 0
BACKTRACKING = NO
# CANDIDATE_FILE =
CANDIDATE_SET_TYPE = POPMUSIC
# EDGE_FILE =
EXCESS = 0.000166556
EXTRA_CANDIDATES = 0 
EXTRA_CANDIDATE_SET_TYPE = QUADRANT
GAIN23 = YES
GAIN_CRITERION = YES
INITIAL_PERIOD = 3002
INITIAL_STEP_SIZE = 1
INITIAL_TOUR_ALGORITHM = WALK
# INITIAL_TOUR_FILE = 
INITIAL_TOUR_FRACTION = 1.000
# INPUT_TOUR_FILE = 
KICK_TYPE = 0
KICKS = 1
# MAX_BREADTH =
MAX_CANDIDATES = 5 
MAX_SWAPS = 6004
MAX_TRIALS = 6004
# MERGE_TOUR_FILE =
MOVE_TYPE = 5
# NONSEQUENTIAL_MOVE_TYPE = 5
# OPTIMUM =
# OUTPUT_TOUR_FILE = 
PATCHING_A = 1 
PATCHING_C = 0 
# PI_FILE = 
POPMUSIC_INITIAL_TOUR = YES
POPMUSIC_MAX_NEIGHBORS = 5
POPMUSIC_SAMPLE_SIZE = 10
POPMUSIC_SOLUTIONS = 50
POPMUSIC_TRIALS = 1
# POPULATION_SIZE = 0
PRECISION = 100
# PROBLEM_FILE = 
RECOMBINATION = IPT
RESTRICTED_SEARCH = YES
RUNS = 1
SEED = 1
STOP_AT_OPTIMUM = YES
SUBGRADIENT = NO
# SUBPROBLEM_SIZE =
# SUBPROBLEM_TOUR_FILE = 
SUBSEQUENT_MOVE_TYPE = 5
SUBSEQUENT_PATCHING = YES
# TIME_LIMIT =
TOTAL_TIME_LIMIT = 20.0
# TOUR_FILE = 
TRACE_LEVEL = 1

Lower bound = 1133356.0, Ascent time = 4.23 sec.
Cand.min = 2, Cand.avg = 6.0, Cand.max = 7
Edges.fixed = 3003 [Cost = 0]
Preprocessing time = 4.24 sec.
* 1: Cost = 4415091, Time = 0.20 sec. 
* 2: Cost = 4409750, Time = 0.27 sec. 
* 3: Cost = 4408023, Time = 0.30 sec. 
* 4: Cost = 4407976, Time = 0.33 sec. 
* 5: Cost = 4407928, Time = 0.36 sec. 
* 6: Cost = 4407925, Time = 0.40 sec. 
* 8: Cost = 4407819, Time = 0.47 sec. 
* 9: Cost = 4407688, Time = 0.50 sec. 
* 10: Cost = 4407556, Time = 0.53 sec. 
* 11: Cost = 4407526, Time = 0.57 sec. 
* 12: Cost = 4407428, Time = 0.60 sec. 
* 13: Cost = 4407384, Time = 0.62 sec. 
* 15: Cost = 4407374, Time = 0.69 sec. 
* 17: Cost = 4407089, Time = 0.76 sec. 
* 18: Cost = 4407076, Time = 0.79 sec. 
* 21: Cost = 4407066, Time = 0.89 sec. 
* 24: Cost = 4404687, Time = 0.99 sec. 
* 25: Cost = 4404579, Time = 1.03 sec. 
* 28: Cost = 4404513, Time = 1.12 sec. 
* 29: Cost = 4398312, Time = 1.16 sec. 
* 30: Cost = 4398196, Time = 1.19 sec. 
* 31: Cost = 4398186, Time = 1.23 sec. 
* 32: Cost = 4398179, Time = 1.26 sec. 
* 35: Cost = 4398152, Time = 1.36 sec. 
* 36: Cost = 4396635, Time = 1.40 sec. 
* 38: Cost = 4396563, Time = 1.46 sec. 
* 39: Cost = 4396515, Time = 1.49 sec. 
* 40: Cost = 4396347, Time = 1.53 sec. 
* 41: Cost = 4396298, Time = 1.56 sec. 
* 42: Cost = 4391945, Time = 1.59 sec. 
* 43: Cost = 4391854, Time = 1.63 sec. 
* 44: Cost = 4391813, Time = 1.66 sec. 
* 52: Cost = 4391808, Time = 1.92 sec. 
* 54: Cost = 4391781, Time = 1.99 sec. 
* 55: Cost = 4391772, Time = 2.02 sec. 
* 58: Cost = 4391767, Time = 2.12 sec. 
* 59: Cost = 4391466, Time = 2.15 sec. 
* 60: Cost = 4391386, Time = 2.19 sec. 
* 66: Cost = 4391139, Time = 2.40 sec. 
* 69: Cost = 4390948, Time = 2.51 sec. 
* 70: Cost = 4390770, Time = 2.54 sec. 
* 71: Cost = 4390762, Time = 2.57 sec. 
* 72: Cost = 4390756, Time = 2.61 sec. 
* 75: Cost = 4390575, Time = 2.70 sec. 
* 77: Cost = 4390548, Time = 2.76 sec. 
* 80: Cost = 4390313, Time = 2.87 sec. 
* 81: Cost = 4390303, Time = 2.91 sec. 
* 82: Cost = 4390186, Time = 2.95 sec. 
* 83: Cost = 4389902, Time = 2.99 sec. 
* 86: Cost = 4389275, Time = 3.10 sec. 
* 88: Cost = 4389188, Time = 3.17 sec. 
* 90: Cost = 4388893, Time = 3.23 sec. 
* 91: Cost = 4388871, Time = 3.27 sec. 
* 92: Cost = 4388330, Time = 3.32 sec. 
* 93: Cost = 4387043, Time = 3.36 sec. 
* 94: Cost = 4386654, Time = 3.39 sec. 
* 95: Cost = 4386634, Time = 3.42 sec. 
* 100: Cost = 4385998, Time = 3.60 sec. 
* 103: Cost = 4385981, Time = 3.70 sec. 
* 105: Cost = 4383685, Time = 3.77 sec. 
* 106: Cost = 4383638, Time = 3.81 sec. 
* 109: Cost = 4383628, Time = 3.91 sec. 
* 110: Cost = 4383420, Time = 3.94 sec. 
* 111: Cost = 4383416, Time = 3.98 sec. 
* 112: Cost = 4383415, Time = 4.01 sec. 
* 113: Cost = 4383369, Time = 4.05 sec. 
* 118: Cost = 4383074, Time = 4.23 sec. 
* 119: Cost = 4382946, Time = 4.26 sec. 
* 120: Cost = 4382842, Time = 4.30 sec. 
* 121: Cost = 4382833, Time = 4.33 sec. 
* 125: Cost = 4382630, Time = 4.46 sec. 
* 128: Cost = 4382399, Time = 4.57 sec. 
* 130: Cost = 4382392, Time = 4.65 sec. 
* 131: Cost = 4382361, Time = 4.68 sec. 
* 132: Cost = 4382356, Time = 4.72 sec. 
* 136: Cost = 4382354, Time = 4.85 sec. 
* 141: Cost = 4382351, Time = 5.02 sec. 
* 142: Cost = 4382350, Time = 5.06 sec. 
* 149: Cost = 4382304, Time = 5.30 sec. 
* 150: Cost = 4382239, Time = 5.33 sec. 
* 153: Cost = 4382230, Time = 5.44 sec. 
* 156: Cost = 4382205, Time = 5.54 sec. 
* 158: Cost = 4382204, Time = 5.62 sec. 
* 161: Cost = 4382199, Time = 5.71 sec. 
* 165: Cost = 4382142, Time = 5.85 sec. 
* 167: Cost = 4382137, Time = 5.93 sec. 
*** The extent of improvement(1232) is too small in 2.0s ***
Run 1: Cost = 4382137, Time = 6.06 sec. 

Successes/Runs = 0/1
Cost.min = 4382137, Cost.avg = 4382137.00, Cost.max = 4382137
Gap.min = 0.0000%, Gap.avg = 0.0000%, Gap.max = 0.0000%
Trials.min = 170, Trials.avg = 170.0, Trials.max = 170
Time.min = 6.06 sec., Time.avg = 6.06 sec., Time.max = 6.06 sec.
Time.total = 10.59 sec.

Key Metrics:
	ioCount:			 3000
	algorithmRunningDuration:	 10590.293 (ms)
	memoryUse:			 0 (KB)
	addressingDuration:		 4382137 (ms)
	readDuration:			 3212473 (ms)
	tapeBeltWear:			 7543956
	tapeMotorWear:			 168
	errorIOCount:			 0

指标写入文件 ./metrics.txt
