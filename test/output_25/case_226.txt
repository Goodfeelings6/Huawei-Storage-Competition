

Welcome to HW project.

The file path is: /home/csg/Huawei-Storage-Competition/test/dataset/case_226.txt
head info : [37,282804,1]

io count = 5000


Reading TOUR...done
done
ASCENT_CANDIDATES = 25
BACKBONE_TRIALS = 0
BACKTRACKING = NO
# CANDIDATE_FILE =
CANDIDATE_SET_TYPE = POPMUSIC
# EDGE_FILE =
EXCESS = 9.996e-05
EXTRA_CANDIDATES = 0 
EXTRA_CANDIDATE_SET_TYPE = QUADRANT
GAIN23 = YES
GAIN_CRITERION = YES
INITIAL_PERIOD = 5002
INITIAL_STEP_SIZE = 1
INITIAL_TOUR_ALGORITHM = WALK
# INITIAL_TOUR_FILE = 
INITIAL_TOUR_FRACTION = 1.000
# INPUT_TOUR_FILE = 
KICK_TYPE = 0
KICKS = 1
# MAX_BREADTH =
MAX_CANDIDATES = 5 
MAX_SWAPS = 10004
MAX_TRIALS = 10004
# MERGE_TOUR_FILE =
MOVE_TYPE = 5
# NONSEQUENTIAL_MOVE_TYPE = 5
# OPTIMUM =
# OUTPUT_TOUR_FILE = 
PATCHING_A = 1 
PATCHING_C = 0 
# PI_FILE = 
POPMUSIC_INITIAL_TOUR = YES
POPMUSIC_MAX_NEIGHBORS = 5
POPMUSIC_SAMPLE_SIZE = 10
POPMUSIC_SOLUTIONS = 50
POPMUSIC_TRIALS = 1
# POPULATION_SIZE = 0
PRECISION = 100
# PROBLEM_FILE = 
RECOMBINATION = IPT
RESTRICTED_SEARCH = YES
RUNS = 1
SEED = 1
STOP_AT_OPTIMUM = YES
SUBGRADIENT = NO
# SUBPROBLEM_SIZE =
# SUBPROBLEM_TOUR_FILE = 
SUBSEQUENT_MOVE_TYPE = 5
SUBSEQUENT_PATCHING = YES
# TIME_LIMIT =
TOTAL_TIME_LIMIT = 20.0
# TOUR_FILE = 
TRACE_LEVEL = 1

Lower bound = 1414681.0, Ascent time = 10.85 sec.
Cand.min = 2, Cand.avg = 6.0, Cand.max = 7
Edges.fixed = 5003 [Cost = 0]
Preprocessing time = 10.88 sec.
* 1: Cost = 6773398, Time = 0.37 sec. 
* 2: Cost = 6699444, Time = 0.56 sec. 
* 3: Cost = 6669959, Time = 0.64 sec. 
* 4: Cost = 6667471, Time = 0.70 sec. 
* 5: Cost = 6666012, Time = 0.77 sec. 
* 6: Cost = 6665358, Time = 0.82 sec. 
* 7: Cost = 6665319, Time = 0.87 sec. 
* 8: Cost = 6665121, Time = 0.94 sec. 
* 9: Cost = 6663770, Time = 0.99 sec. 
* 10: Cost = 6663371, Time = 1.04 sec. 
* 11: Cost = 6662958, Time = 1.10 sec. 
* 12: Cost = 6662878, Time = 1.15 sec. 
* 13: Cost = 6662624, Time = 1.20 sec. 
* 14: Cost = 6662311, Time = 1.25 sec. 
* 15: Cost = 6662309, Time = 1.30 sec. 
* 16: Cost = 6662299, Time = 1.36 sec. 
* 17: Cost = 6662180, Time = 1.42 sec. 
* 18: Cost = 6662141, Time = 1.47 sec. 
* 19: Cost = 6662104, Time = 1.53 sec. 
* 20: Cost = 6662102, Time = 1.59 sec. 
* 21: Cost = 6662099, Time = 1.64 sec. 
* 22: Cost = 6662080, Time = 1.69 sec. 
* 24: Cost = 6661950, Time = 1.80 sec. 
* 25: Cost = 6661707, Time = 1.85 sec. 
* 26: Cost = 6661688, Time = 1.90 sec. 
* 27: Cost = 6661363, Time = 1.97 sec. 
* 28: Cost = 6660987, Time = 2.03 sec. 
* 29: Cost = 6658816, Time = 2.08 sec. 
* 30: Cost = 6658812, Time = 2.14 sec. 
* 31: Cost = 6658598, Time = 2.19 sec. 
* 33: Cost = 6658288, Time = 2.31 sec. 
* 35: Cost = 6657938, Time = 2.43 sec. 
* 36: Cost = 6657759, Time = 2.49 sec. 
* 37: Cost = 6657722, Time = 2.54 sec. 
* 38: Cost = 6657323, Time = 2.60 sec. 
* 39: Cost = 6657322, Time = 2.66 sec. 
* 40: Cost = 6657231, Time = 2.72 sec. 
* 41: Cost = 6656890, Time = 2.78 sec. 
* 42: Cost = 6652907, Time = 2.85 sec. 
* 43: Cost = 6650213, Time = 2.94 sec. 
* 44: Cost = 6650126, Time = 3.00 sec. 
* 45: Cost = 6650055, Time = 3.07 sec. 
* 46: Cost = 6650013, Time = 3.12 sec. 
* 47: Cost = 6649930, Time = 3.18 sec. 
* 51: Cost = 6649866, Time = 3.38 sec. 
* 53: Cost = 6649795, Time = 3.49 sec. 
* 55: Cost = 6649791, Time = 3.60 sec. 
* 59: Cost = 6649778, Time = 3.83 sec. 
* 61: Cost = 6649777, Time = 3.95 sec. 
* 62: Cost = 6649763, Time = 4.01 sec. 
* 63: Cost = 6649310, Time = 4.07 sec. 
* 64: Cost = 6648862, Time = 4.12 sec. 
* 66: Cost = 6648800, Time = 4.24 sec. 
* 68: Cost = 6648777, Time = 4.35 sec. 
* 70: Cost = 6648747, Time = 4.45 sec. 
* 71: Cost = 6648413, Time = 4.51 sec. 
* 72: Cost = 6648354, Time = 4.57 sec. 
* 76: Cost = 6648353, Time = 4.79 sec. 
* 79: Cost = 6648030, Time = 4.96 sec. 
* 80: Cost = 6647225, Time = 5.02 sec. 
* 81: Cost = 6647161, Time = 5.07 sec. 
* 82: Cost = 6646201, Time = 5.13 sec. 
* 85: Cost = 6646197, Time = 5.31 sec. 
* 88: Cost = 6646099, Time = 5.48 sec. 
* 89: Cost = 6646098, Time = 5.54 sec. 
* 99: Cost = 6645882, Time = 6.09 sec. 
* 101: Cost = 6645838, Time = 6.21 sec. 
* 102: Cost = 6645638, Time = 6.26 sec. 
* 103: Cost = 6645524, Time = 6.31 sec. 
* 110: Cost = 6644997, Time = 6.70 sec. 
* 111: Cost = 6644873, Time = 6.77 sec. 
* 112: Cost = 6644585, Time = 6.83 sec. 
* 115: Cost = 6644565, Time = 7.01 sec. 
* 117: Cost = 6644556, Time = 7.13 sec. 
* 118: Cost = 6644295, Time = 7.18 sec. 
* 119: Cost = 6644290, Time = 7.24 sec. 
* 130: Cost = 6644231, Time = 7.87 sec. 
* 131: Cost = 6644103, Time = 7.93 sec. 
* 134: Cost = 6644102, Time = 8.10 sec. 
*** The extent of improvement(1780) is too small in 2.0s ***
Run 1: Cost = 6644102, Time = 8.10 sec. 

Successes/Runs = 0/1
Cost.min = 6644102, Cost.avg = 6644102.00, Cost.max = 6644102
Gap.min = 0.0000%, Gap.avg = 0.0000%, Gap.max = 0.0000%
Trials.min = 134, Trials.avg = 134.0, Trials.max = 134
Time.min = 8.10 sec., Time.avg = 8.10 sec., Time.max = 8.10 sec.
Time.total = 19.75 sec.

Key Metrics:
	ioCount:			 5000
	algorithmRunningDuration:	 19753.890 (ms)
	memoryUse:			 0 (KB)
	addressingDuration:		 6644102 (ms)
	readDuration:			 5356100 (ms)
	tapeBeltWear:			 11936007
	tapeMotorWear:			 216
	errorIOCount:			 0

指标写入文件 ./metrics.txt
