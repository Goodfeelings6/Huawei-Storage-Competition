

Welcome to HW project.

The file path is: /home/csg/Huawei-Storage-Competition/test/dataset/case_207.txt
head info : [253,507465,0]

io count = 5000


Reading TOUR...done
done
ASCENT_CANDIDATES = 25
BACKBONE_TRIALS = 0
BACKTRACKING = NO
# CANDIDATE_FILE =
CANDIDATE_SET_TYPE = POPMUSIC
# EDGE_FILE =
EXCESS = 9.996e-05
EXTRA_CANDIDATES = 0 
EXTRA_CANDIDATE_SET_TYPE = QUADRANT
GAIN23 = YES
GAIN_CRITERION = YES
INITIAL_PERIOD = 5002
INITIAL_STEP_SIZE = 1
INITIAL_TOUR_ALGORITHM = WALK
# INITIAL_TOUR_FILE = 
INITIAL_TOUR_FRACTION = 1.000
# INPUT_TOUR_FILE = 
KICK_TYPE = 0
KICKS = 1
# MAX_BREADTH =
MAX_CANDIDATES = 5 
MAX_SWAPS = 10004
MAX_TRIALS = 10004
# MERGE_TOUR_FILE =
MOVE_TYPE = 5
# NONSEQUENTIAL_MOVE_TYPE = 5
# OPTIMUM =
# OUTPUT_TOUR_FILE = 
PATCHING_A = 1 
PATCHING_C = 0 
# PI_FILE = 
POPMUSIC_INITIAL_TOUR = YES
POPMUSIC_MAX_NEIGHBORS = 5
POPMUSIC_SAMPLE_SIZE = 10
POPMUSIC_SOLUTIONS = 50
POPMUSIC_TRIALS = 1
# POPULATION_SIZE = 0
PRECISION = 100
# PROBLEM_FILE = 
RECOMBINATION = IPT
RESTRICTED_SEARCH = YES
RUNS = 1
SEED = 1
STOP_AT_OPTIMUM = YES
SUBGRADIENT = NO
# SUBPROBLEM_SIZE =
# SUBPROBLEM_TOUR_FILE = 
SUBSEQUENT_MOVE_TYPE = 5
SUBSEQUENT_PATCHING = YES
# TIME_LIMIT =
TOTAL_TIME_LIMIT = 20.0
# TOUR_FILE = 
TRACE_LEVEL = 1

Lower bound = 1417004.0, Ascent time = 10.97 sec.
Cand.min = 2, Cand.avg = 6.0, Cand.max = 7
Edges.fixed = 5003 [Cost = 0]
Preprocessing time = 11.00 sec.
* 1: Cost = 6626249, Time = 0.40 sec. 
* 2: Cost = 6598769, Time = 0.56 sec. 
* 3: Cost = 6598483, Time = 0.65 sec. 
* 4: Cost = 6598360, Time = 0.71 sec. 
* 5: Cost = 6598277, Time = 0.77 sec. 
* 7: Cost = 6598237, Time = 0.89 sec. 
* 8: Cost = 6598230, Time = 0.94 sec. 
* 10: Cost = 6597749, Time = 1.06 sec. 
* 11: Cost = 6597628, Time = 1.12 sec. 
* 12: Cost = 6597058, Time = 1.17 sec. 
* 13: Cost = 6596774, Time = 1.23 sec. 
* 14: Cost = 6596772, Time = 1.28 sec. 
* 15: Cost = 6596721, Time = 1.33 sec. 
* 16: Cost = 6596674, Time = 1.38 sec. 
* 17: Cost = 6595090, Time = 1.45 sec. 
* 18: Cost = 6594902, Time = 1.51 sec. 
* 19: Cost = 6594491, Time = 1.57 sec. 
* 20: Cost = 6594468, Time = 1.63 sec. 
* 22: Cost = 6594464, Time = 1.73 sec. 
* 23: Cost = 6594247, Time = 1.78 sec. 
* 24: Cost = 6594125, Time = 1.84 sec. 
* 25: Cost = 6594062, Time = 1.90 sec. 
* 26: Cost = 6593997, Time = 1.95 sec. 
* 27: Cost = 6592672, Time = 2.03 sec. 
* 28: Cost = 6592618, Time = 2.08 sec. 
* 29: Cost = 6592539, Time = 2.14 sec. 
* 31: Cost = 6592515, Time = 2.24 sec. 
* 32: Cost = 6592494, Time = 2.29 sec. 
* 33: Cost = 6592485, Time = 2.34 sec. 
* 34: Cost = 6592454, Time = 2.39 sec. 
* 35: Cost = 6592447, Time = 2.46 sec. 
* 36: Cost = 6592404, Time = 2.51 sec. 
* 37: Cost = 6592394, Time = 2.57 sec. 
* 38: Cost = 6592350, Time = 2.63 sec. 
* 39: Cost = 6592258, Time = 2.69 sec. 
* 40: Cost = 6592257, Time = 2.74 sec. 
* 42: Cost = 6586830, Time = 2.86 sec. 
* 43: Cost = 6584109, Time = 2.92 sec. 
* 45: Cost = 6584070, Time = 3.03 sec. 
* 47: Cost = 6583213, Time = 3.15 sec. 
* 53: Cost = 6583211, Time = 3.48 sec. 
* 55: Cost = 6582873, Time = 3.59 sec. 
* 56: Cost = 6582761, Time = 3.65 sec. 
* 57: Cost = 6582730, Time = 3.71 sec. 
* 59: Cost = 6582705, Time = 3.82 sec. 
* 61: Cost = 6582692, Time = 3.93 sec. 
* 62: Cost = 6582691, Time = 3.99 sec. 
* 63: Cost = 6582663, Time = 4.06 sec. 
* 64: Cost = 6580597, Time = 4.12 sec. 
* 65: Cost = 6579937, Time = 4.18 sec. 
* 66: Cost = 6579920, Time = 4.24 sec. 
* 67: Cost = 6578566, Time = 4.30 sec. 
* 68: Cost = 6577728, Time = 4.37 sec. 
* 69: Cost = 6577721, Time = 4.43 sec. 
* 70: Cost = 6577398, Time = 4.50 sec. 
* 71: Cost = 6575159, Time = 4.59 sec. 
* 72: Cost = 6574897, Time = 4.64 sec. 
* 73: Cost = 6573889, Time = 4.70 sec. 
* 74: Cost = 6573845, Time = 4.76 sec. 
* 75: Cost = 6573831, Time = 4.81 sec. 
* 77: Cost = 6573699, Time = 4.91 sec. 
* 78: Cost = 6573570, Time = 4.96 sec. 
* 80: Cost = 6572341, Time = 5.09 sec. 
* 81: Cost = 6570687, Time = 5.16 sec. 
* 85: Cost = 6570639, Time = 5.38 sec. 
* 87: Cost = 6570636, Time = 5.49 sec. 
* 93: Cost = 6569265, Time = 5.83 sec. 
* 97: Cost = 6569159, Time = 6.06 sec. 
* 98: Cost = 6569111, Time = 6.12 sec. 
* 99: Cost = 6569104, Time = 6.17 sec. 
* 101: Cost = 6568852, Time = 6.27 sec. 
* 104: Cost = 6568851, Time = 6.44 sec. 
* 105: Cost = 6568849, Time = 6.51 sec. 
* 113: Cost = 6568611, Time = 6.97 sec. 
* 114: Cost = 6568602, Time = 7.05 sec. 
* 115: Cost = 6568371, Time = 7.11 sec. 
* 116: Cost = 6568310, Time = 7.17 sec. 
* 117: Cost = 6568257, Time = 7.23 sec. 
* 118: Cost = 6567816, Time = 7.28 sec. 
* 119: Cost = 6567599, Time = 7.35 sec. 
* 121: Cost = 6567590, Time = 7.45 sec. 
* 128: Cost = 6567493, Time = 7.87 sec. 
* 129: Cost = 6567455, Time = 7.93 sec. 
* 130: Cost = 6567454, Time = 8.00 sec. 
* 131: Cost = 6567416, Time = 8.06 sec. 
* 133: Cost = 6567361, Time = 8.21 sec. 
*** The extent of improvement(1750) is too small in 2.0s ***
Run 1: Cost = 6567361, Time = 8.21 sec. 

Successes/Runs = 0/1
Cost.min = 6567361, Cost.avg = 6567361.00, Cost.max = 6567361
Gap.min = 0.0000%, Gap.avg = 0.0000%, Gap.max = 0.0000%
Trials.min = 133, Trials.avg = 133.0, Trials.max = 133
Time.min = 8.21 sec., Time.avg = 8.21 sec., Time.max = 8.21 sec.
Time.total = 19.98 sec.

Key Metrics:
	ioCount:			 5000
	algorithmRunningDuration:	 19980.129 (ms)
	memoryUse:			 0 (KB)
	addressingDuration:		 6567361 (ms)
	readDuration:			 5207890 (ms)
	tapeBeltWear:			 11721344
	tapeMotorWear:			 241
	errorIOCount:			 0

指标写入文件 ./metrics.txt
