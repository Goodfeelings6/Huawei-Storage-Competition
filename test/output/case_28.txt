

Welcome to HW project.

The file path is: /home/csg/Huawei-Storage-Competition/test/dataset/case_28.txt
head info : [112,237707,1]

io count = 1000


base_totaltime = 10497874.000089
base_tapeBeltWear = 7189319.000000
base_tapeMotorWear = 2214.000000
new base_totaltime = 1.000000
new base_tapeBeltWear = 0.684836
new base_tapeMotorWear = 0.000211
Reading TOUR...done
done
ASCENT_CANDIDATES = 50
BACKBONE_TRIALS = 0
BACKTRACKING = NO
# CANDIDATE_FILE =
CANDIDATE_SET_TYPE = POPMUSIC
# EDGE_FILE =
EXCESS = 0.000499002
EXTRA_CANDIDATES = 0 
EXTRA_CANDIDATE_SET_TYPE = QUADRANT
GAIN23 = YES
GAIN_CRITERION = YES
INITIAL_PERIOD = 1002
INITIAL_STEP_SIZE = 1
INITIAL_TOUR_ALGORITHM = WALK
# INITIAL_TOUR_FILE = 
INITIAL_TOUR_FRACTION = 1.000
# INPUT_TOUR_FILE = 
KICK_TYPE = 0
KICKS = 1
# MAX_BREADTH =
MAX_CANDIDATES = 5 
MAX_SWAPS = 2004
MAX_TRIALS = 2004
# MERGE_TOUR_FILE =
MOVE_TYPE = 3
# NONSEQUENTIAL_MOVE_TYPE = 3
# OPTIMUM =
# OUTPUT_TOUR_FILE = 
PATCHING_A = 1 
PATCHING_C = 0 
# PI_FILE = 
POPMUSIC_INITIAL_TOUR = YES
POPMUSIC_MAX_NEIGHBORS = 5
POPMUSIC_SAMPLE_SIZE = 10
POPMUSIC_SOLUTIONS = 50
POPMUSIC_TRIALS = 1
# POPULATION_SIZE = 0
PRECISION = 100
# PROBLEM_FILE = 
RECOMBINATION = IPT
RESTRICTED_SEARCH = YES
RUNS = 1
SEED = 1
STOP_AT_OPTIMUM = YES
SUBGRADIENT = NO
# SUBPROBLEM_SIZE =
# SUBPROBLEM_TOUR_FILE = 
SUBSEQUENT_MOVE_TYPE = 3
SUBSEQUENT_PATCHING = YES
# TIME_LIMIT =
TOTAL_TIME_LIMIT = 20.0
# TOUR_FILE = 
TRACE_LEVEL = 1

Lower bound = 831192.0, Ascent time = 0.95 sec.
Cand.min = 2, Cand.avg = 5.9, Cand.max = 7
Edges.fixed = 1003 [Cost = 0]
Preprocessing time = 0.95 sec.
* 1: Cost = 2815275, Time = 0.02 sec. 
* 2: Cost = 2799743, Time = 0.03 sec. 
* 3: Cost = 2799222, Time = 0.03 sec. 
* 4: Cost = 2798205, Time = 0.04 sec. 
* 5: Cost = 2775817, Time = 0.05 sec. 
* 6: Cost = 2757981, Time = 0.06 sec. 
* 8: Cost = 2757980, Time = 0.08 sec. 
* 10: Cost = 2757554, Time = 0.09 sec. 
* 11: Cost = 2757508, Time = 0.10 sec. 
* 12: Cost = 2757501, Time = 0.11 sec. 
* 13: Cost = 2757477, Time = 0.11 sec. 
* 14: Cost = 2756486, Time = 0.12 sec. 
* 18: Cost = 2749402, Time = 0.15 sec. 
* 19: Cost = 2748940, Time = 0.16 sec. 
* 20: Cost = 2748887, Time = 0.17 sec. 
* 23: Cost = 2748851, Time = 0.19 sec. 
* 27: Cost = 2748713, Time = 0.22 sec. 
* 28: Cost = 2748711, Time = 0.23 sec. 
* 29: Cost = 2748575, Time = 0.24 sec. 
* 30: Cost = 2748572, Time = 0.24 sec. 
* 31: Cost = 2747908, Time = 0.25 sec. 
* 35: Cost = 2747880, Time = 0.28 sec. 
* 36: Cost = 2747784, Time = 0.29 sec. 
* 37: Cost = 2747750, Time = 0.30 sec. 
* 45: Cost = 2747627, Time = 0.36 sec. 
* 47: Cost = 2747605, Time = 0.37 sec. 
* 48: Cost = 2747599, Time = 0.38 sec. 
* 51: Cost = 2747581, Time = 0.40 sec. 
* 52: Cost = 2747299, Time = 0.41 sec. 
* 53: Cost = 2747256, Time = 0.42 sec. 
* 54: Cost = 2747027, Time = 0.43 sec. 
* 55: Cost = 2747018, Time = 0.43 sec. 
* 56: Cost = 2747005, Time = 0.44 sec. 
* 58: Cost = 2746994, Time = 0.46 sec. 
* 62: Cost = 2746988, Time = 0.49 sec. 
* 66: Cost = 2746985, Time = 0.52 sec. 
* 67: Cost = 2746112, Time = 0.52 sec. 
* 68: Cost = 2746099, Time = 0.53 sec. 
* 69: Cost = 2746090, Time = 0.54 sec. 
* 77: Cost = 2746076, Time = 0.60 sec. 
* 81: Cost = 2746057, Time = 0.64 sec. 
* 93: Cost = 2745946, Time = 0.72 sec. 
* 99: Cost = 2745873, Time = 0.77 sec. 
* 100: Cost = 2745859, Time = 0.77 sec. 
* 105: Cost = 2745828, Time = 0.81 sec. 
* 111: Cost = 2745815, Time = 0.86 sec. 
* 120: Cost = 2745791, Time = 0.93 sec. 
* 121: Cost = 2745781, Time = 0.94 sec. 
* 122: Cost = 2745768, Time = 0.95 sec. 
* 129: Cost = 2745762, Time = 1.00 sec. 
* 134: Cost = 2745749, Time = 1.04 sec. 
* 137: Cost = 2745748, Time = 1.06 sec. 
* 149: Cost = 2745685, Time = 1.15 sec. 
* 151: Cost = 2745679, Time = 1.17 sec. 
* 152: Cost = 2745649, Time = 1.17 sec. 
* 155: Cost = 2745624, Time = 1.20 sec. 
* 156: Cost = 2745592, Time = 1.21 sec. 
* 165: Cost = 2745590, Time = 1.28 sec. 
* 172: Cost = 2745581, Time = 1.33 sec. 
* 178: Cost = 2745571, Time = 1.38 sec. 
* 230: Cost = 2745450, Time = 1.78 sec. 
* 231: Cost = 2745447, Time = 1.79 sec. 
* 273: Cost = 2744634, Time = 2.11 sec. 
* 276: Cost = 2744624, Time = 2.13 sec. 
* 422: Cost = 2744617, Time = 3.27 sec. 
* 426: Cost = 2744615, Time = 3.30 sec. 
* 434: Cost = 2744601, Time = 3.37 sec. 
* 467: Cost = 2744575, Time = 3.73 sec. 
* 468: Cost = 2744516, Time = 3.74 sec. 
* 472: Cost = 2744515, Time = 3.77 sec. 
* 477: Cost = 2744514, Time = 3.81 sec. 
*** The extent of improvement(933) is too small in 2.0s ***
Run 1: Cost = 2744514, Time = 4.01 sec. 

Successes/Runs = 0/1
Cost.min = 2744514, Cost.avg = 2744514.00, Cost.max = 2744514
Gap.min = 0.0000%, Gap.avg = 0.0000%, Gap.max = 0.0000%
Trials.min = 503, Trials.avg = 503.0, Trials.max = 503
Time.min = 4.01 sec., Time.avg = 4.01 sec., Time.max = 4.01 sec.
Time.total = 5.02 sec.

Key Metrics:
	ioCount:			 1000
	algorithmRunningDuration:	 5044.501 (ms)
	memoryUse:			 5393.33 (KB)
	addressingDuration:		 2712541 (ms)
	readDuration:			 1121891 (ms)
	tapeBeltWear:			 3850417
	tapeMotorWear:			 160
	errorIOCount:			 0

指标写入文件 ./metrics.txt
