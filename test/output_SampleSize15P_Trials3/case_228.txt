

Welcome to HW project.

The file path is: /home/csg/Huawei-Storage-Competition/test/dataset/case_228.txt
head info : [162,342924,0]

io count = 5000


Reading TOUR...done
done
ASCENT_CANDIDATES = 25
BACKBONE_TRIALS = 0
BACKTRACKING = NO
# CANDIDATE_FILE =
CANDIDATE_SET_TYPE = POPMUSIC
# EDGE_FILE =
EXCESS = 9.996e-05
EXTRA_CANDIDATES = 0 
EXTRA_CANDIDATE_SET_TYPE = QUADRANT
GAIN23 = YES
GAIN_CRITERION = YES
INITIAL_PERIOD = 5002
INITIAL_STEP_SIZE = 1
INITIAL_TOUR_ALGORITHM = WALK
# INITIAL_TOUR_FILE = 
INITIAL_TOUR_FRACTION = 1.000
# INPUT_TOUR_FILE = 
KICK_TYPE = 0
KICKS = 1
# MAX_BREADTH =
MAX_CANDIDATES = 5 
MAX_SWAPS = 10004
MAX_TRIALS = 10004
# MERGE_TOUR_FILE =
MOVE_TYPE = 3
# NONSEQUENTIAL_MOVE_TYPE = 3
# OPTIMUM =
# OUTPUT_TOUR_FILE = 
PATCHING_A = 1 
PATCHING_C = 0 
# PI_FILE = 
POPMUSIC_INITIAL_TOUR = YES
POPMUSIC_MAX_NEIGHBORS = 5
POPMUSIC_SAMPLE_SIZE = 15
POPMUSIC_SOLUTIONS = 15
POPMUSIC_TRIALS = 3
# POPULATION_SIZE = 0
PRECISION = 100
# PROBLEM_FILE = 
RECOMBINATION = IPT
RESTRICTED_SEARCH = YES
RUNS = 1
SEED = 1
STOP_AT_OPTIMUM = YES
SUBGRADIENT = NO
# SUBPROBLEM_SIZE =
# SUBPROBLEM_TOUR_FILE = 
SUBSEQUENT_MOVE_TYPE = 3
SUBSEQUENT_PATCHING = YES
# TIME_LIMIT =
TOTAL_TIME_LIMIT = 20.0
# TOUR_FILE = 
TRACE_LEVEL = 1

Lower bound = 1613063.0, Ascent time = 3.93 sec.
Cand.min = 2, Cand.avg = 5.8, Cand.max = 7
Edges.fixed = 5003 [Cost = 0]
Preprocessing time = 3.96 sec.
* 1: Cost = 6798332, Time = 0.18 sec. 
* 2: Cost = 6777267, Time = 0.26 sec. 
* 3: Cost = 6709117, Time = 0.33 sec. 
* 4: Cost = 6693987, Time = 0.39 sec. 
* 5: Cost = 6689118, Time = 0.44 sec. 
* 6: Cost = 6685072, Time = 0.52 sec. 
* 7: Cost = 6685064, Time = 0.59 sec. 
* 8: Cost = 6678817, Time = 0.65 sec. 
* 9: Cost = 6671662, Time = 0.73 sec. 
* 10: Cost = 6669428, Time = 0.79 sec. 
* 11: Cost = 6669237, Time = 0.86 sec. 
* 12: Cost = 6666171, Time = 0.92 sec. 
* 13: Cost = 6661466, Time = 0.98 sec. 
* 14: Cost = 6661432, Time = 1.05 sec. 
* 15: Cost = 6660161, Time = 1.12 sec. 
* 16: Cost = 6657891, Time = 1.18 sec. 
* 17: Cost = 6657844, Time = 1.24 sec. 
* 18: Cost = 6655633, Time = 1.31 sec. 
* 19: Cost = 6652309, Time = 1.38 sec. 
* 20: Cost = 6649642, Time = 1.45 sec. 
* 22: Cost = 6649269, Time = 1.58 sec. 
* 23: Cost = 6646864, Time = 1.65 sec. 
* 24: Cost = 6646059, Time = 1.71 sec. 
* 26: Cost = 6645439, Time = 1.85 sec. 
* 27: Cost = 6645314, Time = 1.91 sec. 
* 28: Cost = 6645138, Time = 1.98 sec. 
* 29: Cost = 6644799, Time = 2.04 sec. 
* 30: Cost = 6643543, Time = 2.10 sec. 
* 33: Cost = 6643448, Time = 2.30 sec. 
* 34: Cost = 6643384, Time = 2.36 sec. 
* 38: Cost = 6640882, Time = 2.60 sec. 
* 39: Cost = 6640769, Time = 2.66 sec. 
* 40: Cost = 6640465, Time = 2.73 sec. 
* 41: Cost = 6640029, Time = 2.80 sec. 
* 42: Cost = 6637188, Time = 2.86 sec. 
* 46: Cost = 6636155, Time = 3.14 sec. 
* 50: Cost = 6634422, Time = 3.40 sec. 
* 54: Cost = 6634406, Time = 3.66 sec. 
* 55: Cost = 6633942, Time = 3.73 sec. 
* 56: Cost = 6633653, Time = 3.79 sec. 
* 58: Cost = 6625843, Time = 3.91 sec. 
* 59: Cost = 6624828, Time = 3.98 sec. 
* 61: Cost = 6624709, Time = 4.11 sec. 
* 62: Cost = 6623662, Time = 4.18 sec. 
* 63: Cost = 6623034, Time = 4.24 sec. 
* 64: Cost = 6622799, Time = 4.31 sec. 
* 65: Cost = 6622793, Time = 4.39 sec. 
* 67: Cost = 6622057, Time = 4.52 sec. 
* 69: Cost = 6621614, Time = 4.67 sec. 
* 70: Cost = 6620594, Time = 4.73 sec. 
* 71: Cost = 6620293, Time = 4.78 sec. 
* 72: Cost = 6620035, Time = 4.86 sec. 
* 73: Cost = 6620018, Time = 4.92 sec. 
* 75: Cost = 6619587, Time = 5.06 sec. 
* 76: Cost = 6618604, Time = 5.12 sec. 
* 77: Cost = 6618425, Time = 5.18 sec. 
* 80: Cost = 6617916, Time = 5.37 sec. 
* 82: Cost = 6617860, Time = 5.52 sec. 
* 83: Cost = 6617692, Time = 5.59 sec. 
* 84: Cost = 6617117, Time = 5.67 sec. 
* 85: Cost = 6616982, Time = 5.73 sec. 
* 86: Cost = 6616670, Time = 5.80 sec. 
* 88: Cost = 6616655, Time = 5.92 sec. 
* 95: Cost = 6616556, Time = 6.40 sec. 
* 99: Cost = 6616428, Time = 6.67 sec. 
* 100: Cost = 6613776, Time = 6.74 sec. 
* 101: Cost = 6613731, Time = 6.80 sec. 
* 102: Cost = 6613279, Time = 6.87 sec. 
* 108: Cost = 6613263, Time = 7.26 sec. 
* 109: Cost = 6612976, Time = 7.33 sec. 
* 111: Cost = 6612821, Time = 7.47 sec. 
* 114: Cost = 6612379, Time = 7.68 sec. 
* 120: Cost = 6611448, Time = 8.11 sec. 
* 121: Cost = 6611401, Time = 8.18 sec. 
* 129: Cost = 6610952, Time = 8.76 sec. 
* 134: Cost = 6610859, Time = 9.08 sec. 
* 138: Cost = 6610785, Time = 9.35 sec. 
* 142: Cost = 6610592, Time = 9.62 sec. 
*** The extent of improvement(856) is too small in 2.0s ***
Run 1: Cost = 6610592, Time = 10.16 sec. 

Successes/Runs = 0/1
Cost.min = 6610592, Cost.avg = 6610592.00, Cost.max = 6610592
Gap.min = 0.0000%, Gap.avg = 0.0000%, Gap.max = 0.0000%
Trials.min = 150, Trials.avg = 150.0, Trials.max = 150
Time.min = 10.16 sec., Time.avg = 10.16 sec., Time.max = 10.16 sec.
Time.total = 14.89 sec.

Key Metrics:
	ioCount:			 5000
	algorithmRunningDuration:	 14887.102 (ms)
	memoryUse:			 0 (KB)
	addressingDuration:		 6610592 (ms)
	readDuration:			 5197790 (ms)
	tapeBeltWear:			 11619734
	tapeMotorWear:			 267
	errorIOCount:			 0

指标写入文件 ./metrics.txt
