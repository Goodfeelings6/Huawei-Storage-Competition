

Welcome to HW project.

The file path is: /home/csg/Huawei-Storage-Competition/test/dataset/case_238.txt
head info : [48,292222,0]

io count = 5000


Reading TOUR...done
done
ASCENT_CANDIDATES = 25
BACKBONE_TRIALS = 0
BACKTRACKING = NO
# CANDIDATE_FILE =
CANDIDATE_SET_TYPE = POPMUSIC
# EDGE_FILE =
EXCESS = 9.996e-05
EXTRA_CANDIDATES = 0 
EXTRA_CANDIDATE_SET_TYPE = QUADRANT
GAIN23 = YES
GAIN_CRITERION = YES
INITIAL_PERIOD = 5002
INITIAL_STEP_SIZE = 1
INITIAL_TOUR_ALGORITHM = WALK
# INITIAL_TOUR_FILE = 
INITIAL_TOUR_FRACTION = 1.000
# INPUT_TOUR_FILE = 
KICK_TYPE = 0
KICKS = 1
# MAX_BREADTH =
MAX_CANDIDATES = 5 
MAX_SWAPS = 10004
MAX_TRIALS = 10004
# MERGE_TOUR_FILE =
MOVE_TYPE = 3
# NONSEQUENTIAL_MOVE_TYPE = 3
# OPTIMUM =
# OUTPUT_TOUR_FILE = 
PATCHING_A = 1 
PATCHING_C = 0 
# PI_FILE = 
POPMUSIC_INITIAL_TOUR = YES
POPMUSIC_MAX_NEIGHBORS = 5
POPMUSIC_SAMPLE_SIZE = 15
POPMUSIC_SOLUTIONS = 15
POPMUSIC_TRIALS = 3
# POPULATION_SIZE = 0
PRECISION = 100
# PROBLEM_FILE = 
RECOMBINATION = IPT
RESTRICTED_SEARCH = YES
RUNS = 1
SEED = 1
STOP_AT_OPTIMUM = YES
SUBGRADIENT = NO
# SUBPROBLEM_SIZE =
# SUBPROBLEM_TOUR_FILE = 
SUBSEQUENT_MOVE_TYPE = 3
SUBSEQUENT_PATCHING = YES
# TIME_LIMIT =
TOTAL_TIME_LIMIT = 20.0
# TOUR_FILE = 
TRACE_LEVEL = 1

Lower bound = 1682518.0, Ascent time = 3.93 sec.
Cand.min = 2, Cand.avg = 5.8, Cand.max = 7
Edges.fixed = 5003 [Cost = 0]
Preprocessing time = 3.95 sec.
* 1: Cost = 7130821, Time = 0.18 sec. 
* 2: Cost = 7064101, Time = 0.28 sec. 
* 3: Cost = 6996195, Time = 0.36 sec. 
* 4: Cost = 6990197, Time = 0.43 sec. 
* 5: Cost = 6973643, Time = 0.51 sec. 
* 6: Cost = 6944707, Time = 0.58 sec. 
* 7: Cost = 6941634, Time = 0.65 sec. 
* 8: Cost = 6937414, Time = 0.72 sec. 
* 12: Cost = 6936161, Time = 0.98 sec. 
* 13: Cost = 6932304, Time = 1.05 sec. 
* 14: Cost = 6929742, Time = 1.12 sec. 
* 15: Cost = 6929527, Time = 1.18 sec. 
* 16: Cost = 6925724, Time = 1.26 sec. 
* 17: Cost = 6909529, Time = 1.33 sec. 
* 18: Cost = 6904689, Time = 1.41 sec. 
* 19: Cost = 6903444, Time = 1.47 sec. 
* 21: Cost = 6902040, Time = 1.61 sec. 
* 23: Cost = 6899082, Time = 1.76 sec. 
* 24: Cost = 6898944, Time = 1.82 sec. 
* 28: Cost = 6898914, Time = 2.12 sec. 
* 30: Cost = 6898659, Time = 2.25 sec. 
* 31: Cost = 6898096, Time = 2.32 sec. 
* 32: Cost = 6896072, Time = 2.38 sec. 
* 33: Cost = 6895291, Time = 2.45 sec. 
* 35: Cost = 6893016, Time = 2.58 sec. 
* 36: Cost = 6891293, Time = 2.66 sec. 
* 37: Cost = 6888783, Time = 2.73 sec. 
* 39: Cost = 6887935, Time = 2.87 sec. 
* 40: Cost = 6886956, Time = 2.94 sec. 
* 42: Cost = 6886552, Time = 3.07 sec. 
* 45: Cost = 6886384, Time = 3.30 sec. 
* 50: Cost = 6886235, Time = 3.62 sec. 
* 54: Cost = 6885907, Time = 3.90 sec. 
* 56: Cost = 6885506, Time = 4.11 sec. 
* 57: Cost = 6884269, Time = 4.19 sec. 
* 58: Cost = 6883699, Time = 4.27 sec. 
* 60: Cost = 6883311, Time = 4.41 sec. 
* 64: Cost = 6882985, Time = 4.69 sec. 
* 67: Cost = 6882893, Time = 4.96 sec. 
* 69: Cost = 6882734, Time = 5.08 sec. 
* 70: Cost = 6881013, Time = 5.16 sec. 
* 71: Cost = 6880694, Time = 5.23 sec. 
* 74: Cost = 6880411, Time = 5.44 sec. 
* 76: Cost = 6880068, Time = 5.59 sec. 
* 84: Cost = 6879421, Time = 6.17 sec. 
* 87: Cost = 6879340, Time = 6.37 sec. 
* 88: Cost = 6879286, Time = 6.43 sec. 
* 90: Cost = 6879015, Time = 6.56 sec. 
* 91: Cost = 6878658, Time = 6.63 sec. 
* 94: Cost = 6878567, Time = 6.84 sec. 
* 97: Cost = 6877425, Time = 7.08 sec. 
* 100: Cost = 6877369, Time = 7.28 sec. 
* 101: Cost = 6877164, Time = 7.35 sec. 
* 103: Cost = 6875990, Time = 7.50 sec. 
* 109: Cost = 6874733, Time = 7.94 sec. 
* 110: Cost = 6874049, Time = 8.01 sec. 
* 111: Cost = 6873496, Time = 8.09 sec. 
* 112: Cost = 6872539, Time = 8.18 sec. 
* 113: Cost = 6871513, Time = 8.25 sec. 
* 117: Cost = 6870705, Time = 8.55 sec. 
* 125: Cost = 6870665, Time = 9.12 sec. 
* 128: Cost = 6870212, Time = 9.34 sec. 
* 134: Cost = 6869711, Time = 9.75 sec. 
* 135: Cost = 6869290, Time = 9.84 sec. 
* 136: Cost = 6868912, Time = 9.91 sec. 
* 137: Cost = 6866602, Time = 9.99 sec. 
* 147: Cost = 6865780, Time = 10.74 sec. 
* 150: Cost = 6863762, Time = 10.96 sec. 
* 151: Cost = 6860641, Time = 11.03 sec. 
* 153: Cost = 6860205, Time = 11.17 sec. 
* 156: Cost = 6859975, Time = 11.40 sec. 
* 157: Cost = 6859903, Time = 11.47 sec. 
* 158: Cost = 6857718, Time = 11.56 sec. 
* 162: Cost = 6857633, Time = 11.87 sec. 
* 166: Cost = 6857108, Time = 12.18 sec. 
* 168: Cost = 6857055, Time = 12.31 sec. 
* 172: Cost = 6856775, Time = 12.60 sec. 
* 175: Cost = 6856755, Time = 12.83 sec. 
* 176: Cost = 6856075, Time = 12.90 sec. 
* 177: Cost = 6856057, Time = 12.96 sec. 
* 179: Cost = 6856024, Time = 13.11 sec. 
* 185: Cost = 6855371, Time = 13.56 sec. 
*** The extent of improvement(1737) is too small in 2.0s ***
Run 1: Cost = 6855371, Time = 14.29 sec. 

Successes/Runs = 0/1
Cost.min = 6855371, Cost.avg = 6855371.00, Cost.max = 6855371
Gap.min = 0.0000%, Gap.avg = 0.0000%, Gap.max = 0.0000%
Trials.min = 195, Trials.avg = 195.0, Trials.max = 195
Time.min = 14.29 sec., Time.avg = 14.29 sec., Time.max = 14.29 sec.
Time.total = 19.08 sec.

Key Metrics:
	ioCount:			 5000
	algorithmRunningDuration:	 19077.508 (ms)
	memoryUse:			 0 (KB)
	addressingDuration:		 6855371 (ms)
	readDuration:			 5349469 (ms)
	tapeBeltWear:			 11943812
	tapeMotorWear:			 265
	errorIOCount:			 0

指标写入文件 ./metrics.txt
