

Welcome to HW project.

The file path is: /home/csg/Huawei-Storage-Competition/test/dataset/case_201.txt
head info : [223,314083,1]

io count = 2000


Reading TOUR...done
done
ASCENT_CANDIDATES = 25
BACKBONE_TRIALS = 0
BACKTRACKING = NO
# CANDIDATE_FILE =
CANDIDATE_SET_TYPE = POPMUSIC
# EDGE_FILE =
EXCESS = 0.00024975
EXTRA_CANDIDATES = 0 
EXTRA_CANDIDATE_SET_TYPE = QUADRANT
GAIN23 = YES
GAIN_CRITERION = YES
INITIAL_PERIOD = 2002
INITIAL_STEP_SIZE = 1
INITIAL_TOUR_ALGORITHM = WALK
# INITIAL_TOUR_FILE = 
INITIAL_TOUR_FRACTION = 1.000
# INPUT_TOUR_FILE = 
KICK_TYPE = 0
KICKS = 1
# MAX_BREADTH =
MAX_CANDIDATES = 5 
MAX_SWAPS = 4004
MAX_TRIALS = 4004
# MERGE_TOUR_FILE =
MOVE_TYPE = 3
# NONSEQUENTIAL_MOVE_TYPE = 3
# OPTIMUM =
# OUTPUT_TOUR_FILE = 
PATCHING_A = 1 
PATCHING_C = 0 
# PI_FILE = 
POPMUSIC_INITIAL_TOUR = YES
POPMUSIC_MAX_NEIGHBORS = 5
POPMUSIC_SAMPLE_SIZE = 15
POPMUSIC_SOLUTIONS = 15
POPMUSIC_TRIALS = 3
# POPULATION_SIZE = 0
PRECISION = 100
# PROBLEM_FILE = 
RECOMBINATION = IPT
RESTRICTED_SEARCH = YES
RUNS = 1
SEED = 1
STOP_AT_OPTIMUM = YES
SUBGRADIENT = NO
# SUBPROBLEM_SIZE =
# SUBPROBLEM_TOUR_FILE = 
SUBSEQUENT_MOVE_TYPE = 3
SUBSEQUENT_PATCHING = YES
# TIME_LIMIT =
TOTAL_TIME_LIMIT = 20.0
# TOUR_FILE = 
TRACE_LEVEL = 1

Lower bound = 1167589.0, Ascent time = 0.85 sec.
Cand.min = 2, Cand.avg = 5.7, Cand.max = 7
Edges.fixed = 2003 [Cost = 0]
Preprocessing time = 0.86 sec.
* 1: Cost = 3946685, Time = 0.05 sec. 
* 2: Cost = 3904167, Time = 0.07 sec. 
* 3: Cost = 3903862, Time = 0.09 sec. 
* 4: Cost = 3865135, Time = 0.10 sec. 
* 6: Cost = 3847612, Time = 0.14 sec. 
* 7: Cost = 3832571, Time = 0.16 sec. 
* 8: Cost = 3832302, Time = 0.18 sec. 
* 9: Cost = 3816954, Time = 0.19 sec. 
* 11: Cost = 3816797, Time = 0.23 sec. 
* 12: Cost = 3816635, Time = 0.25 sec. 
* 15: Cost = 3815878, Time = 0.30 sec. 
* 16: Cost = 3814660, Time = 0.32 sec. 
* 18: Cost = 3813152, Time = 0.35 sec. 
* 19: Cost = 3810646, Time = 0.37 sec. 
* 20: Cost = 3806685, Time = 0.38 sec. 
* 21: Cost = 3806121, Time = 0.40 sec. 
* 23: Cost = 3805951, Time = 0.44 sec. 
* 24: Cost = 3805758, Time = 0.46 sec. 
* 25: Cost = 3805633, Time = 0.48 sec. 
* 29: Cost = 3805251, Time = 0.54 sec. 
* 30: Cost = 3803654, Time = 0.56 sec. 
* 35: Cost = 3803575, Time = 0.65 sec. 
* 36: Cost = 3803535, Time = 0.66 sec. 
* 37: Cost = 3803497, Time = 0.68 sec. 
* 48: Cost = 3802168, Time = 0.86 sec. 
* 49: Cost = 3802134, Time = 0.88 sec. 
* 51: Cost = 3802032, Time = 0.91 sec. 
* 58: Cost = 3801727, Time = 1.04 sec. 
* 60: Cost = 3801323, Time = 1.07 sec. 
* 61: Cost = 3801246, Time = 1.09 sec. 
* 66: Cost = 3801190, Time = 1.18 sec. 
* 68: Cost = 3800888, Time = 1.22 sec. 
* 70: Cost = 3800781, Time = 1.26 sec. 
* 75: Cost = 3800646, Time = 1.34 sec. 
* 80: Cost = 3800533, Time = 1.43 sec. 
* 85: Cost = 3800229, Time = 1.52 sec. 
* 87: Cost = 3799535, Time = 1.56 sec. 
* 88: Cost = 3798801, Time = 1.57 sec. 
* 89: Cost = 3798685, Time = 1.59 sec. 
* 92: Cost = 3798678, Time = 1.65 sec. 
* 96: Cost = 3798676, Time = 1.72 sec. 
* 100: Cost = 3798587, Time = 1.79 sec. 
* 104: Cost = 3798336, Time = 1.87 sec. 
* 105: Cost = 3798177, Time = 1.89 sec. 
* 115: Cost = 3797914, Time = 2.08 sec. 
* 117: Cost = 3797813, Time = 2.12 sec. 
* 123: Cost = 3797804, Time = 2.23 sec. 
* 131: Cost = 3797784, Time = 2.37 sec. 
* 133: Cost = 3797761, Time = 2.40 sec. 
* 135: Cost = 3797756, Time = 2.44 sec. 
* 137: Cost = 3797747, Time = 2.47 sec. 
* 139: Cost = 3797478, Time = 2.51 sec. 
* 140: Cost = 3797423, Time = 2.53 sec. 
* 141: Cost = 3797015, Time = 2.55 sec. 
* 142: Cost = 3796924, Time = 2.57 sec. 
* 156: Cost = 3796797, Time = 2.82 sec. 
* 176: Cost = 3796713, Time = 3.19 sec. 
* 177: Cost = 3796708, Time = 3.21 sec. 
* 178: Cost = 3796340, Time = 3.23 sec. 
* 181: Cost = 3796074, Time = 3.29 sec. 
* 182: Cost = 3796038, Time = 3.30 sec. 
* 188: Cost = 3795986, Time = 3.41 sec. 
* 201: Cost = 3795749, Time = 3.66 sec. 
* 202: Cost = 3795724, Time = 3.68 sec. 
* 205: Cost = 3795688, Time = 3.73 sec. 
* 209: Cost = 3795526, Time = 3.80 sec. 
* 212: Cost = 3795500, Time = 3.86 sec. 
* 214: Cost = 3795445, Time = 3.90 sec. 
* 230: Cost = 3795436, Time = 4.19 sec. 
* 233: Cost = 3795332, Time = 4.25 sec. 
* 241: Cost = 3795182, Time = 4.40 sec. 
* 262: Cost = 3795055, Time = 4.78 sec. 
* 263: Cost = 3795008, Time = 4.79 sec. 
* 265: Cost = 3794904, Time = 4.83 sec. 
* 268: Cost = 3794355, Time = 4.89 sec. 
* 270: Cost = 3794297, Time = 4.92 sec. 
* 271: Cost = 3794213, Time = 4.94 sec. 
* 278: Cost = 3794179, Time = 5.07 sec. 
* 295: Cost = 3794156, Time = 5.36 sec. 
*** The extent of improvement(1289) is too small in 2.0s ***
Run 1: Cost = 3794156, Time = 6.02 sec. 

Successes/Runs = 0/1
Cost.min = 3794156, Cost.avg = 3794156.00, Cost.max = 3794156
Gap.min = 0.0000%, Gap.avg = 0.0000%, Gap.max = 0.0000%
Trials.min = 333, Trials.avg = 333.0, Trials.max = 333
Time.min = 6.02 sec., Time.avg = 6.02 sec., Time.max = 6.02 sec.
Time.total = 7.01 sec.

Key Metrics:
	ioCount:			 2000
	algorithmRunningDuration:	 7007.739 (ms)
	memoryUse:			 0 (KB)
	addressingDuration:		 3794156 (ms)
	readDuration:			 2189771 (ms)
	tapeBeltWear:			 6036307
	tapeMotorWear:			 168
	errorIOCount:			 0

指标写入文件 ./metrics.txt
