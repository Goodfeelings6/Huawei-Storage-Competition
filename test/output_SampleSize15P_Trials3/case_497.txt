

Welcome to HW project.

The file path is: /home/csg/Huawei-Storage-Competition/test/dataset/case_497.txt
head info : [133,348013,1]

io count = 6000


Reading TOUR...done
done
ASCENT_CANDIDATES = 25
BACKBONE_TRIALS = 0
BACKTRACKING = NO
# CANDIDATE_FILE =
CANDIDATE_SET_TYPE = POPMUSIC
# EDGE_FILE =
EXCESS = 8.33056e-05
EXTRA_CANDIDATES = 0 
EXTRA_CANDIDATE_SET_TYPE = QUADRANT
GAIN23 = YES
GAIN_CRITERION = YES
INITIAL_PERIOD = 6002
INITIAL_STEP_SIZE = 1
INITIAL_TOUR_ALGORITHM = WALK
# INITIAL_TOUR_FILE = 
INITIAL_TOUR_FRACTION = 1.000
# INPUT_TOUR_FILE = 
KICK_TYPE = 0
KICKS = 1
# MAX_BREADTH =
MAX_CANDIDATES = 5 
MAX_SWAPS = 12004
MAX_TRIALS = 12004
# MERGE_TOUR_FILE =
MOVE_TYPE = 3
# NONSEQUENTIAL_MOVE_TYPE = 3
# OPTIMUM =
# OUTPUT_TOUR_FILE = 
PATCHING_A = 1 
PATCHING_C = 0 
# PI_FILE = 
POPMUSIC_INITIAL_TOUR = YES
POPMUSIC_MAX_NEIGHBORS = 5
POPMUSIC_SAMPLE_SIZE = 15
POPMUSIC_SOLUTIONS = 15
POPMUSIC_TRIALS = 3
# POPULATION_SIZE = 0
PRECISION = 100
# PROBLEM_FILE = 
RECOMBINATION = IPT
RESTRICTED_SEARCH = YES
RUNS = 1
SEED = 1
STOP_AT_OPTIMUM = YES
SUBGRADIENT = NO
# SUBPROBLEM_SIZE =
# SUBPROBLEM_TOUR_FILE = 
SUBSEQUENT_MOVE_TYPE = 3
SUBSEQUENT_PATCHING = YES
# TIME_LIMIT =
TOTAL_TIME_LIMIT = 20.0
# TOUR_FILE = 
TRACE_LEVEL = 1

Lower bound = 1723541.0, Ascent time = 5.26 sec.
Cand.min = 2, Cand.avg = 5.8, Cand.max = 7
Edges.fixed = 6003 [Cost = 0]
Preprocessing time = 5.29 sec.
* 1: Cost = 7436254, Time = 0.23 sec. 
* 2: Cost = 7151567, Time = 0.36 sec. 
* 3: Cost = 7128005, Time = 0.45 sec. 
* 4: Cost = 7117733, Time = 0.53 sec. 
* 5: Cost = 7106630, Time = 0.61 sec. 
* 6: Cost = 7100517, Time = 0.71 sec. 
* 7: Cost = 7083777, Time = 0.79 sec. 
* 8: Cost = 7058442, Time = 0.87 sec. 
* 9: Cost = 7058278, Time = 0.95 sec. 
* 10: Cost = 7041482, Time = 1.04 sec. 
* 11: Cost = 7039235, Time = 1.12 sec. 
* 12: Cost = 7038562, Time = 1.20 sec. 
* 13: Cost = 7034207, Time = 1.29 sec. 
* 14: Cost = 7032744, Time = 1.36 sec. 
* 15: Cost = 7032060, Time = 1.45 sec. 
* 16: Cost = 7029941, Time = 1.54 sec. 
* 17: Cost = 7028354, Time = 1.62 sec. 
* 18: Cost = 7027184, Time = 1.71 sec. 
* 19: Cost = 7026754, Time = 1.80 sec. 
* 20: Cost = 7023254, Time = 1.89 sec. 
* 24: Cost = 7021133, Time = 2.20 sec. 
* 25: Cost = 7020765, Time = 2.29 sec. 
* 26: Cost = 7019956, Time = 2.37 sec. 
* 27: Cost = 7017570, Time = 2.46 sec. 
* 28: Cost = 7016794, Time = 2.55 sec. 
* 33: Cost = 7015830, Time = 2.95 sec. 
* 34: Cost = 7015394, Time = 3.03 sec. 
* 36: Cost = 7015027, Time = 3.19 sec. 
* 37: Cost = 7013586, Time = 3.28 sec. 
* 38: Cost = 7007938, Time = 3.36 sec. 
* 39: Cost = 7003714, Time = 3.44 sec. 
* 40: Cost = 7003486, Time = 3.52 sec. 
* 42: Cost = 7003334, Time = 3.69 sec. 
* 45: Cost = 7002986, Time = 3.94 sec. 
* 46: Cost = 7002826, Time = 4.02 sec. 
* 47: Cost = 7002306, Time = 4.09 sec. 
* 48: Cost = 7002225, Time = 4.17 sec. 
* 49: Cost = 7002026, Time = 4.26 sec. 
* 50: Cost = 7001421, Time = 4.35 sec. 
* 51: Cost = 7001193, Time = 4.43 sec. 
* 52: Cost = 7000969, Time = 4.50 sec. 
* 53: Cost = 7000711, Time = 4.58 sec. 
* 54: Cost = 7000526, Time = 4.66 sec. 
* 55: Cost = 7000015, Time = 4.75 sec. 
* 57: Cost = 6996112, Time = 4.92 sec. 
* 58: Cost = 6995481, Time = 5.01 sec. 
* 59: Cost = 6995273, Time = 5.10 sec. 
* 62: Cost = 6994916, Time = 5.34 sec. 
* 63: Cost = 6994888, Time = 5.44 sec. 
* 64: Cost = 6994373, Time = 5.53 sec. 
* 65: Cost = 6993816, Time = 5.62 sec. 
* 67: Cost = 6993148, Time = 5.77 sec. 
* 68: Cost = 6993069, Time = 5.87 sec. 
* 69: Cost = 6993021, Time = 5.96 sec. 
* 70: Cost = 6991453, Time = 6.05 sec. 
* 71: Cost = 6991418, Time = 6.14 sec. 
* 72: Cost = 6991117, Time = 6.23 sec. 
* 77: Cost = 6990974, Time = 6.65 sec. 
* 80: Cost = 6990934, Time = 6.90 sec. 
* 82: Cost = 6987442, Time = 7.08 sec. 
* 83: Cost = 6987291, Time = 7.16 sec. 
* 87: Cost = 6987277, Time = 7.48 sec. 
* 88: Cost = 6987210, Time = 7.56 sec. 
* 89: Cost = 6986936, Time = 7.65 sec. 
* 90: Cost = 6986097, Time = 7.74 sec. 
* 91: Cost = 6986086, Time = 7.81 sec. 
* 93: Cost = 6985786, Time = 7.99 sec. 
* 95: Cost = 6985668, Time = 8.18 sec. 
* 96: Cost = 6985114, Time = 8.27 sec. 
* 97: Cost = 6984688, Time = 8.37 sec. 
* 100: Cost = 6984566, Time = 8.62 sec. 
* 101: Cost = 6975062, Time = 8.71 sec. 
* 103: Cost = 6974399, Time = 8.88 sec. 
* 105: Cost = 6973354, Time = 9.05 sec. 
* 106: Cost = 6973033, Time = 9.14 sec. 
* 107: Cost = 6972993, Time = 9.24 sec. 
* 108: Cost = 6972954, Time = 9.35 sec. 
* 111: Cost = 6972592, Time = 9.61 sec. 
* 117: Cost = 6972540, Time = 10.09 sec. 
* 118: Cost = 6972500, Time = 10.19 sec. 
* 119: Cost = 6972296, Time = 10.28 sec. 
* 120: Cost = 6971720, Time = 10.38 sec. 
* 121: Cost = 6971450, Time = 10.46 sec. 
* 122: Cost = 6971427, Time = 10.57 sec. 
* 126: Cost = 6971371, Time = 10.91 sec. 
* 128: Cost = 6971353, Time = 11.07 sec. 
* 129: Cost = 6971251, Time = 11.15 sec. 
* 133: Cost = 6971013, Time = 11.51 sec. 
* 139: Cost = 6970916, Time = 12.00 sec. 
* 142: Cost = 6970760, Time = 12.26 sec. 
*** The extent of improvement(1740) is too small in 2.0s ***
Run 1: Cost = 6970760, Time = 12.26 sec. 

Successes/Runs = 0/1
Cost.min = 6970760, Cost.avg = 6970760.00, Cost.max = 6970760
Gap.min = 0.0000%, Gap.avg = 0.0000%, Gap.max = 0.0000%
Trials.min = 142, Trials.avg = 142.0, Trials.max = 142
Time.min = 12.26 sec., Time.avg = 12.26 sec., Time.max = 12.26 sec.
Time.total = 18.65 sec.

Key Metrics:
	ioCount:			 6000
	algorithmRunningDuration:	 18654.564 (ms)
	memoryUse:			 0 (KB)
	addressingDuration:		 6970760 (ms)
	readDuration:			 6327668 (ms)
	tapeBeltWear:			 13085985
	tapeMotorWear:			 246
	errorIOCount:			 0

指标写入文件 ./metrics.txt
