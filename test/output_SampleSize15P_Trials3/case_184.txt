

Welcome to HW project.

The file path is: /home/csg/Huawei-Storage-Competition/test/dataset/case_184.txt
head info : [213,377043,0]

io count = 2000


Reading TOUR...done
done
ASCENT_CANDIDATES = 25
BACKBONE_TRIALS = 0
BACKTRACKING = NO
# CANDIDATE_FILE =
CANDIDATE_SET_TYPE = POPMUSIC
# EDGE_FILE =
EXCESS = 0.00024975
EXTRA_CANDIDATES = 0 
EXTRA_CANDIDATE_SET_TYPE = QUADRANT
GAIN23 = YES
GAIN_CRITERION = YES
INITIAL_PERIOD = 2002
INITIAL_STEP_SIZE = 1
INITIAL_TOUR_ALGORITHM = WALK
# INITIAL_TOUR_FILE = 
INITIAL_TOUR_FRACTION = 1.000
# INPUT_TOUR_FILE = 
KICK_TYPE = 0
KICKS = 1
# MAX_BREADTH =
MAX_CANDIDATES = 5 
MAX_SWAPS = 4004
MAX_TRIALS = 4004
# MERGE_TOUR_FILE =
MOVE_TYPE = 3
# NONSEQUENTIAL_MOVE_TYPE = 3
# OPTIMUM =
# OUTPUT_TOUR_FILE = 
PATCHING_A = 1 
PATCHING_C = 0 
# PI_FILE = 
POPMUSIC_INITIAL_TOUR = YES
POPMUSIC_MAX_NEIGHBORS = 5
POPMUSIC_SAMPLE_SIZE = 15
POPMUSIC_SOLUTIONS = 15
POPMUSIC_TRIALS = 3
# POPULATION_SIZE = 0
PRECISION = 100
# PROBLEM_FILE = 
RECOMBINATION = IPT
RESTRICTED_SEARCH = YES
RUNS = 1
SEED = 1
STOP_AT_OPTIMUM = YES
SUBGRADIENT = NO
# SUBPROBLEM_SIZE =
# SUBPROBLEM_TOUR_FILE = 
SUBSEQUENT_MOVE_TYPE = 3
SUBSEQUENT_PATCHING = YES
# TIME_LIMIT =
TOTAL_TIME_LIMIT = 20.0
# TOUR_FILE = 
TRACE_LEVEL = 1

Lower bound = 1190656.0, Ascent time = 0.86 sec.
Cand.min = 2, Cand.avg = 5.8, Cand.max = 7
Edges.fixed = 2003 [Cost = 0]
Preprocessing time = 0.87 sec.
* 1: Cost = 3881571, Time = 0.04 sec. 
* 2: Cost = 3763143, Time = 0.07 sec. 
* 3: Cost = 3758322, Time = 0.09 sec. 
* 4: Cost = 3758248, Time = 0.11 sec. 
* 5: Cost = 3757995, Time = 0.13 sec. 
* 6: Cost = 3755611, Time = 0.14 sec. 
* 7: Cost = 3755541, Time = 0.16 sec. 
* 8: Cost = 3754351, Time = 0.18 sec. 
* 9: Cost = 3752957, Time = 0.20 sec. 
* 10: Cost = 3752110, Time = 0.21 sec. 
* 11: Cost = 3751896, Time = 0.23 sec. 
* 12: Cost = 3751729, Time = 0.25 sec. 
* 13: Cost = 3748639, Time = 0.26 sec. 
* 14: Cost = 3748564, Time = 0.29 sec. 
* 15: Cost = 3743620, Time = 0.31 sec. 
* 16: Cost = 3739861, Time = 0.33 sec. 
* 17: Cost = 3739578, Time = 0.35 sec. 
* 18: Cost = 3733560, Time = 0.36 sec. 
* 19: Cost = 3732335, Time = 0.38 sec. 
* 20: Cost = 3717937, Time = 0.40 sec. 
* 21: Cost = 3717576, Time = 0.42 sec. 
* 26: Cost = 3716838, Time = 0.51 sec. 
* 27: Cost = 3716260, Time = 0.52 sec. 
* 28: Cost = 3716180, Time = 0.54 sec. 
* 29: Cost = 3713567, Time = 0.56 sec. 
* 30: Cost = 3701710, Time = 0.58 sec. 
* 31: Cost = 3697028, Time = 0.60 sec. 
* 35: Cost = 3696559, Time = 0.68 sec. 
* 39: Cost = 3692513, Time = 0.75 sec. 
* 41: Cost = 3691300, Time = 0.79 sec. 
* 44: Cost = 3691213, Time = 0.84 sec. 
* 46: Cost = 3691012, Time = 0.87 sec. 
* 47: Cost = 3691007, Time = 0.90 sec. 
* 48: Cost = 3690834, Time = 0.91 sec. 
* 49: Cost = 3690342, Time = 0.93 sec. 
* 56: Cost = 3689847, Time = 1.05 sec. 
* 57: Cost = 3689800, Time = 1.07 sec. 
* 59: Cost = 3689797, Time = 1.11 sec. 
* 61: Cost = 3689769, Time = 1.14 sec. 
* 62: Cost = 3689750, Time = 1.16 sec. 
* 63: Cost = 3689743, Time = 1.17 sec. 
* 64: Cost = 3689705, Time = 1.19 sec. 
* 65: Cost = 3689620, Time = 1.21 sec. 
* 66: Cost = 3689590, Time = 1.22 sec. 
* 67: Cost = 3688997, Time = 1.24 sec. 
* 98: Cost = 3688956, Time = 1.80 sec. 
* 103: Cost = 3688882, Time = 1.89 sec. 
* 104: Cost = 3688788, Time = 1.91 sec. 
* 110: Cost = 3686364, Time = 2.02 sec. 
* 111: Cost = 3686318, Time = 2.03 sec. 
* 114: Cost = 3686277, Time = 2.08 sec. 
* 115: Cost = 3686110, Time = 2.10 sec. 
* 117: Cost = 3686046, Time = 2.14 sec. 
* 129: Cost = 3685964, Time = 2.38 sec. 
* 130: Cost = 3685881, Time = 2.39 sec. 
* 134: Cost = 3685469, Time = 2.47 sec. 
* 144: Cost = 3684987, Time = 2.65 sec. 
* 147: Cost = 3684398, Time = 2.71 sec. 
* 159: Cost = 3684313, Time = 2.91 sec. 
* 160: Cost = 3684142, Time = 2.93 sec. 
* 183: Cost = 3683273, Time = 3.33 sec. 
* 185: Cost = 3683201, Time = 3.36 sec. 
* 186: Cost = 3683180, Time = 3.38 sec. 
* 196: Cost = 3682659, Time = 3.56 sec. 
* 208: Cost = 3682626, Time = 3.78 sec. 
* 209: Cost = 3682395, Time = 3.80 sec. 
* 212: Cost = 3682366, Time = 3.85 sec. 
* 214: Cost = 3682237, Time = 3.88 sec. 
* 224: Cost = 3682236, Time = 4.07 sec. 
* 242: Cost = 3682229, Time = 4.39 sec. 
* 244: Cost = 3682173, Time = 4.43 sec. 
* 268: Cost = 3682158, Time = 4.88 sec. 
* 271: Cost = 3682152, Time = 4.94 sec. 
* 274: Cost = 3682127, Time = 4.98 sec. 
* 292: Cost = 3681950, Time = 5.30 sec. 
* 309: Cost = 3681577, Time = 5.62 sec. 
* 314: Cost = 3681490, Time = 5.72 sec. 
* 323: Cost = 3681316, Time = 5.89 sec. 
* 328: Cost = 3681253, Time = 5.99 sec. 
*** The extent of improvement(984) is too small in 2.0s ***
Run 1: Cost = 3681253, Time = 6.03 sec. 

Successes/Runs = 0/1
Cost.min = 3681253, Cost.avg = 3681253.00, Cost.max = 3681253
Gap.min = 0.0000%, Gap.avg = 0.0000%, Gap.max = 0.0000%
Trials.min = 330, Trials.avg = 330.0, Trials.max = 330
Time.min = 6.03 sec., Time.avg = 6.03 sec., Time.max = 6.03 sec.
Time.total = 7.03 sec.

Key Metrics:
	ioCount:			 2000
	algorithmRunningDuration:	 7029.841 (ms)
	memoryUse:			 0 (KB)
	addressingDuration:		 3681253 (ms)
	readDuration:			 2182644 (ms)
	tapeBeltWear:			 6039648
	tapeMotorWear:			 145
	errorIOCount:			 0

指标写入文件 ./metrics.txt
