

Welcome to HW project.

The file path is: /home/csg/Huawei-Storage-Competition/test/dataset/case_486.txt
head info : [28,706685,1]

io count = 6000


Reading TOUR...done
done
ASCENT_CANDIDATES = 25
BACKBONE_TRIALS = 0
BACKTRACKING = NO
# CANDIDATE_FILE =
CANDIDATE_SET_TYPE = POPMUSIC
# EDGE_FILE =
EXCESS = 8.33056e-05
EXTRA_CANDIDATES = 0 
EXTRA_CANDIDATE_SET_TYPE = QUADRANT
GAIN23 = YES
GAIN_CRITERION = YES
INITIAL_PERIOD = 6002
INITIAL_STEP_SIZE = 1
INITIAL_TOUR_ALGORITHM = WALK
# INITIAL_TOUR_FILE = 
INITIAL_TOUR_FRACTION = 1.000
# INPUT_TOUR_FILE = 
KICK_TYPE = 0
KICKS = 1
# MAX_BREADTH =
MAX_CANDIDATES = 5 
MAX_SWAPS = 12004
MAX_TRIALS = 12004
# MERGE_TOUR_FILE =
MOVE_TYPE = 3
# NONSEQUENTIAL_MOVE_TYPE = 3
# OPTIMUM =
# OUTPUT_TOUR_FILE = 
PATCHING_A = 1 
PATCHING_C = 0 
# PI_FILE = 
POPMUSIC_INITIAL_TOUR = YES
POPMUSIC_MAX_NEIGHBORS = 5
POPMUSIC_SAMPLE_SIZE = 15
POPMUSIC_SOLUTIONS = 15
POPMUSIC_TRIALS = 3
# POPULATION_SIZE = 0
PRECISION = 100
# PROBLEM_FILE = 
RECOMBINATION = IPT
RESTRICTED_SEARCH = YES
RUNS = 1
SEED = 1
STOP_AT_OPTIMUM = YES
SUBGRADIENT = NO
# SUBPROBLEM_SIZE =
# SUBPROBLEM_TOUR_FILE = 
SUBSEQUENT_MOVE_TYPE = 3
SUBSEQUENT_PATCHING = YES
# TIME_LIMIT =
TOTAL_TIME_LIMIT = 20.0
# TOUR_FILE = 
TRACE_LEVEL = 1

Lower bound = 1677940.0, Ascent time = 5.20 sec.
Cand.min = 2, Cand.avg = 5.8, Cand.max = 7
Edges.fixed = 6003 [Cost = 0]
Preprocessing time = 5.22 sec.
* 1: Cost = 7112787, Time = 0.22 sec. 
* 2: Cost = 7095550, Time = 0.35 sec. 
* 3: Cost = 7013619, Time = 0.44 sec. 
* 5: Cost = 7008338, Time = 0.63 sec. 
* 6: Cost = 7007931, Time = 0.71 sec. 
* 7: Cost = 6965815, Time = 0.79 sec. 
* 8: Cost = 6950752, Time = 0.88 sec. 
* 9: Cost = 6947562, Time = 0.95 sec. 
* 11: Cost = 6947046, Time = 1.13 sec. 
* 12: Cost = 6946684, Time = 1.21 sec. 
* 13: Cost = 6930079, Time = 1.29 sec. 
* 14: Cost = 6928507, Time = 1.37 sec. 
* 15: Cost = 6928069, Time = 1.45 sec. 
* 16: Cost = 6928051, Time = 1.54 sec. 
* 17: Cost = 6927281, Time = 1.62 sec. 
* 18: Cost = 6927224, Time = 1.70 sec. 
* 19: Cost = 6926572, Time = 1.78 sec. 
* 20: Cost = 6926129, Time = 1.86 sec. 
* 21: Cost = 6924632, Time = 1.95 sec. 
* 22: Cost = 6924597, Time = 2.03 sec. 
* 23: Cost = 6924224, Time = 2.10 sec. 
* 24: Cost = 6924189, Time = 2.17 sec. 
* 25: Cost = 6924044, Time = 2.25 sec. 
* 26: Cost = 6921919, Time = 2.32 sec. 
* 28: Cost = 6921813, Time = 2.49 sec. 
* 29: Cost = 6921419, Time = 2.59 sec. 
* 30: Cost = 6916453, Time = 2.67 sec. 
* 31: Cost = 6916441, Time = 2.75 sec. 
* 32: Cost = 6916213, Time = 2.83 sec. 
* 33: Cost = 6915748, Time = 2.91 sec. 
* 34: Cost = 6915436, Time = 2.98 sec. 
* 36: Cost = 6914741, Time = 3.15 sec. 
* 37: Cost = 6912829, Time = 3.25 sec. 
* 38: Cost = 6912329, Time = 3.34 sec. 
* 39: Cost = 6910446, Time = 3.43 sec. 
* 40: Cost = 6910358, Time = 3.51 sec. 
* 41: Cost = 6909935, Time = 3.59 sec. 
* 43: Cost = 6909654, Time = 3.75 sec. 
* 44: Cost = 6909591, Time = 3.83 sec. 
* 45: Cost = 6909525, Time = 3.91 sec. 
* 47: Cost = 6909369, Time = 4.05 sec. 
* 50: Cost = 6909045, Time = 4.29 sec. 
* 51: Cost = 6908859, Time = 4.37 sec. 
* 52: Cost = 6908673, Time = 4.46 sec. 
* 53: Cost = 6908535, Time = 4.54 sec. 
* 54: Cost = 6908424, Time = 4.62 sec. 
* 55: Cost = 6900519, Time = 4.71 sec. 
* 58: Cost = 6900458, Time = 4.94 sec. 
* 59: Cost = 6900405, Time = 5.02 sec. 
* 60: Cost = 6899838, Time = 5.10 sec. 
* 63: Cost = 6899379, Time = 5.34 sec. 
* 64: Cost = 6899036, Time = 5.43 sec. 
* 66: Cost = 6899004, Time = 5.60 sec. 
* 68: Cost = 6898912, Time = 5.74 sec. 
* 71: Cost = 6895255, Time = 5.97 sec. 
* 73: Cost = 6895251, Time = 6.13 sec. 
* 75: Cost = 6895208, Time = 6.29 sec. 
* 76: Cost = 6895182, Time = 6.37 sec. 
* 77: Cost = 6895136, Time = 6.45 sec. 
* 78: Cost = 6895037, Time = 6.54 sec. 
* 82: Cost = 6894967, Time = 6.86 sec. 
* 83: Cost = 6894746, Time = 6.94 sec. 
* 84: Cost = 6894598, Time = 7.06 sec. 
* 85: Cost = 6894509, Time = 7.14 sec. 
* 86: Cost = 6893804, Time = 7.23 sec. 
* 88: Cost = 6893766, Time = 7.39 sec. 
* 90: Cost = 6893697, Time = 7.54 sec. 
* 91: Cost = 6893492, Time = 7.62 sec. 
* 96: Cost = 6893190, Time = 8.03 sec. 
* 98: Cost = 6893143, Time = 8.19 sec. 
* 99: Cost = 6893101, Time = 8.27 sec. 
* 100: Cost = 6892661, Time = 8.36 sec. 
* 101: Cost = 6892567, Time = 8.44 sec. 
* 103: Cost = 6892524, Time = 8.60 sec. 
* 105: Cost = 6892098, Time = 8.77 sec. 
* 107: Cost = 6891934, Time = 8.93 sec. 
* 108: Cost = 6891847, Time = 9.02 sec. 
* 111: Cost = 6891255, Time = 9.25 sec. 
* 112: Cost = 6891233, Time = 9.34 sec. 
* 114: Cost = 6891212, Time = 9.48 sec. 
* 115: Cost = 6890996, Time = 9.56 sec. 
* 116: Cost = 6890535, Time = 9.64 sec. 
* 118: Cost = 6890462, Time = 9.80 sec. 
* 122: Cost = 6890296, Time = 10.13 sec. 
* 123: Cost = 6890187, Time = 10.21 sec. 
* 124: Cost = 6890168, Time = 10.30 sec. 
* 126: Cost = 6890167, Time = 10.47 sec. 
* 127: Cost = 6890145, Time = 10.55 sec. 
* 131: Cost = 6890125, Time = 10.84 sec. 
* 132: Cost = 6890056, Time = 10.93 sec. 
* 133: Cost = 6890055, Time = 11.01 sec. 
* 134: Cost = 6890027, Time = 11.09 sec. 
* 135: Cost = 6889869, Time = 11.16 sec. 
* 143: Cost = 6889864, Time = 11.78 sec. 
*** The extent of improvement(323) is too small in 2.0s ***
Run 1: Cost = 6889864, Time = 12.25 sec. 

Successes/Runs = 0/1
Cost.min = 6889864, Cost.avg = 6889864.00, Cost.max = 6889864
Gap.min = 0.0000%, Gap.avg = 0.0000%, Gap.max = 0.0000%
Trials.min = 149, Trials.avg = 149.0, Trials.max = 149
Time.min = 12.25 sec., Time.avg = 12.25 sec., Time.max = 12.25 sec.
Time.total = 18.58 sec.

Key Metrics:
	ioCount:			 6000
	algorithmRunningDuration:	 18578.675 (ms)
	memoryUse:			 0 (KB)
	addressingDuration:		 6889864 (ms)
	readDuration:			 6147929 (ms)
	tapeBeltWear:			 12853199
	tapeMotorWear:			 246
	errorIOCount:			 0

指标写入文件 ./metrics.txt
