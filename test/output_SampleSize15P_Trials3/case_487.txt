

Welcome to HW project.

The file path is: /home/csg/Huawei-Storage-Competition/test/dataset/case_487.txt
head info : [37,456686,0]

io count = 6000


Reading TOUR...done
done
ASCENT_CANDIDATES = 25
BACKBONE_TRIALS = 0
BACKTRACKING = NO
# CANDIDATE_FILE =
CANDIDATE_SET_TYPE = POPMUSIC
# EDGE_FILE =
EXCESS = 8.33056e-05
EXTRA_CANDIDATES = 0 
EXTRA_CANDIDATE_SET_TYPE = QUADRANT
GAIN23 = YES
GAIN_CRITERION = YES
INITIAL_PERIOD = 6002
INITIAL_STEP_SIZE = 1
INITIAL_TOUR_ALGORITHM = WALK
# INITIAL_TOUR_FILE = 
INITIAL_TOUR_FRACTION = 1.000
# INPUT_TOUR_FILE = 
KICK_TYPE = 0
KICKS = 1
# MAX_BREADTH =
MAX_CANDIDATES = 5 
MAX_SWAPS = 12004
MAX_TRIALS = 12004
# MERGE_TOUR_FILE =
MOVE_TYPE = 3
# NONSEQUENTIAL_MOVE_TYPE = 3
# OPTIMUM =
# OUTPUT_TOUR_FILE = 
PATCHING_A = 1 
PATCHING_C = 0 
# PI_FILE = 
POPMUSIC_INITIAL_TOUR = YES
POPMUSIC_MAX_NEIGHBORS = 5
POPMUSIC_SAMPLE_SIZE = 15
POPMUSIC_SOLUTIONS = 15
POPMUSIC_TRIALS = 3
# POPULATION_SIZE = 0
PRECISION = 100
# PROBLEM_FILE = 
RECOMBINATION = IPT
RESTRICTED_SEARCH = YES
RUNS = 1
SEED = 1
STOP_AT_OPTIMUM = YES
SUBGRADIENT = NO
# SUBPROBLEM_SIZE =
# SUBPROBLEM_TOUR_FILE = 
SUBSEQUENT_MOVE_TYPE = 3
SUBSEQUENT_PATCHING = YES
# TIME_LIMIT =
TOTAL_TIME_LIMIT = 20.0
# TOUR_FILE = 
TRACE_LEVEL = 1

Lower bound = 1743292.0, Ascent time = 5.25 sec.
Cand.min = 2, Cand.avg = 5.8, Cand.max = 7
Edges.fixed = 6003 [Cost = 0]
Preprocessing time = 5.28 sec.
* 1: Cost = 7312568, Time = 0.24 sec. 
* 2: Cost = 7203939, Time = 0.36 sec. 
* 4: Cost = 7166781, Time = 0.53 sec. 
* 5: Cost = 7068119, Time = 0.62 sec. 
* 6: Cost = 7054770, Time = 0.71 sec. 
* 7: Cost = 7051409, Time = 0.81 sec. 
* 9: Cost = 7042722, Time = 0.99 sec. 
* 10: Cost = 7016881, Time = 1.09 sec. 
* 11: Cost = 7014841, Time = 1.17 sec. 
* 12: Cost = 7006213, Time = 1.26 sec. 
* 14: Cost = 7005475, Time = 1.44 sec. 
* 15: Cost = 7005241, Time = 1.52 sec. 
* 16: Cost = 6996608, Time = 1.60 sec. 
* 17: Cost = 6996411, Time = 1.70 sec. 
* 18: Cost = 6993574, Time = 1.77 sec. 
* 20: Cost = 6992917, Time = 1.95 sec. 
* 21: Cost = 6991472, Time = 2.04 sec. 
* 22: Cost = 6988627, Time = 2.14 sec. 
* 24: Cost = 6988264, Time = 2.30 sec. 
* 25: Cost = 6987612, Time = 2.37 sec. 
* 27: Cost = 6968263, Time = 2.53 sec. 
* 31: Cost = 6968005, Time = 2.85 sec. 
* 34: Cost = 6967843, Time = 3.10 sec. 
* 35: Cost = 6967773, Time = 3.18 sec. 
* 36: Cost = 6967580, Time = 3.25 sec. 
* 37: Cost = 6967491, Time = 3.33 sec. 
* 38: Cost = 6965918, Time = 3.41 sec. 
* 39: Cost = 6965798, Time = 3.52 sec. 
* 40: Cost = 6965448, Time = 3.61 sec. 
* 41: Cost = 6965213, Time = 3.68 sec. 
* 42: Cost = 6964273, Time = 3.79 sec. 
* 43: Cost = 6964090, Time = 3.87 sec. 
* 44: Cost = 6963014, Time = 3.95 sec. 
* 45: Cost = 6962904, Time = 4.04 sec. 
* 47: Cost = 6962767, Time = 4.21 sec. 
* 49: Cost = 6962429, Time = 4.36 sec. 
* 50: Cost = 6961931, Time = 4.46 sec. 
* 51: Cost = 6961643, Time = 4.54 sec. 
* 53: Cost = 6950837, Time = 4.68 sec. 
* 54: Cost = 6950792, Time = 4.75 sec. 
* 55: Cost = 6950759, Time = 4.83 sec. 
* 56: Cost = 6950021, Time = 4.91 sec. 
* 57: Cost = 6949884, Time = 5.00 sec. 
* 58: Cost = 6947805, Time = 5.08 sec. 
* 59: Cost = 6945525, Time = 5.16 sec. 
* 60: Cost = 6945351, Time = 5.24 sec. 
* 62: Cost = 6944741, Time = 5.40 sec. 
* 63: Cost = 6944702, Time = 5.49 sec. 
* 64: Cost = 6944535, Time = 5.57 sec. 
* 65: Cost = 6944441, Time = 5.66 sec. 
* 66: Cost = 6942141, Time = 5.73 sec. 
* 67: Cost = 6942117, Time = 5.82 sec. 
* 68: Cost = 6941455, Time = 5.90 sec. 
* 69: Cost = 6941411, Time = 5.98 sec. 
* 70: Cost = 6941337, Time = 6.07 sec. 
* 73: Cost = 6940217, Time = 6.32 sec. 
* 75: Cost = 6940165, Time = 6.48 sec. 
* 76: Cost = 6940042, Time = 6.56 sec. 
* 78: Cost = 6938660, Time = 6.73 sec. 
* 79: Cost = 6938570, Time = 6.81 sec. 
* 80: Cost = 6932091, Time = 6.89 sec. 
* 81: Cost = 6927914, Time = 6.99 sec. 
* 85: Cost = 6921472, Time = 7.34 sec. 
* 88: Cost = 6921351, Time = 7.59 sec. 
* 90: Cost = 6920364, Time = 7.75 sec. 
* 93: Cost = 6920316, Time = 7.99 sec. 
* 94: Cost = 6917456, Time = 8.07 sec. 
* 97: Cost = 6917412, Time = 8.32 sec. 
* 98: Cost = 6917402, Time = 8.42 sec. 
* 104: Cost = 6917373, Time = 8.92 sec. 
* 106: Cost = 6917345, Time = 9.08 sec. 
* 108: Cost = 6917269, Time = 9.23 sec. 
* 109: Cost = 6914811, Time = 9.32 sec. 
* 110: Cost = 6914777, Time = 9.39 sec. 
* 115: Cost = 6914757, Time = 9.80 sec. 
* 116: Cost = 6913951, Time = 9.90 sec. 
* 119: Cost = 6913795, Time = 10.16 sec. 
* 125: Cost = 6913751, Time = 10.66 sec. 
* 126: Cost = 6913575, Time = 10.74 sec. 
* 127: Cost = 6913292, Time = 10.83 sec. 
* 130: Cost = 6913217, Time = 11.10 sec. 
* 133: Cost = 6913045, Time = 11.34 sec. 
* 136: Cost = 6912964, Time = 11.60 sec. 
* 138: Cost = 6912937, Time = 11.77 sec. 
* 139: Cost = 6912768, Time = 11.87 sec. 
* 140: Cost = 6912667, Time = 11.96 sec. 
*** The extent of improvement(1128) is too small in 2.0s ***
Run 1: Cost = 6912667, Time = 12.21 sec. 

Successes/Runs = 0/1
Cost.min = 6912667, Cost.avg = 6912667.00, Cost.max = 6912667
Gap.min = 0.0000%, Gap.avg = 0.0000%, Gap.max = 0.0000%
Trials.min = 143, Trials.avg = 143.0, Trials.max = 143
Time.min = 12.21 sec., Time.avg = 12.21 sec., Time.max = 12.21 sec.
Time.total = 18.59 sec.

Key Metrics:
	ioCount:			 6000
	algorithmRunningDuration:	 18592.126 (ms)
	memoryUse:			 0 (KB)
	addressingDuration:		 6912667 (ms)
	readDuration:			 6293292 (ms)
	tapeBeltWear:			 12960421
	tapeMotorWear:			 269
	errorIOCount:			 0

指标写入文件 ./metrics.txt
