

Welcome to HW project.

The file path is: /home/csg/Huawei-Storage-Competition/test/dataset/case_152.txt
head info : [31,655893,0]

io count = 1000


Reading TOUR...done
done
ASCENT_CANDIDATES = 25
BACKBONE_TRIALS = 0
BACKTRACKING = NO
# CANDIDATE_FILE =
CANDIDATE_SET_TYPE = ALPHA
# EDGE_FILE =
EXCESS = 0.000499002
EXTRA_CANDIDATES = 0 
EXTRA_CANDIDATE_SET_TYPE = QUADRANT
GAIN23 = YES
GAIN_CRITERION = YES
INITIAL_PERIOD = 1002
INITIAL_STEP_SIZE = 1
INITIAL_TOUR_ALGORITHM = WALK
# INITIAL_TOUR_FILE = 
INITIAL_TOUR_FRACTION = 1.000
# INPUT_TOUR_FILE = 
KICK_TYPE = 0
KICKS = 1
# MAX_BREADTH =
MAX_CANDIDATES = 5 
MAX_SWAPS = 2004
MAX_TRIALS = 2004
# MERGE_TOUR_FILE =
MOVE_TYPE = 3
# NONSEQUENTIAL_MOVE_TYPE = 3
# OPTIMUM =
# OUTPUT_TOUR_FILE = 
PATCHING_A = 1 
PATCHING_C = 0 
# PI_FILE = 
POPMUSIC_INITIAL_TOUR = NO
POPMUSIC_MAX_NEIGHBORS = 5
POPMUSIC_SAMPLE_SIZE = 15
POPMUSIC_SOLUTIONS = 15
POPMUSIC_TRIALS = 3
# POPULATION_SIZE = 0
PRECISION = 100
# PROBLEM_FILE = 
RECOMBINATION = IPT
RESTRICTED_SEARCH = YES
RUNS = 1
SEED = 1
STOP_AT_OPTIMUM = YES
SUBGRADIENT = YES
# SUBPROBLEM_SIZE =
# SUBPROBLEM_TOUR_FILE = 
SUBSEQUENT_MOVE_TYPE = 3
SUBSEQUENT_PATCHING = YES
# TIME_LIMIT =
TOTAL_TIME_LIMIT = 20.0
# TOUR_FILE = 
TRACE_LEVEL = 1

Lower bound = 1425835.5, Ascent time = 2.08 sec.
Cand.min = 2, Cand.avg = 4.5, Cand.max = 6
Edges.fixed = 1003 [Cost = 0]
Preprocessing time = 2.14 sec.
* 1: Cost = 2861128, Time = 0.01 sec. 
* 2: Cost = 2839067, Time = 0.01 sec. 
* 3: Cost = 2838805, Time = 0.01 sec. 
* 4: Cost = 2838276, Time = 0.02 sec. 
* 5: Cost = 2838264, Time = 0.02 sec. 
* 6: Cost = 2838256, Time = 0.02 sec. 
* 7: Cost = 2838216, Time = 0.03 sec. 
* 8: Cost = 2837677, Time = 0.03 sec. 
* 9: Cost = 2818096, Time = 0.03 sec. 
* 10: Cost = 2814362, Time = 0.04 sec. 
* 12: Cost = 2813439, Time = 0.04 sec. 
* 13: Cost = 2790507, Time = 0.05 sec. 
* 14: Cost = 2790502, Time = 0.05 sec. 
* 15: Cost = 2784780, Time = 0.05 sec. 
* 17: Cost = 2784713, Time = 0.06 sec. 
* 19: Cost = 2784085, Time = 0.07 sec. 
* 20: Cost = 2784061, Time = 0.07 sec. 
* 21: Cost = 2783990, Time = 0.08 sec. 
* 23: Cost = 2783973, Time = 0.08 sec. 
* 24: Cost = 2783966, Time = 0.09 sec. 
* 38: Cost = 2782910, Time = 0.13 sec. 
* 58: Cost = 2782823, Time = 0.20 sec. 
* 59: Cost = 2782796, Time = 0.20 sec. 
* 62: Cost = 2782793, Time = 0.21 sec. 
* 66: Cost = 2782518, Time = 0.23 sec. 
* 67: Cost = 2782490, Time = 0.23 sec. 
* 69: Cost = 2765317, Time = 0.24 sec. 
* 76: Cost = 2764906, Time = 0.26 sec. 
* 88: Cost = 2763474, Time = 0.30 sec. 
* 89: Cost = 2763161, Time = 0.30 sec. 
* 124: Cost = 2762666, Time = 0.43 sec. 
* 125: Cost = 2762567, Time = 0.43 sec. 
* 126: Cost = 2760329, Time = 0.43 sec. 
* 128: Cost = 2760323, Time = 0.44 sec. 
* 133: Cost = 2760308, Time = 0.46 sec. 
* 137: Cost = 2760301, Time = 0.47 sec. 
* 141: Cost = 2760243, Time = 0.49 sec. 
* 152: Cost = 2760029, Time = 0.53 sec. 
* 166: Cost = 2760027, Time = 0.59 sec. 
* 189: Cost = 2759987, Time = 0.67 sec. 
* 190: Cost = 2759982, Time = 0.67 sec. 
* 193: Cost = 2759951, Time = 0.68 sec. 
* 203: Cost = 2759949, Time = 0.71 sec. 
* 223: Cost = 2742235, Time = 0.79 sec. 
* 226: Cost = 2742233, Time = 0.80 sec. 
* 227: Cost = 2742228, Time = 0.81 sec. 
* 229: Cost = 2742093, Time = 0.82 sec. 
* 230: Cost = 2742023, Time = 0.82 sec. 
* 232: Cost = 2742022, Time = 0.83 sec. 
* 233: Cost = 2742017, Time = 0.83 sec. 
* 246: Cost = 2742015, Time = 0.88 sec. 
* 253: Cost = 2741681, Time = 0.91 sec. 
* 254: Cost = 2741633, Time = 0.91 sec. 
* 256: Cost = 2741626, Time = 0.92 sec. 
* 257: Cost = 2741547, Time = 0.92 sec. 
* 269: Cost = 2741545, Time = 0.97 sec. 
* 305: Cost = 2741498, Time = 1.10 sec. 
* 306: Cost = 2741383, Time = 1.10 sec. 
* 307: Cost = 2741355, Time = 1.11 sec. 
* 329: Cost = 2740934, Time = 1.18 sec. 
* 331: Cost = 2740929, Time = 1.19 sec. 
* 340: Cost = 2740926, Time = 1.22 sec. 
* 343: Cost = 2740921, Time = 1.23 sec. 
* 426: Cost = 2740463, Time = 1.53 sec. 
* 432: Cost = 2739889, Time = 1.55 sec. 
* 435: Cost = 2739876, Time = 1.56 sec. 
* 439: Cost = 2739448, Time = 1.58 sec. 
* 443: Cost = 2739012, Time = 1.60 sec. 
* 444: Cost = 2738881, Time = 1.60 sec. 
* 482: Cost = 2738478, Time = 1.75 sec. 
* 483: Cost = 2737796, Time = 1.76 sec. 
* 535: Cost = 2737794, Time = 1.94 sec. 
* 588: Cost = 2737743, Time = 2.14 sec. 
* 589: Cost = 2737736, Time = 2.14 sec. 
* 590: Cost = 2737724, Time = 2.15 sec. 
* 611: Cost = 2737722, Time = 2.22 sec. 
* 728: Cost = 2737513, Time = 2.67 sec. 
* 729: Cost = 2737437, Time = 2.68 sec. 
* 735: Cost = 2737229, Time = 2.70 sec. 
* 741: Cost = 2737227, Time = 2.72 sec. 
* 1034: Cost = 2737153, Time = 3.80 sec. 
* 1035: Cost = 2737150, Time = 3.80 sec. 
* 1036: Cost = 2737144, Time = 3.81 sec. 
* 1041: Cost = 2737142, Time = 3.83 sec. 
*** The extent of improvement(652) is too small in 2.0s ***
Run 1: Cost = 2737142, Time = 4.00 sec. 

Successes/Runs = 0/1
Cost.min = 2737142, Cost.avg = 2737142.00, Cost.max = 2737142
Gap.min = 0.0000%, Gap.avg = 0.0000%, Gap.max = 0.0000%
Trials.min = 1090, Trials.avg = 1090.0, Trials.max = 1090
Time.min = 4.00 sec., Time.avg = 4.00 sec., Time.max = 4.00 sec.
Time.total = 6.17 sec.

Key Metrics:
	ioCount:			 1000
	algorithmRunningDuration:	 6174.705 (ms)
	memoryUse:			 0 (KB)
	addressingDuration:		 2737142 (ms)
	readDuration:			 1095147 (ms)
	tapeBeltWear:			 4045330
	tapeMotorWear:			 131
	errorIOCount:			 0

指标写入文件 ./metrics.txt
