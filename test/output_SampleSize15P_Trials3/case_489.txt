

Welcome to HW project.

The file path is: /home/csg/Huawei-Storage-Competition/test/dataset/case_489.txt
head info : [181,682946,0]

io count = 6000


Reading TOUR...done
done
ASCENT_CANDIDATES = 25
BACKBONE_TRIALS = 0
BACKTRACKING = NO
# CANDIDATE_FILE =
CANDIDATE_SET_TYPE = POPMUSIC
# EDGE_FILE =
EXCESS = 8.33056e-05
EXTRA_CANDIDATES = 0 
EXTRA_CANDIDATE_SET_TYPE = QUADRANT
GAIN23 = YES
GAIN_CRITERION = YES
INITIAL_PERIOD = 6002
INITIAL_STEP_SIZE = 1
INITIAL_TOUR_ALGORITHM = WALK
# INITIAL_TOUR_FILE = 
INITIAL_TOUR_FRACTION = 1.000
# INPUT_TOUR_FILE = 
KICK_TYPE = 0
KICKS = 1
# MAX_BREADTH =
MAX_CANDIDATES = 5 
MAX_SWAPS = 12004
MAX_TRIALS = 12004
# MERGE_TOUR_FILE =
MOVE_TYPE = 3
# NONSEQUENTIAL_MOVE_TYPE = 3
# OPTIMUM =
# OUTPUT_TOUR_FILE = 
PATCHING_A = 1 
PATCHING_C = 0 
# PI_FILE = 
POPMUSIC_INITIAL_TOUR = YES
POPMUSIC_MAX_NEIGHBORS = 5
POPMUSIC_SAMPLE_SIZE = 15
POPMUSIC_SOLUTIONS = 15
POPMUSIC_TRIALS = 3
# POPULATION_SIZE = 0
PRECISION = 100
# PROBLEM_FILE = 
RECOMBINATION = IPT
RESTRICTED_SEARCH = YES
RUNS = 1
SEED = 1
STOP_AT_OPTIMUM = YES
SUBGRADIENT = NO
# SUBPROBLEM_SIZE =
# SUBPROBLEM_TOUR_FILE = 
SUBSEQUENT_MOVE_TYPE = 3
SUBSEQUENT_PATCHING = YES
# TIME_LIMIT =
TOTAL_TIME_LIMIT = 20.0
# TOUR_FILE = 
TRACE_LEVEL = 1

Lower bound = 1758401.0, Ascent time = 5.27 sec.
Cand.min = 2, Cand.avg = 5.8, Cand.max = 7
Edges.fixed = 6003 [Cost = 0]
Preprocessing time = 5.29 sec.
* 1: Cost = 7347274, Time = 0.21 sec. 
* 2: Cost = 7283237, Time = 0.32 sec. 
* 3: Cost = 7142396, Time = 0.42 sec. 
* 4: Cost = 7120113, Time = 0.51 sec. 
* 5: Cost = 7108740, Time = 0.58 sec. 
* 6: Cost = 7098187, Time = 0.68 sec. 
* 7: Cost = 7077991, Time = 0.77 sec. 
* 8: Cost = 7074547, Time = 0.87 sec. 
* 9: Cost = 7073077, Time = 0.95 sec. 
* 10: Cost = 7071170, Time = 1.02 sec. 
* 11: Cost = 7067486, Time = 1.11 sec. 
* 12: Cost = 7066599, Time = 1.19 sec. 
* 13: Cost = 7064941, Time = 1.28 sec. 
* 14: Cost = 7064224, Time = 1.36 sec. 
* 16: Cost = 7063668, Time = 1.52 sec. 
* 17: Cost = 7063476, Time = 1.59 sec. 
* 19: Cost = 7056222, Time = 1.75 sec. 
* 20: Cost = 7054818, Time = 1.84 sec. 
* 21: Cost = 7052481, Time = 1.91 sec. 
* 22: Cost = 7051161, Time = 1.99 sec. 
* 23: Cost = 7050952, Time = 2.07 sec. 
* 24: Cost = 7049945, Time = 2.15 sec. 
* 27: Cost = 7047755, Time = 2.40 sec. 
* 28: Cost = 7047666, Time = 2.47 sec. 
* 30: Cost = 7041899, Time = 2.64 sec. 
* 31: Cost = 7041655, Time = 2.72 sec. 
* 33: Cost = 7040900, Time = 2.86 sec. 
* 34: Cost = 7038364, Time = 2.95 sec. 
* 35: Cost = 7036740, Time = 3.04 sec. 
* 38: Cost = 7030147, Time = 3.27 sec. 
* 39: Cost = 7030021, Time = 3.36 sec. 
* 41: Cost = 7029990, Time = 3.52 sec. 
* 43: Cost = 7029651, Time = 3.68 sec. 
* 44: Cost = 7026954, Time = 3.78 sec. 
* 45: Cost = 7026859, Time = 3.87 sec. 
* 46: Cost = 7026696, Time = 3.96 sec. 
* 47: Cost = 7026406, Time = 4.03 sec. 
* 51: Cost = 7026271, Time = 4.34 sec. 
* 52: Cost = 7026178, Time = 4.42 sec. 
* 53: Cost = 7025945, Time = 4.49 sec. 
* 54: Cost = 7025850, Time = 4.57 sec. 
* 55: Cost = 7025316, Time = 4.65 sec. 
* 56: Cost = 7024975, Time = 4.73 sec. 
* 57: Cost = 7024768, Time = 4.80 sec. 
* 60: Cost = 7022188, Time = 5.05 sec. 
* 61: Cost = 7021694, Time = 5.15 sec. 
* 63: Cost = 7018995, Time = 5.31 sec. 
* 67: Cost = 7017201, Time = 5.65 sec. 
* 68: Cost = 7017189, Time = 5.73 sec. 
* 70: Cost = 7016737, Time = 5.89 sec. 
* 71: Cost = 7015705, Time = 5.96 sec. 
* 72: Cost = 7014099, Time = 6.05 sec. 
* 73: Cost = 7013996, Time = 6.13 sec. 
* 75: Cost = 7013951, Time = 6.29 sec. 
* 76: Cost = 7013946, Time = 6.38 sec. 
* 77: Cost = 7013697, Time = 6.46 sec. 
* 79: Cost = 7013430, Time = 6.64 sec. 
* 80: Cost = 7013177, Time = 6.73 sec. 
* 83: Cost = 7009382, Time = 6.97 sec. 
* 84: Cost = 7009289, Time = 7.06 sec. 
* 86: Cost = 7009075, Time = 7.23 sec. 
* 87: Cost = 7007885, Time = 7.31 sec. 
* 89: Cost = 7007789, Time = 7.46 sec. 
* 91: Cost = 7007591, Time = 7.64 sec. 
* 92: Cost = 7007385, Time = 7.73 sec. 
* 93: Cost = 7004052, Time = 7.82 sec. 
* 94: Cost = 7003735, Time = 7.91 sec. 
* 96: Cost = 7003715, Time = 8.08 sec. 
* 98: Cost = 7003613, Time = 8.26 sec. 
* 99: Cost = 7003191, Time = 8.37 sec. 
* 100: Cost = 7002984, Time = 8.46 sec. 
* 101: Cost = 7002352, Time = 8.56 sec. 
* 102: Cost = 7002175, Time = 8.64 sec. 
* 105: Cost = 7002042, Time = 8.90 sec. 
* 108: Cost = 7001746, Time = 9.16 sec. 
* 110: Cost = 7001498, Time = 9.35 sec. 
* 111: Cost = 7001386, Time = 9.43 sec. 
* 114: Cost = 7001177, Time = 9.70 sec. 
* 115: Cost = 7000684, Time = 9.78 sec. 
* 117: Cost = 7000664, Time = 9.95 sec. 
* 131: Cost = 7000644, Time = 11.07 sec. 
* 136: Cost = 7000552, Time = 11.49 sec. 
* 137: Cost = 7000527, Time = 11.57 sec. 
* 139: Cost = 7000515, Time = 11.74 sec. 
* 140: Cost = 6999839, Time = 11.83 sec. 
* 143: Cost = 6999741, Time = 12.11 sec. 
*** The extent of improvement(923) is too small in 2.0s ***
Run 1: Cost = 6999741, Time = 12.21 sec. 

Successes/Runs = 0/1
Cost.min = 6999741, Cost.avg = 6999741.00, Cost.max = 6999741
Gap.min = 0.0000%, Gap.avg = 0.0000%, Gap.max = 0.0000%
Trials.min = 144, Trials.avg = 144.0, Trials.max = 144
Time.min = 12.21 sec., Time.avg = 12.21 sec., Time.max = 12.21 sec.
Time.total = 18.60 sec.

Key Metrics:
	ioCount:			 6000
	algorithmRunningDuration:	 18605.095 (ms)
	memoryUse:			 0 (KB)
	addressingDuration:		 6999741 (ms)
	readDuration:			 6113173 (ms)
	tapeBeltWear:			 12793592
	tapeMotorWear:			 271
	errorIOCount:			 0

指标写入文件 ./metrics.txt
