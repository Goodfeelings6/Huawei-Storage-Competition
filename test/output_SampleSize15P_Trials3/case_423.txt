

Welcome to HW project.

The file path is: /home/csg/Huawei-Storage-Competition/test/dataset/case_423.txt
head info : [216,119176,0]

io count = 3000


Reading TOUR...done
done
ASCENT_CANDIDATES = 25
BACKBONE_TRIALS = 0
BACKTRACKING = NO
# CANDIDATE_FILE =
CANDIDATE_SET_TYPE = POPMUSIC
# EDGE_FILE =
EXCESS = 0.000166556
EXTRA_CANDIDATES = 0 
EXTRA_CANDIDATE_SET_TYPE = QUADRANT
GAIN23 = YES
GAIN_CRITERION = YES
INITIAL_PERIOD = 3002
INITIAL_STEP_SIZE = 1
INITIAL_TOUR_ALGORITHM = WALK
# INITIAL_TOUR_FILE = 
INITIAL_TOUR_FRACTION = 1.000
# INPUT_TOUR_FILE = 
KICK_TYPE = 0
KICKS = 1
# MAX_BREADTH =
MAX_CANDIDATES = 5 
MAX_SWAPS = 6004
MAX_TRIALS = 6004
# MERGE_TOUR_FILE =
MOVE_TYPE = 3
# NONSEQUENTIAL_MOVE_TYPE = 3
# OPTIMUM =
# OUTPUT_TOUR_FILE = 
PATCHING_A = 1 
PATCHING_C = 0 
# PI_FILE = 
POPMUSIC_INITIAL_TOUR = YES
POPMUSIC_MAX_NEIGHBORS = 5
POPMUSIC_SAMPLE_SIZE = 15
POPMUSIC_SOLUTIONS = 15
POPMUSIC_TRIALS = 3
# POPULATION_SIZE = 0
PRECISION = 100
# PROBLEM_FILE = 
RECOMBINATION = IPT
RESTRICTED_SEARCH = YES
RUNS = 1
SEED = 1
STOP_AT_OPTIMUM = YES
SUBGRADIENT = NO
# SUBPROBLEM_SIZE =
# SUBPROBLEM_TOUR_FILE = 
SUBSEQUENT_MOVE_TYPE = 3
SUBSEQUENT_PATCHING = YES
# TIME_LIMIT =
TOTAL_TIME_LIMIT = 20.0
# TOUR_FILE = 
TRACE_LEVEL = 1

Lower bound = 1274918.0, Ascent time = 1.72 sec.
Cand.min = 2, Cand.avg = 5.8, Cand.max = 7
Edges.fixed = 3003 [Cost = 0]
Preprocessing time = 1.73 sec.
* 1: Cost = 4610535, Time = 0.08 sec. 
* 3: Cost = 4534845, Time = 0.17 sec. 
* 5: Cost = 4514134, Time = 0.24 sec. 
* 7: Cost = 4512005, Time = 0.31 sec. 
* 8: Cost = 4493699, Time = 0.34 sec. 
* 9: Cost = 4490656, Time = 0.37 sec. 
* 10: Cost = 4489707, Time = 0.41 sec. 
* 11: Cost = 4486676, Time = 0.45 sec. 
* 14: Cost = 4486436, Time = 0.55 sec. 
* 15: Cost = 4479090, Time = 0.59 sec. 
* 17: Cost = 4461291, Time = 0.66 sec. 
* 18: Cost = 4460321, Time = 0.69 sec. 
* 19: Cost = 4460068, Time = 0.72 sec. 
* 20: Cost = 4459788, Time = 0.76 sec. 
* 22: Cost = 4459563, Time = 0.82 sec. 
* 23: Cost = 4458405, Time = 0.86 sec. 
* 24: Cost = 4458030, Time = 0.89 sec. 
* 25: Cost = 4457836, Time = 0.92 sec. 
* 26: Cost = 4456214, Time = 0.95 sec. 
* 27: Cost = 4455749, Time = 0.99 sec. 
* 28: Cost = 4455510, Time = 1.02 sec. 
* 31: Cost = 4454072, Time = 1.12 sec. 
* 32: Cost = 4452645, Time = 1.15 sec. 
* 34: Cost = 4451495, Time = 1.22 sec. 
* 35: Cost = 4450637, Time = 1.25 sec. 
* 37: Cost = 4450241, Time = 1.32 sec. 
* 38: Cost = 4449930, Time = 1.35 sec. 
* 40: Cost = 4449830, Time = 1.43 sec. 
* 41: Cost = 4449625, Time = 1.46 sec. 
* 42: Cost = 4449618, Time = 1.49 sec. 
* 43: Cost = 4449556, Time = 1.52 sec. 
* 44: Cost = 4449422, Time = 1.55 sec. 
* 45: Cost = 4449078, Time = 1.59 sec. 
* 46: Cost = 4449053, Time = 1.62 sec. 
* 47: Cost = 4449007, Time = 1.65 sec. 
* 48: Cost = 4448881, Time = 1.69 sec. 
* 49: Cost = 4445098, Time = 1.72 sec. 
* 51: Cost = 4445030, Time = 1.79 sec. 
* 53: Cost = 4443524, Time = 1.85 sec. 
* 56: Cost = 4443423, Time = 1.95 sec. 
* 57: Cost = 4443366, Time = 1.99 sec. 
* 58: Cost = 4443362, Time = 2.02 sec. 
* 59: Cost = 4442766, Time = 2.05 sec. 
* 62: Cost = 4442647, Time = 2.16 sec. 
* 63: Cost = 4442248, Time = 2.20 sec. 
* 64: Cost = 4442132, Time = 2.23 sec. 
* 66: Cost = 4442028, Time = 2.30 sec. 
* 70: Cost = 4441487, Time = 2.43 sec. 
* 71: Cost = 4441307, Time = 2.46 sec. 
* 73: Cost = 4441171, Time = 2.53 sec. 
* 74: Cost = 4441033, Time = 2.56 sec. 
* 75: Cost = 4440993, Time = 2.60 sec. 
* 76: Cost = 4440919, Time = 2.63 sec. 
* 83: Cost = 4440342, Time = 2.85 sec. 
* 84: Cost = 4440276, Time = 2.89 sec. 
* 85: Cost = 4439593, Time = 2.92 sec. 
* 93: Cost = 4439464, Time = 3.19 sec. 
* 94: Cost = 4439452, Time = 3.22 sec. 
* 97: Cost = 4439283, Time = 3.32 sec. 
* 98: Cost = 4439246, Time = 3.35 sec. 
* 102: Cost = 4439230, Time = 3.50 sec. 
* 114: Cost = 4438933, Time = 3.89 sec. 
* 115: Cost = 4438931, Time = 3.92 sec. 
* 116: Cost = 4438828, Time = 3.96 sec. 
* 121: Cost = 4437518, Time = 4.14 sec. 
* 122: Cost = 4437419, Time = 4.18 sec. 
* 139: Cost = 4436892, Time = 4.77 sec. 
* 140: Cost = 4436645, Time = 4.81 sec. 
* 141: Cost = 4432024, Time = 4.84 sec. 
* 143: Cost = 4432002, Time = 4.91 sec. 
* 145: Cost = 4430860, Time = 4.98 sec. 
* 146: Cost = 4430628, Time = 5.01 sec. 
* 149: Cost = 4430627, Time = 5.12 sec. 
* 153: Cost = 4430610, Time = 5.25 sec. 
* 194: Cost = 4430296, Time = 6.65 sec. 
* 199: Cost = 4430289, Time = 6.82 sec. 
* 212: Cost = 4430258, Time = 7.25 sec. 
* 216: Cost = 4430223, Time = 7.38 sec. 
* 221: Cost = 4430207, Time = 7.55 sec. 
* 224: Cost = 4429350, Time = 7.65 sec. 
* 225: Cost = 4429236, Time = 7.68 sec. 
* 226: Cost = 4429202, Time = 7.72 sec. 
* 229: Cost = 4429065, Time = 7.82 sec. 
*** The extent of improvement(1545) is too small in 2.0s ***
Run 1: Cost = 4429065, Time = 8.07 sec. 

Successes/Runs = 0/1
Cost.min = 4429065, Cost.avg = 4429065.00, Cost.max = 4429065
Gap.min = 0.0000%, Gap.avg = 0.0000%, Gap.max = 0.0000%
Trials.min = 236, Trials.avg = 236.0, Trials.max = 236
Time.min = 8.07 sec., Time.avg = 8.07 sec., Time.max = 8.07 sec.
Time.total = 10.09 sec.

Key Metrics:
	ioCount:			 3000
	algorithmRunningDuration:	 10090.496 (ms)
	memoryUse:			 0 (KB)
	addressingDuration:		 4429065 (ms)
	readDuration:			 3143632 (ms)
	tapeBeltWear:			 7598114
	tapeMotorWear:			 165
	errorIOCount:			 0

指标写入文件 ./metrics.txt
