

Welcome to HW project.

The file path is: /home/csg/Huawei-Storage-Competition/test/dataset/case_458.txt
head info : [221,397858,0]

io count = 4000


Reading TOUR...done
done
ASCENT_CANDIDATES = 25
BACKBONE_TRIALS = 0
BACKTRACKING = NO
# CANDIDATE_FILE =
CANDIDATE_SET_TYPE = POPMUSIC
# EDGE_FILE =
EXCESS = 0.000124938
EXTRA_CANDIDATES = 0 
EXTRA_CANDIDATE_SET_TYPE = QUADRANT
GAIN23 = YES
GAIN_CRITERION = YES
INITIAL_PERIOD = 4002
INITIAL_STEP_SIZE = 1
INITIAL_TOUR_ALGORITHM = WALK
# INITIAL_TOUR_FILE = 
INITIAL_TOUR_FRACTION = 1.000
# INPUT_TOUR_FILE = 
KICK_TYPE = 0
KICKS = 1
# MAX_BREADTH =
MAX_CANDIDATES = 5 
MAX_SWAPS = 8004
MAX_TRIALS = 8004
# MERGE_TOUR_FILE =
MOVE_TYPE = 3
# NONSEQUENTIAL_MOVE_TYPE = 3
# OPTIMUM =
# OUTPUT_TOUR_FILE = 
PATCHING_A = 1 
PATCHING_C = 0 
# PI_FILE = 
POPMUSIC_INITIAL_TOUR = YES
POPMUSIC_MAX_NEIGHBORS = 5
POPMUSIC_SAMPLE_SIZE = 15
POPMUSIC_SOLUTIONS = 15
POPMUSIC_TRIALS = 3
# POPULATION_SIZE = 0
PRECISION = 100
# PROBLEM_FILE = 
RECOMBINATION = IPT
RESTRICTED_SEARCH = YES
RUNS = 1
SEED = 1
STOP_AT_OPTIMUM = YES
SUBGRADIENT = NO
# SUBPROBLEM_SIZE =
# SUBPROBLEM_TOUR_FILE = 
SUBSEQUENT_MOVE_TYPE = 3
SUBSEQUENT_PATCHING = YES
# TIME_LIMIT =
TOTAL_TIME_LIMIT = 20.0
# TOUR_FILE = 
TRACE_LEVEL = 1

Lower bound = 1581739.0, Ascent time = 2.81 sec.
Cand.min = 2, Cand.avg = 5.8, Cand.max = 7
Edges.fixed = 4003 [Cost = 0]
Preprocessing time = 2.83 sec.
* 1: Cost = 6223724, Time = 0.13 sec. 
* 2: Cost = 6215833, Time = 0.20 sec. 
* 3: Cost = 6190032, Time = 0.26 sec. 
* 4: Cost = 6186443, Time = 0.30 sec. 
* 5: Cost = 6183873, Time = 0.35 sec. 
* 6: Cost = 6167217, Time = 0.41 sec. 
* 7: Cost = 6161478, Time = 0.45 sec. 
* 9: Cost = 6159628, Time = 0.55 sec. 
* 10: Cost = 6139117, Time = 0.61 sec. 
* 12: Cost = 6138663, Time = 0.71 sec. 
* 13: Cost = 6120479, Time = 0.76 sec. 
* 14: Cost = 6118826, Time = 0.81 sec. 
* 15: Cost = 6118660, Time = 0.85 sec. 
* 16: Cost = 6117065, Time = 0.91 sec. 
* 17: Cost = 6116190, Time = 0.95 sec. 
* 18: Cost = 6115669, Time = 1.00 sec. 
* 19: Cost = 6113279, Time = 1.05 sec. 
* 20: Cost = 6112515, Time = 1.09 sec. 
* 21: Cost = 6112294, Time = 1.15 sec. 
* 22: Cost = 6111807, Time = 1.19 sec. 
* 23: Cost = 6108242, Time = 1.24 sec. 
* 25: Cost = 6107883, Time = 1.34 sec. 
* 26: Cost = 6107439, Time = 1.39 sec. 
* 27: Cost = 6107313, Time = 1.43 sec. 
* 28: Cost = 6107299, Time = 1.48 sec. 
* 29: Cost = 6107064, Time = 1.53 sec. 
* 30: Cost = 6106061, Time = 1.58 sec. 
* 31: Cost = 6105684, Time = 1.64 sec. 
* 32: Cost = 6103174, Time = 1.69 sec. 
* 34: Cost = 6102189, Time = 1.79 sec. 
* 37: Cost = 6101344, Time = 1.93 sec. 
* 38: Cost = 6099005, Time = 1.98 sec. 
* 40: Cost = 6098192, Time = 2.08 sec. 
* 41: Cost = 6098047, Time = 2.13 sec. 
* 43: Cost = 6097889, Time = 2.23 sec. 
* 44: Cost = 6097790, Time = 2.28 sec. 
* 45: Cost = 6097443, Time = 2.33 sec. 
* 46: Cost = 6097259, Time = 2.38 sec. 
* 47: Cost = 6096539, Time = 2.44 sec. 
* 49: Cost = 6096349, Time = 2.53 sec. 
* 59: Cost = 6096191, Time = 3.02 sec. 
* 62: Cost = 6093882, Time = 3.16 sec. 
* 63: Cost = 6092350, Time = 3.21 sec. 
* 64: Cost = 6092126, Time = 3.26 sec. 
* 65: Cost = 6091202, Time = 3.31 sec. 
* 66: Cost = 6091000, Time = 3.36 sec. 
* 69: Cost = 6089825, Time = 3.49 sec. 
* 70: Cost = 6089650, Time = 3.54 sec. 
* 71: Cost = 6089584, Time = 3.58 sec. 
* 72: Cost = 6089418, Time = 3.62 sec. 
* 73: Cost = 6089400, Time = 3.67 sec. 
* 75: Cost = 6089296, Time = 3.76 sec. 
* 78: Cost = 6088810, Time = 3.90 sec. 
* 80: Cost = 6088266, Time = 4.00 sec. 
* 84: Cost = 6087785, Time = 4.20 sec. 
* 85: Cost = 6087489, Time = 4.25 sec. 
* 87: Cost = 6086919, Time = 4.35 sec. 
* 88: Cost = 6086653, Time = 4.41 sec. 
* 89: Cost = 6086531, Time = 4.47 sec. 
* 90: Cost = 6085815, Time = 4.52 sec. 
* 94: Cost = 6085648, Time = 4.70 sec. 
* 97: Cost = 6085597, Time = 4.84 sec. 
* 98: Cost = 6085095, Time = 4.89 sec. 
* 100: Cost = 6085061, Time = 4.99 sec. 
* 101: Cost = 6085045, Time = 5.04 sec. 
* 103: Cost = 6084914, Time = 5.14 sec. 
* 105: Cost = 6084874, Time = 5.24 sec. 
* 106: Cost = 6084667, Time = 5.29 sec. 
* 110: Cost = 6084039, Time = 5.49 sec. 
* 112: Cost = 6084002, Time = 5.59 sec. 
* 113: Cost = 6083981, Time = 5.65 sec. 
* 114: Cost = 6083908, Time = 5.70 sec. 
* 116: Cost = 6083797, Time = 5.81 sec. 
* 117: Cost = 6082720, Time = 5.87 sec. 
* 119: Cost = 6082549, Time = 5.98 sec. 
* 123: Cost = 6081666, Time = 6.18 sec. 
* 125: Cost = 6081323, Time = 6.28 sec. 
* 131: Cost = 6081300, Time = 6.57 sec. 
* 137: Cost = 6081293, Time = 6.87 sec. 
* 142: Cost = 6081196, Time = 7.13 sec. 
* 146: Cost = 6081190, Time = 7.34 sec. 
* 148: Cost = 6081095, Time = 7.43 sec. 
* 150: Cost = 6081066, Time = 7.53 sec. 
* 151: Cost = 6080944, Time = 7.57 sec. 
*** The extent of improvement(1605) is too small in 2.0s ***
Run 1: Cost = 6080944, Time = 8.14 sec. 

Successes/Runs = 0/1
Cost.min = 6080944, Cost.avg = 6080944.00, Cost.max = 6080944
Gap.min = 0.0000%, Gap.avg = 0.0000%, Gap.max = 0.0000%
Trials.min = 163, Trials.avg = 163.0, Trials.max = 163
Time.min = 8.14 sec., Time.avg = 8.14 sec., Time.max = 8.14 sec.
Time.total = 11.48 sec.

Key Metrics:
	ioCount:			 4000
	algorithmRunningDuration:	 11476.334 (ms)
	memoryUse:			 0 (KB)
	addressingDuration:		 6080944 (ms)
	readDuration:			 4138333 (ms)
	tapeBeltWear:			 10242787
	tapeMotorWear:			 197
	errorIOCount:			 0

指标写入文件 ./metrics.txt
