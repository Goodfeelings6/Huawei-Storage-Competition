

Welcome to HW project.

The file path is: /home/csg/Huawei-Storage-Competition/test/dataset/case_209.txt
head info : [127,472712,1]

io count = 5000


Reading TOUR...done
done
ASCENT_CANDIDATES = 25
BACKBONE_TRIALS = 0
BACKTRACKING = NO
# CANDIDATE_FILE =
CANDIDATE_SET_TYPE = POPMUSIC
# EDGE_FILE =
EXCESS = 9.996e-05
EXTRA_CANDIDATES = 0 
EXTRA_CANDIDATE_SET_TYPE = QUADRANT
GAIN23 = YES
GAIN_CRITERION = YES
INITIAL_PERIOD = 5002
INITIAL_STEP_SIZE = 1
INITIAL_TOUR_ALGORITHM = WALK
# INITIAL_TOUR_FILE = 
INITIAL_TOUR_FRACTION = 1.000
# INPUT_TOUR_FILE = 
KICK_TYPE = 0
KICKS = 1
# MAX_BREADTH =
MAX_CANDIDATES = 5 
MAX_SWAPS = 10004
MAX_TRIALS = 10004
# MERGE_TOUR_FILE =
MOVE_TYPE = 3
# NONSEQUENTIAL_MOVE_TYPE = 3
# OPTIMUM =
# OUTPUT_TOUR_FILE = 
PATCHING_A = 1 
PATCHING_C = 0 
# PI_FILE = 
POPMUSIC_INITIAL_TOUR = YES
POPMUSIC_MAX_NEIGHBORS = 5
POPMUSIC_SAMPLE_SIZE = 15
POPMUSIC_SOLUTIONS = 15
POPMUSIC_TRIALS = 3
# POPULATION_SIZE = 0
PRECISION = 100
# PROBLEM_FILE = 
RECOMBINATION = IPT
RESTRICTED_SEARCH = YES
RUNS = 1
SEED = 1
STOP_AT_OPTIMUM = YES
SUBGRADIENT = NO
# SUBPROBLEM_SIZE =
# SUBPROBLEM_TOUR_FILE = 
SUBSEQUENT_MOVE_TYPE = 3
SUBSEQUENT_PATCHING = YES
# TIME_LIMIT =
TOTAL_TIME_LIMIT = 20.0
# TOUR_FILE = 
TRACE_LEVEL = 1

Lower bound = 1651095.0, Ascent time = 3.97 sec.
Cand.min = 2, Cand.avg = 5.8, Cand.max = 7
Edges.fixed = 5003 [Cost = 0]
Preprocessing time = 3.99 sec.
* 1: Cost = 6727268, Time = 0.18 sec. 
* 2: Cost = 6697366, Time = 0.27 sec. 
* 3: Cost = 6684564, Time = 0.34 sec. 
* 5: Cost = 6681839, Time = 0.47 sec. 
* 6: Cost = 6666416, Time = 0.54 sec. 
* 7: Cost = 6657605, Time = 0.61 sec. 
* 8: Cost = 6657523, Time = 0.68 sec. 
* 9: Cost = 6656673, Time = 0.74 sec. 
* 11: Cost = 6652470, Time = 0.87 sec. 
* 12: Cost = 6637759, Time = 0.95 sec. 
* 13: Cost = 6637332, Time = 1.00 sec. 
* 14: Cost = 6633062, Time = 1.06 sec. 
* 15: Cost = 6632938, Time = 1.13 sec. 
* 16: Cost = 6632764, Time = 1.19 sec. 
* 17: Cost = 6630711, Time = 1.27 sec. 
* 18: Cost = 6627435, Time = 1.34 sec. 
* 19: Cost = 6627274, Time = 1.40 sec. 
* 21: Cost = 6626576, Time = 1.53 sec. 
* 22: Cost = 6626403, Time = 1.61 sec. 
* 23: Cost = 6623352, Time = 1.67 sec. 
* 24: Cost = 6623223, Time = 1.74 sec. 
* 25: Cost = 6622436, Time = 1.81 sec. 
* 26: Cost = 6620713, Time = 1.87 sec. 
* 28: Cost = 6620240, Time = 1.99 sec. 
* 29: Cost = 6619328, Time = 2.06 sec. 
* 31: Cost = 6619314, Time = 2.18 sec. 
* 32: Cost = 6618625, Time = 2.24 sec. 
* 34: Cost = 6617089, Time = 2.36 sec. 
* 35: Cost = 6616477, Time = 2.43 sec. 
* 36: Cost = 6613975, Time = 2.49 sec. 
* 38: Cost = 6613945, Time = 2.63 sec. 
* 40: Cost = 6613644, Time = 2.76 sec. 
* 42: Cost = 6613477, Time = 2.89 sec. 
* 43: Cost = 6613140, Time = 2.95 sec. 
* 44: Cost = 6612956, Time = 3.02 sec. 
* 45: Cost = 6612447, Time = 3.09 sec. 
* 46: Cost = 6611991, Time = 3.15 sec. 
* 47: Cost = 6611967, Time = 3.21 sec. 
* 49: Cost = 6611921, Time = 3.33 sec. 
* 51: Cost = 6611789, Time = 3.46 sec. 
* 52: Cost = 6611719, Time = 3.52 sec. 
* 53: Cost = 6611634, Time = 3.59 sec. 
* 55: Cost = 6609378, Time = 3.72 sec. 
* 56: Cost = 6609075, Time = 3.79 sec. 
* 58: Cost = 6609005, Time = 3.91 sec. 
* 59: Cost = 6608885, Time = 3.97 sec. 
* 61: Cost = 6608852, Time = 4.10 sec. 
* 62: Cost = 6608797, Time = 4.16 sec. 
* 65: Cost = 6608024, Time = 4.36 sec. 
* 67: Cost = 6607791, Time = 4.49 sec. 
* 68: Cost = 6607769, Time = 4.55 sec. 
* 69: Cost = 6607385, Time = 4.62 sec. 
* 70: Cost = 6607135, Time = 4.68 sec. 
* 72: Cost = 6606901, Time = 4.81 sec. 
* 74: Cost = 6606813, Time = 4.93 sec. 
* 75: Cost = 6606797, Time = 4.99 sec. 
* 77: Cost = 6606758, Time = 5.10 sec. 
* 78: Cost = 6606495, Time = 5.18 sec. 
* 85: Cost = 6604641, Time = 5.62 sec. 
* 87: Cost = 6604593, Time = 5.74 sec. 
* 90: Cost = 6604443, Time = 5.93 sec. 
* 91: Cost = 6603717, Time = 6.00 sec. 
* 92: Cost = 6603650, Time = 6.07 sec. 
* 93: Cost = 6603501, Time = 6.14 sec. 
* 96: Cost = 6603499, Time = 6.35 sec. 
* 97: Cost = 6603434, Time = 6.42 sec. 
* 100: Cost = 6603280, Time = 6.62 sec. 
* 102: Cost = 6603273, Time = 6.74 sec. 
* 103: Cost = 6603096, Time = 6.80 sec. 
* 104: Cost = 6603082, Time = 6.86 sec. 
* 105: Cost = 6603076, Time = 6.92 sec. 
* 109: Cost = 6602325, Time = 7.18 sec. 
* 114: Cost = 6602284, Time = 7.50 sec. 
* 117: Cost = 6602221, Time = 7.70 sec. 
* 121: Cost = 6601942, Time = 7.95 sec. 
* 122: Cost = 6601840, Time = 8.02 sec. 
* 123: Cost = 6601835, Time = 8.08 sec. 
*** The extent of improvement(1666) is too small in 2.0s ***
Run 1: Cost = 6601835, Time = 8.15 sec. 

Successes/Runs = 0/1
Cost.min = 6601835, Cost.avg = 6601835.00, Cost.max = 6601835
Gap.min = 0.0000%, Gap.avg = 0.0000%, Gap.max = 0.0000%
Trials.min = 124, Trials.avg = 124.0, Trials.max = 124
Time.min = 8.15 sec., Time.avg = 8.15 sec., Time.max = 8.15 sec.
Time.total = 12.91 sec.

Key Metrics:
	ioCount:			 5000
	algorithmRunningDuration:	 12912.533 (ms)
	memoryUse:			 0 (KB)
	addressingDuration:		 6601835 (ms)
	readDuration:			 5231620 (ms)
	tapeBeltWear:			 11525930
	tapeMotorWear:			 274
	errorIOCount:			 0

指标写入文件 ./metrics.txt
