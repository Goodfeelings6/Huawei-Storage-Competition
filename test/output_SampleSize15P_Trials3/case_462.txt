

Welcome to HW project.

The file path is: /home/csg/Huawei-Storage-Competition/test/dataset/case_462.txt
head info : [269,658599,0]

io count = 4000


Reading TOUR...done
done
ASCENT_CANDIDATES = 25
BACKBONE_TRIALS = 0
BACKTRACKING = NO
# CANDIDATE_FILE =
CANDIDATE_SET_TYPE = POPMUSIC
# EDGE_FILE =
EXCESS = 0.000124938
EXTRA_CANDIDATES = 0 
EXTRA_CANDIDATE_SET_TYPE = QUADRANT
GAIN23 = YES
GAIN_CRITERION = YES
INITIAL_PERIOD = 4002
INITIAL_STEP_SIZE = 1
INITIAL_TOUR_ALGORITHM = WALK
# INITIAL_TOUR_FILE = 
INITIAL_TOUR_FRACTION = 1.000
# INPUT_TOUR_FILE = 
KICK_TYPE = 0
KICKS = 1
# MAX_BREADTH =
MAX_CANDIDATES = 5 
MAX_SWAPS = 8004
MAX_TRIALS = 8004
# MERGE_TOUR_FILE =
MOVE_TYPE = 3
# NONSEQUENTIAL_MOVE_TYPE = 3
# OPTIMUM =
# OUTPUT_TOUR_FILE = 
PATCHING_A = 1 
PATCHING_C = 0 
# PI_FILE = 
POPMUSIC_INITIAL_TOUR = YES
POPMUSIC_MAX_NEIGHBORS = 5
POPMUSIC_SAMPLE_SIZE = 15
POPMUSIC_SOLUTIONS = 15
POPMUSIC_TRIALS = 3
# POPULATION_SIZE = 0
PRECISION = 100
# PROBLEM_FILE = 
RECOMBINATION = IPT
RESTRICTED_SEARCH = YES
RUNS = 1
SEED = 1
STOP_AT_OPTIMUM = YES
SUBGRADIENT = NO
# SUBPROBLEM_SIZE =
# SUBPROBLEM_TOUR_FILE = 
SUBSEQUENT_MOVE_TYPE = 3
SUBSEQUENT_PATCHING = YES
# TIME_LIMIT =
TOTAL_TIME_LIMIT = 20.0
# TOUR_FILE = 
TRACE_LEVEL = 1

Lower bound = 1449528.0, Ascent time = 2.81 sec.
Cand.min = 2, Cand.avg = 5.8, Cand.max = 7
Edges.fixed = 4003 [Cost = 0]
Preprocessing time = 2.83 sec.
* 1: Cost = 5096873, Time = 0.16 sec. 
* 2: Cost = 5063275, Time = 0.24 sec. 
* 3: Cost = 5049922, Time = 0.30 sec. 
* 4: Cost = 5048670, Time = 0.35 sec. 
* 5: Cost = 5041722, Time = 0.40 sec. 
* 6: Cost = 5040966, Time = 0.46 sec. 
* 7: Cost = 5040498, Time = 0.51 sec. 
* 8: Cost = 5040081, Time = 0.57 sec. 
* 9: Cost = 5039674, Time = 0.64 sec. 
* 10: Cost = 5039624, Time = 0.69 sec. 
* 11: Cost = 5039346, Time = 0.75 sec. 
* 12: Cost = 5039283, Time = 0.80 sec. 
* 13: Cost = 5039255, Time = 0.85 sec. 
* 14: Cost = 5039032, Time = 0.90 sec. 
* 15: Cost = 5036803, Time = 0.95 sec. 
* 16: Cost = 5036563, Time = 1.00 sec. 
* 17: Cost = 5036374, Time = 1.05 sec. 
* 18: Cost = 5036142, Time = 1.10 sec. 
* 19: Cost = 5021286, Time = 1.16 sec. 
* 20: Cost = 5020432, Time = 1.21 sec. 
* 21: Cost = 5020119, Time = 1.26 sec. 
* 22: Cost = 5020061, Time = 1.32 sec. 
* 23: Cost = 5019794, Time = 1.38 sec. 
* 24: Cost = 5019784, Time = 1.43 sec. 
* 26: Cost = 5017814, Time = 1.53 sec. 
* 27: Cost = 5015191, Time = 1.60 sec. 
* 28: Cost = 5015143, Time = 1.65 sec. 
* 29: Cost = 5013579, Time = 1.71 sec. 
* 30: Cost = 5013140, Time = 1.76 sec. 
* 31: Cost = 5012997, Time = 1.81 sec. 
* 32: Cost = 5012858, Time = 1.87 sec. 
* 33: Cost = 5012232, Time = 1.93 sec. 
* 34: Cost = 5012116, Time = 1.99 sec. 
* 40: Cost = 5012021, Time = 2.33 sec. 
* 41: Cost = 5011995, Time = 2.38 sec. 
* 43: Cost = 5011282, Time = 2.49 sec. 
* 44: Cost = 5011147, Time = 2.55 sec. 
* 45: Cost = 5006265, Time = 2.61 sec. 
* 48: Cost = 5006161, Time = 2.76 sec. 
* 49: Cost = 5005898, Time = 2.82 sec. 
* 51: Cost = 5005805, Time = 2.93 sec. 
* 52: Cost = 5005677, Time = 2.98 sec. 
* 53: Cost = 5005280, Time = 3.03 sec. 
* 54: Cost = 5004884, Time = 3.09 sec. 
* 55: Cost = 5004717, Time = 3.15 sec. 
* 56: Cost = 5004660, Time = 3.21 sec. 
* 57: Cost = 5004630, Time = 3.26 sec. 
* 58: Cost = 5004427, Time = 3.31 sec. 
* 60: Cost = 5004414, Time = 3.43 sec. 
* 61: Cost = 5004220, Time = 3.48 sec. 
* 62: Cost = 5004043, Time = 3.53 sec. 
* 63: Cost = 5004041, Time = 3.58 sec. 
* 64: Cost = 5003901, Time = 3.64 sec. 
* 68: Cost = 5003003, Time = 3.86 sec. 
* 71: Cost = 5002467, Time = 4.04 sec. 
* 72: Cost = 5002360, Time = 4.10 sec. 
* 73: Cost = 5002112, Time = 4.16 sec. 
* 76: Cost = 5002105, Time = 4.33 sec. 
* 80: Cost = 5001224, Time = 4.55 sec. 
* 87: Cost = 5001194, Time = 4.94 sec. 
* 91: Cost = 5001109, Time = 5.16 sec. 
* 92: Cost = 5001030, Time = 5.21 sec. 
* 95: Cost = 5000901, Time = 5.40 sec. 
* 98: Cost = 5000858, Time = 5.56 sec. 
* 99: Cost = 5000552, Time = 5.62 sec. 
* 100: Cost = 5000512, Time = 5.67 sec. 
* 103: Cost = 5000458, Time = 5.84 sec. 
* 108: Cost = 5000296, Time = 6.15 sec. 
* 112: Cost = 5000179, Time = 6.37 sec. 
* 117: Cost = 5000149, Time = 6.65 sec. 
* 121: Cost = 5000072, Time = 6.90 sec. 
* 126: Cost = 4999896, Time = 7.17 sec. 
* 128: Cost = 4999889, Time = 7.28 sec. 
* 129: Cost = 4999817, Time = 7.34 sec. 
* 134: Cost = 4999815, Time = 7.62 sec. 
* 136: Cost = 4999524, Time = 7.73 sec. 
* 137: Cost = 4999371, Time = 7.79 sec. 
* 138: Cost = 4999299, Time = 7.86 sec. 
* 139: Cost = 4999059, Time = 7.92 sec. 
* 141: Cost = 4998992, Time = 8.03 sec. 
* 142: Cost = 4998904, Time = 8.10 sec. 
*** The extent of improvement(1392) is too small in 2.0s ***
Run 1: Cost = 4998904, Time = 8.16 sec. 

Successes/Runs = 0/1
Cost.min = 4998904, Cost.avg = 4998904.00, Cost.max = 4998904
Gap.min = 0.0000%, Gap.avg = 0.0000%, Gap.max = 0.0000%
Trials.min = 143, Trials.avg = 143.0, Trials.max = 143
Time.min = 8.16 sec., Time.avg = 8.16 sec., Time.max = 8.16 sec.
Time.total = 11.52 sec.

Key Metrics:
	ioCount:			 4000
	algorithmRunningDuration:	 11521.635 (ms)
	memoryUse:			 0 (KB)
	addressingDuration:		 4998904 (ms)
	readDuration:			 4137108 (ms)
	tapeBeltWear:			 9056158
	tapeMotorWear:			 177
	errorIOCount:			 0

指标写入文件 ./metrics.txt
